//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Vectra {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet2 : global::System.Data.DataSet {
        
        private configurationDataTable tableconfiguration;
        
        private customerDataTable tablecustomer;
        
        private debtorsDataTable tabledebtors;
        
        private glDataTable tablegl;
        
        private gl_categoryDataTable tablegl_category;
        
        private gl_txnsDataTable tablegl_txns;
        
        private INVOICE_HEADERDataTable tableINVOICE_HEADER;
        
        private invoice_itemsDataTable tableinvoice_items;
        
        private payment_typeDataTable tablepayment_type;
        
        private product_typeDataTable tableproduct_type;
        
        private productsDataTable tableproducts;
        
        private sqlite_sequenceDataTable tablesqlite_sequence;
        
        private customer_transDataTable tablecustomer_trans;
        
        private debtors_summaryDataTable tabledebtors_summary;
        
        private invoice_header_customerDataTable tableinvoice_header_customer;
        
        private invoice_header_unpaidDataTable tableinvoice_header_unpaid;
        
        private SalesSummary1DataTable tableSalesSummary1;
        
        private ProductSalesSummaryDataTable tableProductSalesSummary;
        
        private ProductSalesReportDataTable tableProductSalesReport;
        
        private PaymentAdjustRptDataTable tablePaymentAdjustRpt;
        
        private autoVacDataTable tableautoVac;
        
        private INVOICE_RECIEPTSDataTable tableINVOICE_RECIEPTS;
        
        private global::System.Data.DataRelation relationinvHeader_invItems;
        
        private global::System.Data.DataRelation relationproducts_invoice_items;
        
        private global::System.Data.DataRelation relationcustomer_trans_customer;
        
        private global::System.Data.DataRelation relationdebtors_summary_customer;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["configuration"] != null)) {
                    base.Tables.Add(new configurationDataTable(ds.Tables["configuration"]));
                }
                if ((ds.Tables["customer"] != null)) {
                    base.Tables.Add(new customerDataTable(ds.Tables["customer"]));
                }
                if ((ds.Tables["debtors"] != null)) {
                    base.Tables.Add(new debtorsDataTable(ds.Tables["debtors"]));
                }
                if ((ds.Tables["gl"] != null)) {
                    base.Tables.Add(new glDataTable(ds.Tables["gl"]));
                }
                if ((ds.Tables["gl_category"] != null)) {
                    base.Tables.Add(new gl_categoryDataTable(ds.Tables["gl_category"]));
                }
                if ((ds.Tables["gl_txns"] != null)) {
                    base.Tables.Add(new gl_txnsDataTable(ds.Tables["gl_txns"]));
                }
                if ((ds.Tables["INVOICE_HEADER"] != null)) {
                    base.Tables.Add(new INVOICE_HEADERDataTable(ds.Tables["INVOICE_HEADER"]));
                }
                if ((ds.Tables["invoice_items"] != null)) {
                    base.Tables.Add(new invoice_itemsDataTable(ds.Tables["invoice_items"]));
                }
                if ((ds.Tables["payment_type"] != null)) {
                    base.Tables.Add(new payment_typeDataTable(ds.Tables["payment_type"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["products"] != null)) {
                    base.Tables.Add(new productsDataTable(ds.Tables["products"]));
                }
                if ((ds.Tables["sqlite_sequence"] != null)) {
                    base.Tables.Add(new sqlite_sequenceDataTable(ds.Tables["sqlite_sequence"]));
                }
                if ((ds.Tables["customer_trans"] != null)) {
                    base.Tables.Add(new customer_transDataTable(ds.Tables["customer_trans"]));
                }
                if ((ds.Tables["debtors_summary"] != null)) {
                    base.Tables.Add(new debtors_summaryDataTable(ds.Tables["debtors_summary"]));
                }
                if ((ds.Tables["invoice_header_customer"] != null)) {
                    base.Tables.Add(new invoice_header_customerDataTable(ds.Tables["invoice_header_customer"]));
                }
                if ((ds.Tables["invoice_header_unpaid"] != null)) {
                    base.Tables.Add(new invoice_header_unpaidDataTable(ds.Tables["invoice_header_unpaid"]));
                }
                if ((ds.Tables["SalesSummary1"] != null)) {
                    base.Tables.Add(new SalesSummary1DataTable(ds.Tables["SalesSummary1"]));
                }
                if ((ds.Tables["ProductSalesSummary"] != null)) {
                    base.Tables.Add(new ProductSalesSummaryDataTable(ds.Tables["ProductSalesSummary"]));
                }
                if ((ds.Tables["ProductSalesReport"] != null)) {
                    base.Tables.Add(new ProductSalesReportDataTable(ds.Tables["ProductSalesReport"]));
                }
                if ((ds.Tables["PaymentAdjustRpt"] != null)) {
                    base.Tables.Add(new PaymentAdjustRptDataTable(ds.Tables["PaymentAdjustRpt"]));
                }
                if ((ds.Tables["autoVac"] != null)) {
                    base.Tables.Add(new autoVacDataTable(ds.Tables["autoVac"]));
                }
                if ((ds.Tables["INVOICE_RECIEPTS"] != null)) {
                    base.Tables.Add(new INVOICE_RECIEPTSDataTable(ds.Tables["INVOICE_RECIEPTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public configurationDataTable configuration {
            get {
                return this.tableconfiguration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public customerDataTable customer {
            get {
                return this.tablecustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public debtorsDataTable debtors {
            get {
                return this.tabledebtors;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public glDataTable gl {
            get {
                return this.tablegl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public gl_categoryDataTable gl_category {
            get {
                return this.tablegl_category;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public gl_txnsDataTable gl_txns {
            get {
                return this.tablegl_txns;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INVOICE_HEADERDataTable INVOICE_HEADER {
            get {
                return this.tableINVOICE_HEADER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoice_itemsDataTable invoice_items {
            get {
                return this.tableinvoice_items;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public payment_typeDataTable payment_type {
            get {
                return this.tablepayment_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_typeDataTable product_type {
            get {
                return this.tableproduct_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public productsDataTable products {
            get {
                return this.tableproducts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sqlite_sequenceDataTable sqlite_sequence {
            get {
                return this.tablesqlite_sequence;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public customer_transDataTable customer_trans {
            get {
                return this.tablecustomer_trans;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public debtors_summaryDataTable debtors_summary {
            get {
                return this.tabledebtors_summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoice_header_customerDataTable invoice_header_customer {
            get {
                return this.tableinvoice_header_customer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoice_header_unpaidDataTable invoice_header_unpaid {
            get {
                return this.tableinvoice_header_unpaid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSummary1DataTable SalesSummary1 {
            get {
                return this.tableSalesSummary1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductSalesSummaryDataTable ProductSalesSummary {
            get {
                return this.tableProductSalesSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductSalesReportDataTable ProductSalesReport {
            get {
                return this.tableProductSalesReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentAdjustRptDataTable PaymentAdjustRpt {
            get {
                return this.tablePaymentAdjustRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public autoVacDataTable autoVac {
            get {
                return this.tableautoVac;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INVOICE_RECIEPTSDataTable INVOICE_RECIEPTS {
            get {
                return this.tableINVOICE_RECIEPTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["configuration"] != null)) {
                    base.Tables.Add(new configurationDataTable(ds.Tables["configuration"]));
                }
                if ((ds.Tables["customer"] != null)) {
                    base.Tables.Add(new customerDataTable(ds.Tables["customer"]));
                }
                if ((ds.Tables["debtors"] != null)) {
                    base.Tables.Add(new debtorsDataTable(ds.Tables["debtors"]));
                }
                if ((ds.Tables["gl"] != null)) {
                    base.Tables.Add(new glDataTable(ds.Tables["gl"]));
                }
                if ((ds.Tables["gl_category"] != null)) {
                    base.Tables.Add(new gl_categoryDataTable(ds.Tables["gl_category"]));
                }
                if ((ds.Tables["gl_txns"] != null)) {
                    base.Tables.Add(new gl_txnsDataTable(ds.Tables["gl_txns"]));
                }
                if ((ds.Tables["INVOICE_HEADER"] != null)) {
                    base.Tables.Add(new INVOICE_HEADERDataTable(ds.Tables["INVOICE_HEADER"]));
                }
                if ((ds.Tables["invoice_items"] != null)) {
                    base.Tables.Add(new invoice_itemsDataTable(ds.Tables["invoice_items"]));
                }
                if ((ds.Tables["payment_type"] != null)) {
                    base.Tables.Add(new payment_typeDataTable(ds.Tables["payment_type"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["products"] != null)) {
                    base.Tables.Add(new productsDataTable(ds.Tables["products"]));
                }
                if ((ds.Tables["sqlite_sequence"] != null)) {
                    base.Tables.Add(new sqlite_sequenceDataTable(ds.Tables["sqlite_sequence"]));
                }
                if ((ds.Tables["customer_trans"] != null)) {
                    base.Tables.Add(new customer_transDataTable(ds.Tables["customer_trans"]));
                }
                if ((ds.Tables["debtors_summary"] != null)) {
                    base.Tables.Add(new debtors_summaryDataTable(ds.Tables["debtors_summary"]));
                }
                if ((ds.Tables["invoice_header_customer"] != null)) {
                    base.Tables.Add(new invoice_header_customerDataTable(ds.Tables["invoice_header_customer"]));
                }
                if ((ds.Tables["invoice_header_unpaid"] != null)) {
                    base.Tables.Add(new invoice_header_unpaidDataTable(ds.Tables["invoice_header_unpaid"]));
                }
                if ((ds.Tables["SalesSummary1"] != null)) {
                    base.Tables.Add(new SalesSummary1DataTable(ds.Tables["SalesSummary1"]));
                }
                if ((ds.Tables["ProductSalesSummary"] != null)) {
                    base.Tables.Add(new ProductSalesSummaryDataTable(ds.Tables["ProductSalesSummary"]));
                }
                if ((ds.Tables["ProductSalesReport"] != null)) {
                    base.Tables.Add(new ProductSalesReportDataTable(ds.Tables["ProductSalesReport"]));
                }
                if ((ds.Tables["PaymentAdjustRpt"] != null)) {
                    base.Tables.Add(new PaymentAdjustRptDataTable(ds.Tables["PaymentAdjustRpt"]));
                }
                if ((ds.Tables["autoVac"] != null)) {
                    base.Tables.Add(new autoVacDataTable(ds.Tables["autoVac"]));
                }
                if ((ds.Tables["INVOICE_RECIEPTS"] != null)) {
                    base.Tables.Add(new INVOICE_RECIEPTSDataTable(ds.Tables["INVOICE_RECIEPTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableconfiguration = ((configurationDataTable)(base.Tables["configuration"]));
            if ((initTable == true)) {
                if ((this.tableconfiguration != null)) {
                    this.tableconfiguration.InitVars();
                }
            }
            this.tablecustomer = ((customerDataTable)(base.Tables["customer"]));
            if ((initTable == true)) {
                if ((this.tablecustomer != null)) {
                    this.tablecustomer.InitVars();
                }
            }
            this.tabledebtors = ((debtorsDataTable)(base.Tables["debtors"]));
            if ((initTable == true)) {
                if ((this.tabledebtors != null)) {
                    this.tabledebtors.InitVars();
                }
            }
            this.tablegl = ((glDataTable)(base.Tables["gl"]));
            if ((initTable == true)) {
                if ((this.tablegl != null)) {
                    this.tablegl.InitVars();
                }
            }
            this.tablegl_category = ((gl_categoryDataTable)(base.Tables["gl_category"]));
            if ((initTable == true)) {
                if ((this.tablegl_category != null)) {
                    this.tablegl_category.InitVars();
                }
            }
            this.tablegl_txns = ((gl_txnsDataTable)(base.Tables["gl_txns"]));
            if ((initTable == true)) {
                if ((this.tablegl_txns != null)) {
                    this.tablegl_txns.InitVars();
                }
            }
            this.tableINVOICE_HEADER = ((INVOICE_HEADERDataTable)(base.Tables["INVOICE_HEADER"]));
            if ((initTable == true)) {
                if ((this.tableINVOICE_HEADER != null)) {
                    this.tableINVOICE_HEADER.InitVars();
                }
            }
            this.tableinvoice_items = ((invoice_itemsDataTable)(base.Tables["invoice_items"]));
            if ((initTable == true)) {
                if ((this.tableinvoice_items != null)) {
                    this.tableinvoice_items.InitVars();
                }
            }
            this.tablepayment_type = ((payment_typeDataTable)(base.Tables["payment_type"]));
            if ((initTable == true)) {
                if ((this.tablepayment_type != null)) {
                    this.tablepayment_type.InitVars();
                }
            }
            this.tableproduct_type = ((product_typeDataTable)(base.Tables["product_type"]));
            if ((initTable == true)) {
                if ((this.tableproduct_type != null)) {
                    this.tableproduct_type.InitVars();
                }
            }
            this.tableproducts = ((productsDataTable)(base.Tables["products"]));
            if ((initTable == true)) {
                if ((this.tableproducts != null)) {
                    this.tableproducts.InitVars();
                }
            }
            this.tablesqlite_sequence = ((sqlite_sequenceDataTable)(base.Tables["sqlite_sequence"]));
            if ((initTable == true)) {
                if ((this.tablesqlite_sequence != null)) {
                    this.tablesqlite_sequence.InitVars();
                }
            }
            this.tablecustomer_trans = ((customer_transDataTable)(base.Tables["customer_trans"]));
            if ((initTable == true)) {
                if ((this.tablecustomer_trans != null)) {
                    this.tablecustomer_trans.InitVars();
                }
            }
            this.tabledebtors_summary = ((debtors_summaryDataTable)(base.Tables["debtors_summary"]));
            if ((initTable == true)) {
                if ((this.tabledebtors_summary != null)) {
                    this.tabledebtors_summary.InitVars();
                }
            }
            this.tableinvoice_header_customer = ((invoice_header_customerDataTable)(base.Tables["invoice_header_customer"]));
            if ((initTable == true)) {
                if ((this.tableinvoice_header_customer != null)) {
                    this.tableinvoice_header_customer.InitVars();
                }
            }
            this.tableinvoice_header_unpaid = ((invoice_header_unpaidDataTable)(base.Tables["invoice_header_unpaid"]));
            if ((initTable == true)) {
                if ((this.tableinvoice_header_unpaid != null)) {
                    this.tableinvoice_header_unpaid.InitVars();
                }
            }
            this.tableSalesSummary1 = ((SalesSummary1DataTable)(base.Tables["SalesSummary1"]));
            if ((initTable == true)) {
                if ((this.tableSalesSummary1 != null)) {
                    this.tableSalesSummary1.InitVars();
                }
            }
            this.tableProductSalesSummary = ((ProductSalesSummaryDataTable)(base.Tables["ProductSalesSummary"]));
            if ((initTable == true)) {
                if ((this.tableProductSalesSummary != null)) {
                    this.tableProductSalesSummary.InitVars();
                }
            }
            this.tableProductSalesReport = ((ProductSalesReportDataTable)(base.Tables["ProductSalesReport"]));
            if ((initTable == true)) {
                if ((this.tableProductSalesReport != null)) {
                    this.tableProductSalesReport.InitVars();
                }
            }
            this.tablePaymentAdjustRpt = ((PaymentAdjustRptDataTable)(base.Tables["PaymentAdjustRpt"]));
            if ((initTable == true)) {
                if ((this.tablePaymentAdjustRpt != null)) {
                    this.tablePaymentAdjustRpt.InitVars();
                }
            }
            this.tableautoVac = ((autoVacDataTable)(base.Tables["autoVac"]));
            if ((initTable == true)) {
                if ((this.tableautoVac != null)) {
                    this.tableautoVac.InitVars();
                }
            }
            this.tableINVOICE_RECIEPTS = ((INVOICE_RECIEPTSDataTable)(base.Tables["INVOICE_RECIEPTS"]));
            if ((initTable == true)) {
                if ((this.tableINVOICE_RECIEPTS != null)) {
                    this.tableINVOICE_RECIEPTS.InitVars();
                }
            }
            this.relationinvHeader_invItems = this.Relations["invHeader_invItems"];
            this.relationproducts_invoice_items = this.Relations["products_invoice_items"];
            this.relationcustomer_trans_customer = this.Relations["customer_trans_customer"];
            this.relationdebtors_summary_customer = this.Relations["debtors_summary_customer"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableconfiguration = new configurationDataTable();
            base.Tables.Add(this.tableconfiguration);
            this.tablecustomer = new customerDataTable();
            base.Tables.Add(this.tablecustomer);
            this.tabledebtors = new debtorsDataTable();
            base.Tables.Add(this.tabledebtors);
            this.tablegl = new glDataTable();
            base.Tables.Add(this.tablegl);
            this.tablegl_category = new gl_categoryDataTable();
            base.Tables.Add(this.tablegl_category);
            this.tablegl_txns = new gl_txnsDataTable();
            base.Tables.Add(this.tablegl_txns);
            this.tableINVOICE_HEADER = new INVOICE_HEADERDataTable();
            base.Tables.Add(this.tableINVOICE_HEADER);
            this.tableinvoice_items = new invoice_itemsDataTable();
            base.Tables.Add(this.tableinvoice_items);
            this.tablepayment_type = new payment_typeDataTable();
            base.Tables.Add(this.tablepayment_type);
            this.tableproduct_type = new product_typeDataTable();
            base.Tables.Add(this.tableproduct_type);
            this.tableproducts = new productsDataTable();
            base.Tables.Add(this.tableproducts);
            this.tablesqlite_sequence = new sqlite_sequenceDataTable();
            base.Tables.Add(this.tablesqlite_sequence);
            this.tablecustomer_trans = new customer_transDataTable();
            base.Tables.Add(this.tablecustomer_trans);
            this.tabledebtors_summary = new debtors_summaryDataTable();
            base.Tables.Add(this.tabledebtors_summary);
            this.tableinvoice_header_customer = new invoice_header_customerDataTable();
            base.Tables.Add(this.tableinvoice_header_customer);
            this.tableinvoice_header_unpaid = new invoice_header_unpaidDataTable();
            base.Tables.Add(this.tableinvoice_header_unpaid);
            this.tableSalesSummary1 = new SalesSummary1DataTable();
            base.Tables.Add(this.tableSalesSummary1);
            this.tableProductSalesSummary = new ProductSalesSummaryDataTable();
            base.Tables.Add(this.tableProductSalesSummary);
            this.tableProductSalesReport = new ProductSalesReportDataTable();
            base.Tables.Add(this.tableProductSalesReport);
            this.tablePaymentAdjustRpt = new PaymentAdjustRptDataTable();
            base.Tables.Add(this.tablePaymentAdjustRpt);
            this.tableautoVac = new autoVacDataTable();
            base.Tables.Add(this.tableautoVac);
            this.tableINVOICE_RECIEPTS = new INVOICE_RECIEPTSDataTable();
            base.Tables.Add(this.tableINVOICE_RECIEPTS);
            this.relationinvHeader_invItems = new global::System.Data.DataRelation("invHeader_invItems", new global::System.Data.DataColumn[] {
                        this.tableINVOICE_HEADER.invoice_numberColumn}, new global::System.Data.DataColumn[] {
                        this.tableinvoice_items.invoice_numberColumn}, false);
            this.Relations.Add(this.relationinvHeader_invItems);
            this.relationproducts_invoice_items = new global::System.Data.DataRelation("products_invoice_items", new global::System.Data.DataColumn[] {
                        this.tableproducts.prod_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableinvoice_items.prod_idColumn}, false);
            this.Relations.Add(this.relationproducts_invoice_items);
            this.relationcustomer_trans_customer = new global::System.Data.DataRelation("customer_trans_customer", new global::System.Data.DataColumn[] {
                        this.tablecustomer.cust_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablecustomer_trans.t_cust_idColumn}, false);
            this.Relations.Add(this.relationcustomer_trans_customer);
            this.relationdebtors_summary_customer = new global::System.Data.DataRelation("debtors_summary_customer", new global::System.Data.DataColumn[] {
                        this.tabledebtors_summary.cust_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablecustomer_trans.t_cust_idColumn}, false);
            this.Relations.Add(this.relationdebtors_summary_customer);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeconfiguration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedebtors() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegl_category() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializegl_txns() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeINVOICE_HEADER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinvoice_items() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepayment_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproduct_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproducts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesqlite_sequence() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecustomer_trans() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedebtors_summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinvoice_header_customer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinvoice_header_unpaid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesSummary1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProductSalesSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProductSalesReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePaymentAdjustRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeautoVac() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeINVOICE_RECIEPTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet2 ds = new DataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void configurationRowChangeEventHandler(object sender, configurationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void customerRowChangeEventHandler(object sender, customerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void debtorsRowChangeEventHandler(object sender, debtorsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void glRowChangeEventHandler(object sender, glRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void gl_categoryRowChangeEventHandler(object sender, gl_categoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void gl_txnsRowChangeEventHandler(object sender, gl_txnsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void INVOICE_HEADERRowChangeEventHandler(object sender, INVOICE_HEADERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void invoice_itemsRowChangeEventHandler(object sender, invoice_itemsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void payment_typeRowChangeEventHandler(object sender, payment_typeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void product_typeRowChangeEventHandler(object sender, product_typeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void productsRowChangeEventHandler(object sender, productsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sqlite_sequenceRowChangeEventHandler(object sender, sqlite_sequenceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void customer_transRowChangeEventHandler(object sender, customer_transRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void debtors_summaryRowChangeEventHandler(object sender, debtors_summaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void invoice_header_customerRowChangeEventHandler(object sender, invoice_header_customerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void invoice_header_unpaidRowChangeEventHandler(object sender, invoice_header_unpaidRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SalesSummary1RowChangeEventHandler(object sender, SalesSummary1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductSalesSummaryRowChangeEventHandler(object sender, ProductSalesSummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductSalesReportRowChangeEventHandler(object sender, ProductSalesReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PaymentAdjustRptRowChangeEventHandler(object sender, PaymentAdjustRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void autoVacRowChangeEventHandler(object sender, autoVacRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void INVOICE_RECIEPTSRowChangeEventHandler(object sender, INVOICE_RECIEPTSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class configurationDataTable : global::System.Data.TypedTableBase<configurationRow> {
            
            private global::System.Data.DataColumn columnbus_names;
            
            private global::System.Data.DataColumn columnbus_addr1;
            
            private global::System.Data.DataColumn columnbus_addr2;
            
            private global::System.Data.DataColumn columnbus_post_code;
            
            private global::System.Data.DataColumn columnbus_phone;
            
            private global::System.Data.DataColumn columngl_sales;
            
            private global::System.Data.DataColumn columngl_sales_gst;
            
            private global::System.Data.DataColumn columngl_bank;
            
            private global::System.Data.DataColumn columngl_adj;
            
            private global::System.Data.DataColumn columngl_disc;
            
            private global::System.Data.DataColumn columnStatementDate;
            
            private global::System.Data.DataColumn columnacnt_period;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationDataTable() {
                this.TableName = "configuration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal configurationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected configurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bus_namesColumn {
                get {
                    return this.columnbus_names;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bus_addr1Column {
                get {
                    return this.columnbus_addr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bus_addr2Column {
                get {
                    return this.columnbus_addr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bus_post_codeColumn {
                get {
                    return this.columnbus_post_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bus_phoneColumn {
                get {
                    return this.columnbus_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_salesColumn {
                get {
                    return this.columngl_sales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_sales_gstColumn {
                get {
                    return this.columngl_sales_gst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_bankColumn {
                get {
                    return this.columngl_bank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_adjColumn {
                get {
                    return this.columngl_adj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_discColumn {
                get {
                    return this.columngl_disc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatementDateColumn {
                get {
                    return this.columnStatementDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn acnt_periodColumn {
                get {
                    return this.columnacnt_period;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationRow this[int index] {
                get {
                    return ((configurationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event configurationRowChangeEventHandler configurationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event configurationRowChangeEventHandler configurationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event configurationRowChangeEventHandler configurationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event configurationRowChangeEventHandler configurationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddconfigurationRow(configurationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationRow AddconfigurationRow(string bus_names, string bus_addr1, string bus_addr2, string bus_post_code, string bus_phone, string gl_sales, string gl_sales_gst, string gl_bank, string gl_adj, string gl_disc, System.DateTime StatementDate, string acnt_period) {
                configurationRow rowconfigurationRow = ((configurationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        bus_names,
                        bus_addr1,
                        bus_addr2,
                        bus_post_code,
                        bus_phone,
                        gl_sales,
                        gl_sales_gst,
                        gl_bank,
                        gl_adj,
                        gl_disc,
                        StatementDate,
                        acnt_period};
                rowconfigurationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowconfigurationRow);
                return rowconfigurationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                configurationDataTable cln = ((configurationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new configurationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbus_names = base.Columns["bus_names"];
                this.columnbus_addr1 = base.Columns["bus_addr1"];
                this.columnbus_addr2 = base.Columns["bus_addr2"];
                this.columnbus_post_code = base.Columns["bus_post_code"];
                this.columnbus_phone = base.Columns["bus_phone"];
                this.columngl_sales = base.Columns["gl_sales"];
                this.columngl_sales_gst = base.Columns["gl_sales_gst"];
                this.columngl_bank = base.Columns["gl_bank"];
                this.columngl_adj = base.Columns["gl_adj"];
                this.columngl_disc = base.Columns["gl_disc"];
                this.columnStatementDate = base.Columns["StatementDate"];
                this.columnacnt_period = base.Columns["acnt_period"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbus_names = new global::System.Data.DataColumn("bus_names", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbus_names);
                this.columnbus_addr1 = new global::System.Data.DataColumn("bus_addr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbus_addr1);
                this.columnbus_addr2 = new global::System.Data.DataColumn("bus_addr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbus_addr2);
                this.columnbus_post_code = new global::System.Data.DataColumn("bus_post_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbus_post_code);
                this.columnbus_phone = new global::System.Data.DataColumn("bus_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbus_phone);
                this.columngl_sales = new global::System.Data.DataColumn("gl_sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_sales);
                this.columngl_sales_gst = new global::System.Data.DataColumn("gl_sales_gst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_sales_gst);
                this.columngl_bank = new global::System.Data.DataColumn("gl_bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_bank);
                this.columngl_adj = new global::System.Data.DataColumn("gl_adj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_adj);
                this.columngl_disc = new global::System.Data.DataColumn("gl_disc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_disc);
                this.columnStatementDate = new global::System.Data.DataColumn("StatementDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementDate);
                this.columnacnt_period = new global::System.Data.DataColumn("acnt_period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacnt_period);
                this.columnbus_names.MaxLength = 2147483647;
                this.columnbus_addr1.MaxLength = 2147483647;
                this.columnbus_addr2.MaxLength = 2147483647;
                this.columnbus_post_code.MaxLength = 2147483647;
                this.columnbus_phone.MaxLength = 2147483647;
                this.columngl_sales.MaxLength = 2147483647;
                this.columngl_sales_gst.MaxLength = 2147483647;
                this.columngl_bank.MaxLength = 2147483647;
                this.columngl_adj.MaxLength = 2147483647;
                this.columngl_disc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationRow NewconfigurationRow() {
                return ((configurationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new configurationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(configurationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.configurationRowChanged != null)) {
                    this.configurationRowChanged(this, new configurationRowChangeEvent(((configurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.configurationRowChanging != null)) {
                    this.configurationRowChanging(this, new configurationRowChangeEvent(((configurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.configurationRowDeleted != null)) {
                    this.configurationRowDeleted(this, new configurationRowChangeEvent(((configurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.configurationRowDeleting != null)) {
                    this.configurationRowDeleting(this, new configurationRowChangeEvent(((configurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveconfigurationRow(configurationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "configurationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class customerDataTable : global::System.Data.TypedTableBase<customerRow> {
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columnname_address_1;
            
            private global::System.Data.DataColumn columnname_address_2;
            
            private global::System.Data.DataColumn columnname_address_3;
            
            private global::System.Data.DataColumn columnname_address_4;
            
            private global::System.Data.DataColumn columnpcode;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columncontact_name;
            
            private global::System.Data.DataColumn columnabn;
            
            private global::System.Data.DataColumn columncredit_rating;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columndunning;
            
            private global::System.Data.DataColumn columnavg_payment;
            
            private global::System.Data.DataColumn columnopen_bal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerDataTable() {
                this.TableName = "customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected customerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_address_1Column {
                get {
                    return this.columnname_address_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_address_2Column {
                get {
                    return this.columnname_address_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_address_3Column {
                get {
                    return this.columnname_address_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_address_4Column {
                get {
                    return this.columnname_address_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pcodeColumn {
                get {
                    return this.columnpcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn contact_nameColumn {
                get {
                    return this.columncontact_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn abnColumn {
                get {
                    return this.columnabn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn credit_ratingColumn {
                get {
                    return this.columncredit_rating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dunningColumn {
                get {
                    return this.columndunning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn avg_paymentColumn {
                get {
                    return this.columnavg_payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn open_balColumn {
                get {
                    return this.columnopen_bal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow this[int index] {
                get {
                    return ((customerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customerRowChangeEventHandler customerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcustomerRow(customerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow AddcustomerRow(string name_address_1, string name_address_2, string name_address_3, string name_address_4, string pcode, string phone, string contact_name, string abn, string credit_rating, string notes, string dunning, decimal avg_payment, double open_bal) {
                customerRow rowcustomerRow = ((customerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name_address_1,
                        name_address_2,
                        name_address_3,
                        name_address_4,
                        pcode,
                        phone,
                        contact_name,
                        abn,
                        credit_rating,
                        notes,
                        dunning,
                        avg_payment,
                        open_bal};
                rowcustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcustomerRow);
                return rowcustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow FindBycust_id(long cust_id) {
                return ((customerRow)(this.Rows.Find(new object[] {
                            cust_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                customerDataTable cln = ((customerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new customerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncust_id = base.Columns["cust_id"];
                this.columnname_address_1 = base.Columns["name_address_1"];
                this.columnname_address_2 = base.Columns["name_address_2"];
                this.columnname_address_3 = base.Columns["name_address_3"];
                this.columnname_address_4 = base.Columns["name_address_4"];
                this.columnpcode = base.Columns["pcode"];
                this.columnphone = base.Columns["phone"];
                this.columncontact_name = base.Columns["contact_name"];
                this.columnabn = base.Columns["abn"];
                this.columncredit_rating = base.Columns["credit_rating"];
                this.columnnotes = base.Columns["notes"];
                this.columndunning = base.Columns["dunning"];
                this.columnavg_payment = base.Columns["avg_payment"];
                this.columnopen_bal = base.Columns["open_bal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columnname_address_1 = new global::System.Data.DataColumn("name_address_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_address_1);
                this.columnname_address_2 = new global::System.Data.DataColumn("name_address_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_address_2);
                this.columnname_address_3 = new global::System.Data.DataColumn("name_address_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_address_3);
                this.columnname_address_4 = new global::System.Data.DataColumn("name_address_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_address_4);
                this.columnpcode = new global::System.Data.DataColumn("pcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcode);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columncontact_name = new global::System.Data.DataColumn("contact_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact_name);
                this.columnabn = new global::System.Data.DataColumn("abn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabn);
                this.columncredit_rating = new global::System.Data.DataColumn("credit_rating", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_rating);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columndunning = new global::System.Data.DataColumn("dunning", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndunning);
                this.columnavg_payment = new global::System.Data.DataColumn("avg_payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavg_payment);
                this.columnopen_bal = new global::System.Data.DataColumn("open_bal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopen_bal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncust_id}, true));
                this.columncust_id.AutoIncrement = true;
                this.columncust_id.AutoIncrementSeed = 2000;
                this.columncust_id.AllowDBNull = false;
                this.columncust_id.Unique = true;
                this.columnname_address_1.MaxLength = 2147483647;
                this.columnname_address_2.MaxLength = 2147483647;
                this.columnname_address_3.MaxLength = 2147483647;
                this.columnname_address_4.MaxLength = 2147483647;
                this.columnpcode.MaxLength = 2147483647;
                this.columnphone.MaxLength = 2147483647;
                this.columncontact_name.MaxLength = 2147483647;
                this.columnabn.MaxLength = 2147483647;
                this.columncredit_rating.MaxLength = 2147483647;
                this.columnnotes.MaxLength = 2147483647;
                this.columndunning.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow NewcustomerRow() {
                return ((customerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new customerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(customerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.customerRowChanged != null)) {
                    this.customerRowChanged(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.customerRowChanging != null)) {
                    this.customerRowChanging(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.customerRowDeleted != null)) {
                    this.customerRowDeleted(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.customerRowDeleting != null)) {
                    this.customerRowDeleting(this, new customerRowChangeEvent(((customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecustomerRow(customerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "customerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class debtorsDataTable : global::System.Data.TypedTableBase<debtorsRow> {
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columninvoice_amount;
            
            private global::System.Data.DataColumn columnamount_outstanding;
            
            private global::System.Data.DataColumn columntxn_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsDataTable() {
                this.TableName = "debtors";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal debtorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected debtorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_amountColumn {
                get {
                    return this.columninvoice_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amount_outstandingColumn {
                get {
                    return this.columnamount_outstanding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn txn_dateColumn {
                get {
                    return this.columntxn_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRow this[int index] {
                get {
                    return ((debtorsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtorsRowChangeEventHandler debtorsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtorsRowChangeEventHandler debtorsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtorsRowChangeEventHandler debtorsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtorsRowChangeEventHandler debtorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddebtorsRow(debtorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRow AdddebtorsRow(long cust_id, long invoice_number, double invoice_amount, double amount_outstanding, string txn_date) {
                debtorsRow rowdebtorsRow = ((debtorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cust_id,
                        invoice_number,
                        invoice_amount,
                        amount_outstanding,
                        txn_date};
                rowdebtorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdebtorsRow);
                return rowdebtorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRow FindBycust_idinvoice_number(long cust_id, long invoice_number) {
                return ((debtorsRow)(this.Rows.Find(new object[] {
                            cust_id,
                            invoice_number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                debtorsDataTable cln = ((debtorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new debtorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncust_id = base.Columns["cust_id"];
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columninvoice_amount = base.Columns["invoice_amount"];
                this.columnamount_outstanding = base.Columns["amount_outstanding"];
                this.columntxn_date = base.Columns["txn_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columninvoice_amount = new global::System.Data.DataColumn("invoice_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_amount);
                this.columnamount_outstanding = new global::System.Data.DataColumn("amount_outstanding", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount_outstanding);
                this.columntxn_date = new global::System.Data.DataColumn("txn_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntxn_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncust_id,
                                this.columninvoice_number}, true));
                this.columncust_id.AllowDBNull = false;
                this.columninvoice_number.AllowDBNull = false;
                this.columntxn_date.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRow NewdebtorsRow() {
                return ((debtorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new debtorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(debtorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.debtorsRowChanged != null)) {
                    this.debtorsRowChanged(this, new debtorsRowChangeEvent(((debtorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.debtorsRowChanging != null)) {
                    this.debtorsRowChanging(this, new debtorsRowChangeEvent(((debtorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.debtorsRowDeleted != null)) {
                    this.debtorsRowDeleted(this, new debtorsRowChangeEvent(((debtorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.debtorsRowDeleting != null)) {
                    this.debtorsRowDeleting(this, new debtorsRowChangeEvent(((debtorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedebtorsRow(debtorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "debtorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class glDataTable : global::System.Data.TypedTableBase<glRow> {
            
            private global::System.Data.DataColumn columngl_id;
            
            private global::System.Data.DataColumn columndesc;
            
            private global::System.Data.DataColumn columncategory_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glDataTable() {
                this.TableName = "gl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal glDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected glDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_idColumn {
                get {
                    return this.columngl_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn category_idColumn {
                get {
                    return this.columncategory_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glRow this[int index] {
                get {
                    return ((glRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event glRowChangeEventHandler glRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event glRowChangeEventHandler glRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event glRowChangeEventHandler glRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event glRowChangeEventHandler glRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddglRow(glRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glRow AddglRow(string gl_id, string desc, long category_id) {
                glRow rowglRow = ((glRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        gl_id,
                        desc,
                        category_id};
                rowglRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowglRow);
                return rowglRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                glDataTable cln = ((glDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new glDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columngl_id = base.Columns["gl_id"];
                this.columndesc = base.Columns["desc"];
                this.columncategory_id = base.Columns["category_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columngl_id = new global::System.Data.DataColumn("gl_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_id);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.columncategory_id = new global::System.Data.DataColumn("category_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_id);
                this.columngl_id.MaxLength = 2147483647;
                this.columndesc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glRow NewglRow() {
                return ((glRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new glRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(glRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.glRowChanged != null)) {
                    this.glRowChanged(this, new glRowChangeEvent(((glRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.glRowChanging != null)) {
                    this.glRowChanging(this, new glRowChangeEvent(((glRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.glRowDeleted != null)) {
                    this.glRowDeleted(this, new glRowChangeEvent(((glRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.glRowDeleting != null)) {
                    this.glRowDeleting(this, new glRowChangeEvent(((glRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveglRow(glRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "glDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class gl_categoryDataTable : global::System.Data.TypedTableBase<gl_categoryRow> {
            
            private global::System.Data.DataColumn columncategory_id;
            
            private global::System.Data.DataColumn columndesc;
            
            private global::System.Data.DataColumn columndbcr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryDataTable() {
                this.TableName = "gl_category";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gl_categoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected gl_categoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn category_idColumn {
                get {
                    return this.columncategory_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dbcrColumn {
                get {
                    return this.columndbcr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRow this[int index] {
                get {
                    return ((gl_categoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_categoryRowChangeEventHandler gl_categoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_categoryRowChangeEventHandler gl_categoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_categoryRowChangeEventHandler gl_categoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_categoryRowChangeEventHandler gl_categoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addgl_categoryRow(gl_categoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRow Addgl_categoryRow(long category_id, string desc, string dbcr) {
                gl_categoryRow rowgl_categoryRow = ((gl_categoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        category_id,
                        desc,
                        dbcr};
                rowgl_categoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgl_categoryRow);
                return rowgl_categoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRow FindBycategory_id(long category_id) {
                return ((gl_categoryRow)(this.Rows.Find(new object[] {
                            category_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                gl_categoryDataTable cln = ((gl_categoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new gl_categoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncategory_id = base.Columns["category_id"];
                this.columndesc = base.Columns["desc"];
                this.columndbcr = base.Columns["dbcr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncategory_id = new global::System.Data.DataColumn("category_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_id);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.columndbcr = new global::System.Data.DataColumn("dbcr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbcr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncategory_id}, true));
                this.columncategory_id.AllowDBNull = false;
                this.columncategory_id.Unique = true;
                this.columndesc.MaxLength = 2147483647;
                this.columndbcr.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRow Newgl_categoryRow() {
                return ((gl_categoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new gl_categoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(gl_categoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.gl_categoryRowChanged != null)) {
                    this.gl_categoryRowChanged(this, new gl_categoryRowChangeEvent(((gl_categoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.gl_categoryRowChanging != null)) {
                    this.gl_categoryRowChanging(this, new gl_categoryRowChangeEvent(((gl_categoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.gl_categoryRowDeleted != null)) {
                    this.gl_categoryRowDeleted(this, new gl_categoryRowChangeEvent(((gl_categoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.gl_categoryRowDeleting != null)) {
                    this.gl_categoryRowDeleting(this, new gl_categoryRowChangeEvent(((gl_categoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removegl_categoryRow(gl_categoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "gl_categoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class gl_txnsDataTable : global::System.Data.TypedTableBase<gl_txnsRow> {
            
            private global::System.Data.DataColumn columngl_id;
            
            private global::System.Data.DataColumn columntxn_id;
            
            private global::System.Data.DataColumn columnreference;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnsource;
            
            private global::System.Data.DataColumn columndate_from;
            
            private global::System.Data.DataColumn columndate_to;
            
            private global::System.Data.DataColumn columnqty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsDataTable() {
                this.TableName = "gl_txns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gl_txnsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected gl_txnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gl_idColumn {
                get {
                    return this.columngl_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn txn_idColumn {
                get {
                    return this.columntxn_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn referenceColumn {
                get {
                    return this.columnreference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sourceColumn {
                get {
                    return this.columnsource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_fromColumn {
                get {
                    return this.columndate_from;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_toColumn {
                get {
                    return this.columndate_to;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRow this[int index] {
                get {
                    return ((gl_txnsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_txnsRowChangeEventHandler gl_txnsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_txnsRowChangeEventHandler gl_txnsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_txnsRowChangeEventHandler gl_txnsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event gl_txnsRowChangeEventHandler gl_txnsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addgl_txnsRow(gl_txnsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRow Addgl_txnsRow(string gl_id, long txn_id, string reference, double amount, string source, string date_from, string date_to, long qty) {
                gl_txnsRow rowgl_txnsRow = ((gl_txnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        gl_id,
                        txn_id,
                        reference,
                        amount,
                        source,
                        date_from,
                        date_to,
                        qty};
                rowgl_txnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgl_txnsRow);
                return rowgl_txnsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRow FindBytxn_id(long txn_id) {
                return ((gl_txnsRow)(this.Rows.Find(new object[] {
                            txn_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                gl_txnsDataTable cln = ((gl_txnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new gl_txnsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columngl_id = base.Columns["gl_id"];
                this.columntxn_id = base.Columns["txn_id"];
                this.columnreference = base.Columns["reference"];
                this.columnamount = base.Columns["amount"];
                this.columnsource = base.Columns["source"];
                this.columndate_from = base.Columns["date_from"];
                this.columndate_to = base.Columns["date_to"];
                this.columnqty = base.Columns["qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columngl_id = new global::System.Data.DataColumn("gl_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngl_id);
                this.columntxn_id = new global::System.Data.DataColumn("txn_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntxn_id);
                this.columnreference = new global::System.Data.DataColumn("reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreference);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnsource = new global::System.Data.DataColumn("source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource);
                this.columndate_from = new global::System.Data.DataColumn("date_from", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_from);
                this.columndate_to = new global::System.Data.DataColumn("date_to", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_to);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntxn_id}, true));
                this.columngl_id.MaxLength = 2147483647;
                this.columntxn_id.AllowDBNull = false;
                this.columntxn_id.Unique = true;
                this.columnreference.MaxLength = 2147483647;
                this.columnsource.MaxLength = 2147483647;
                this.columndate_from.MaxLength = 2147483647;
                this.columndate_to.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRow Newgl_txnsRow() {
                return ((gl_txnsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new gl_txnsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(gl_txnsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.gl_txnsRowChanged != null)) {
                    this.gl_txnsRowChanged(this, new gl_txnsRowChangeEvent(((gl_txnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.gl_txnsRowChanging != null)) {
                    this.gl_txnsRowChanging(this, new gl_txnsRowChangeEvent(((gl_txnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.gl_txnsRowDeleted != null)) {
                    this.gl_txnsRowDeleted(this, new gl_txnsRowChangeEvent(((gl_txnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.gl_txnsRowDeleting != null)) {
                    this.gl_txnsRowDeleting(this, new gl_txnsRowChangeEvent(((gl_txnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removegl_txnsRow(gl_txnsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "gl_txnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INVOICE_HEADERDataTable : global::System.Data.TypedTableBase<INVOICE_HEADERRow> {
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columninvoice_date;
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columndocket_number;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columntext_fully_paid;
            
            private global::System.Data.DataColumn columninvoice_amount;
            
            private global::System.Data.DataColumn columninvoice_unpaid;
            
            private global::System.Data.DataColumn columninvoice_locked;
            
            private global::System.Data.DataColumn columnrecent_payment;
            
            private global::System.Data.DataColumn columnsort_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERDataTable() {
                this.TableName = "INVOICE_HEADER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal INVOICE_HEADERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected INVOICE_HEADERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_dateColumn {
                get {
                    return this.columninvoice_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn docket_numberColumn {
                get {
                    return this.columndocket_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn text_fully_paidColumn {
                get {
                    return this.columntext_fully_paid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_amountColumn {
                get {
                    return this.columninvoice_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_unpaidColumn {
                get {
                    return this.columninvoice_unpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_lockedColumn {
                get {
                    return this.columninvoice_locked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recent_paymentColumn {
                get {
                    return this.columnrecent_payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sort_dateColumn {
                get {
                    return this.columnsort_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow this[int index] {
                get {
                    return ((INVOICE_HEADERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_HEADERRowChangeEventHandler INVOICE_HEADERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_HEADERRowChangeEventHandler INVOICE_HEADERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_HEADERRowChangeEventHandler INVOICE_HEADERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_HEADERRowChangeEventHandler INVOICE_HEADERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddINVOICE_HEADERRow(INVOICE_HEADERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow AddINVOICE_HEADERRow(string invoice_date, long cust_id, string docket_number, string notes, string text_fully_paid, double invoice_amount, double invoice_unpaid, long invoice_locked, double recent_payment, string sort_date) {
                INVOICE_HEADERRow rowINVOICE_HEADERRow = ((INVOICE_HEADERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        invoice_date,
                        cust_id,
                        docket_number,
                        notes,
                        text_fully_paid,
                        invoice_amount,
                        invoice_unpaid,
                        invoice_locked,
                        recent_payment,
                        sort_date};
                rowINVOICE_HEADERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINVOICE_HEADERRow);
                return rowINVOICE_HEADERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow FindByinvoice_number(long invoice_number) {
                return ((INVOICE_HEADERRow)(this.Rows.Find(new object[] {
                            invoice_number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INVOICE_HEADERDataTable cln = ((INVOICE_HEADERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INVOICE_HEADERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columninvoice_date = base.Columns["invoice_date"];
                this.columncust_id = base.Columns["cust_id"];
                this.columndocket_number = base.Columns["docket_number"];
                this.columnnotes = base.Columns["notes"];
                this.columntext_fully_paid = base.Columns["text_fully_paid"];
                this.columninvoice_amount = base.Columns["invoice_amount"];
                this.columninvoice_unpaid = base.Columns["invoice_unpaid"];
                this.columninvoice_locked = base.Columns["invoice_locked"];
                this.columnrecent_payment = base.Columns["recent_payment"];
                this.columnsort_date = base.Columns["sort_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columninvoice_date = new global::System.Data.DataColumn("invoice_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_date);
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columndocket_number = new global::System.Data.DataColumn("docket_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocket_number);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columntext_fully_paid = new global::System.Data.DataColumn("text_fully_paid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntext_fully_paid);
                this.columninvoice_amount = new global::System.Data.DataColumn("invoice_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_amount);
                this.columninvoice_unpaid = new global::System.Data.DataColumn("invoice_unpaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_unpaid);
                this.columninvoice_locked = new global::System.Data.DataColumn("invoice_locked", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_locked);
                this.columnrecent_payment = new global::System.Data.DataColumn("recent_payment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecent_payment);
                this.columnsort_date = new global::System.Data.DataColumn("sort_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsort_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoice_number}, true));
                this.columninvoice_number.AutoIncrement = true;
                this.columninvoice_number.AutoIncrementSeed = 1000;
                this.columninvoice_number.AllowDBNull = false;
                this.columninvoice_number.Unique = true;
                this.columndocket_number.MaxLength = 2147483647;
                this.columnnotes.MaxLength = 2147483647;
                this.columntext_fully_paid.DefaultValue = ((string)("No"));
                this.columntext_fully_paid.MaxLength = 2147483647;
                this.columnsort_date.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow NewINVOICE_HEADERRow() {
                return ((INVOICE_HEADERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INVOICE_HEADERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INVOICE_HEADERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INVOICE_HEADERRowChanged != null)) {
                    this.INVOICE_HEADERRowChanged(this, new INVOICE_HEADERRowChangeEvent(((INVOICE_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INVOICE_HEADERRowChanging != null)) {
                    this.INVOICE_HEADERRowChanging(this, new INVOICE_HEADERRowChangeEvent(((INVOICE_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INVOICE_HEADERRowDeleted != null)) {
                    this.INVOICE_HEADERRowDeleted(this, new INVOICE_HEADERRowChangeEvent(((INVOICE_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INVOICE_HEADERRowDeleting != null)) {
                    this.INVOICE_HEADERRowDeleting(this, new INVOICE_HEADERRowChangeEvent(((INVOICE_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveINVOICE_HEADERRow(INVOICE_HEADERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INVOICE_HEADERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoice_itemsDataTable : global::System.Data.TypedTableBase<invoice_itemsRow> {
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columnline_number;
            
            private global::System.Data.DataColumn columnprod_id;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columngst_value;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnqty_rate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsDataTable() {
                this.TableName = "invoice_items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_itemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected invoice_itemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn line_numberColumn {
                get {
                    return this.columnline_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prod_idColumn {
                get {
                    return this.columnprod_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gst_valueColumn {
                get {
                    return this.columngst_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qty_rateColumn {
                get {
                    return this.columnqty_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow this[int index] {
                get {
                    return ((invoice_itemsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_itemsRowChangeEventHandler invoice_itemsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_itemsRowChangeEventHandler invoice_itemsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_itemsRowChangeEventHandler invoice_itemsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_itemsRowChangeEventHandler invoice_itemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addinvoice_itemsRow(invoice_itemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow Addinvoice_itemsRow(INVOICE_HEADERRow parentINVOICE_HEADERRowByinvHeader_invItems, long line_number, productsRow parentproductsRowByproducts_invoice_items, double qty, double weight, double rate, double gst_value, double amount, string qty_rate) {
                invoice_itemsRow rowinvoice_itemsRow = ((invoice_itemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        line_number,
                        null,
                        qty,
                        weight,
                        rate,
                        gst_value,
                        amount,
                        qty_rate};
                if ((parentINVOICE_HEADERRowByinvHeader_invItems != null)) {
                    columnValuesArray[0] = parentINVOICE_HEADERRowByinvHeader_invItems[0];
                }
                if ((parentproductsRowByproducts_invoice_items != null)) {
                    columnValuesArray[2] = parentproductsRowByproducts_invoice_items[0];
                }
                rowinvoice_itemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoice_itemsRow);
                return rowinvoice_itemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow FindByinvoice_numberline_number(long invoice_number, long line_number) {
                return ((invoice_itemsRow)(this.Rows.Find(new object[] {
                            invoice_number,
                            line_number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                invoice_itemsDataTable cln = ((invoice_itemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoice_itemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columnline_number = base.Columns["line_number"];
                this.columnprod_id = base.Columns["prod_id"];
                this.columnqty = base.Columns["qty"];
                this.columnweight = base.Columns["weight"];
                this.columnrate = base.Columns["rate"];
                this.columngst_value = base.Columns["gst_value"];
                this.columnamount = base.Columns["amount"];
                this.columnqty_rate = base.Columns["qty_rate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columnline_number = new global::System.Data.DataColumn("line_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnline_number);
                this.columnprod_id = new global::System.Data.DataColumn("prod_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_id);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columngst_value = new global::System.Data.DataColumn("gst_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngst_value);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnqty_rate = new global::System.Data.DataColumn("qty_rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty_rate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoice_number,
                                this.columnline_number}, true));
                this.columninvoice_number.AllowDBNull = false;
                this.columnline_number.AllowDBNull = false;
                this.columnprod_id.MaxLength = 2147483647;
                this.columnqty_rate.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow Newinvoice_itemsRow() {
                return ((invoice_itemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoice_itemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(invoice_itemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoice_itemsRowChanged != null)) {
                    this.invoice_itemsRowChanged(this, new invoice_itemsRowChangeEvent(((invoice_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoice_itemsRowChanging != null)) {
                    this.invoice_itemsRowChanging(this, new invoice_itemsRowChangeEvent(((invoice_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoice_itemsRowDeleted != null)) {
                    this.invoice_itemsRowDeleted(this, new invoice_itemsRowChangeEvent(((invoice_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoice_itemsRowDeleting != null)) {
                    this.invoice_itemsRowDeleting(this, new invoice_itemsRowChangeEvent(((invoice_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeinvoice_itemsRow(invoice_itemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoice_itemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class payment_typeDataTable : global::System.Data.TypedTableBase<payment_typeRow> {
            
            private global::System.Data.DataColumn columnpayment_type_id;
            
            private global::System.Data.DataColumn columndesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeDataTable() {
                this.TableName = "payment_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal payment_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected payment_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn payment_type_idColumn {
                get {
                    return this.columnpayment_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRow this[int index] {
                get {
                    return ((payment_typeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event payment_typeRowChangeEventHandler payment_typeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event payment_typeRowChangeEventHandler payment_typeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event payment_typeRowChangeEventHandler payment_typeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event payment_typeRowChangeEventHandler payment_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addpayment_typeRow(payment_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRow Addpayment_typeRow(long payment_type_id, string desc) {
                payment_typeRow rowpayment_typeRow = ((payment_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        payment_type_id,
                        desc};
                rowpayment_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpayment_typeRow);
                return rowpayment_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRow FindBypayment_type_id(long payment_type_id) {
                return ((payment_typeRow)(this.Rows.Find(new object[] {
                            payment_type_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                payment_typeDataTable cln = ((payment_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new payment_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpayment_type_id = base.Columns["payment_type_id"];
                this.columndesc = base.Columns["desc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpayment_type_id = new global::System.Data.DataColumn("payment_type_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_type_id);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpayment_type_id}, true));
                this.columnpayment_type_id.AllowDBNull = false;
                this.columnpayment_type_id.Unique = true;
                this.columndesc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRow Newpayment_typeRow() {
                return ((payment_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new payment_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(payment_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.payment_typeRowChanged != null)) {
                    this.payment_typeRowChanged(this, new payment_typeRowChangeEvent(((payment_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.payment_typeRowChanging != null)) {
                    this.payment_typeRowChanging(this, new payment_typeRowChangeEvent(((payment_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.payment_typeRowDeleted != null)) {
                    this.payment_typeRowDeleted(this, new payment_typeRowChangeEvent(((payment_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.payment_typeRowDeleting != null)) {
                    this.payment_typeRowDeleting(this, new payment_typeRowChangeEvent(((payment_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removepayment_typeRow(payment_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "payment_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_typeDataTable : global::System.Data.TypedTableBase<product_typeRow> {
            
            private global::System.Data.DataColumn columntype_id;
            
            private global::System.Data.DataColumn columndesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeDataTable() {
                this.TableName = "product_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal product_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected product_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_idColumn {
                get {
                    return this.columntype_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRow this[int index] {
                get {
                    return ((product_typeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event product_typeRowChangeEventHandler product_typeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event product_typeRowChangeEventHandler product_typeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event product_typeRowChangeEventHandler product_typeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event product_typeRowChangeEventHandler product_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproduct_typeRow(product_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRow Addproduct_typeRow(long type_id, string desc) {
                product_typeRow rowproduct_typeRow = ((product_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_id,
                        desc};
                rowproduct_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_typeRow);
                return rowproduct_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRow FindBytype_id(long type_id) {
                return ((product_typeRow)(this.Rows.Find(new object[] {
                            type_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                product_typeDataTable cln = ((product_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columntype_id = base.Columns["type_id"];
                this.columndesc = base.Columns["desc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columntype_id = new global::System.Data.DataColumn("type_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_id);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntype_id}, true));
                this.columntype_id.AllowDBNull = false;
                this.columntype_id.Unique = true;
                this.columndesc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRow Newproduct_typeRow() {
                return ((product_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(product_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_typeRowChanged != null)) {
                    this.product_typeRowChanged(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_typeRowChanging != null)) {
                    this.product_typeRowChanging(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_typeRowDeleted != null)) {
                    this.product_typeRowDeleted(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_typeRowDeleting != null)) {
                    this.product_typeRowDeleting(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproduct_typeRow(product_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class productsDataTable : global::System.Data.TypedTableBase<productsRow> {
            
            private global::System.Data.DataColumn columnprod_id;
            
            private global::System.Data.DataColumn columndesc;
            
            private global::System.Data.DataColumn columnpercent_carcass;
            
            private global::System.Data.DataColumn columntype_id;
            
            private global::System.Data.DataColumn columngst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsDataTable() {
                this.TableName = "products";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal productsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected productsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prod_idColumn {
                get {
                    return this.columnprod_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn percent_carcassColumn {
                get {
                    return this.columnpercent_carcass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn type_idColumn {
                get {
                    return this.columntype_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gstColumn {
                get {
                    return this.columngst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRow this[int index] {
                get {
                    return ((productsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event productsRowChangeEventHandler productsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event productsRowChangeEventHandler productsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event productsRowChangeEventHandler productsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event productsRowChangeEventHandler productsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddproductsRow(productsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRow AddproductsRow(string prod_id, string desc, double percent_carcass, long type_id, long gst) {
                productsRow rowproductsRow = ((productsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        prod_id,
                        desc,
                        percent_carcass,
                        type_id,
                        gst};
                rowproductsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproductsRow);
                return rowproductsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                productsDataTable cln = ((productsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new productsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnprod_id = base.Columns["prod_id"];
                this.columndesc = base.Columns["desc"];
                this.columnpercent_carcass = base.Columns["percent_carcass"];
                this.columntype_id = base.Columns["type_id"];
                this.columngst = base.Columns["gst"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnprod_id = new global::System.Data.DataColumn("prod_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_id);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.columnpercent_carcass = new global::System.Data.DataColumn("percent_carcass", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_carcass);
                this.columntype_id = new global::System.Data.DataColumn("type_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_id);
                this.columngst = new global::System.Data.DataColumn("gst", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngst);
                this.columnprod_id.MaxLength = 2147483647;
                this.columndesc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRow NewproductsRow() {
                return ((productsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new productsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(productsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.productsRowChanged != null)) {
                    this.productsRowChanged(this, new productsRowChangeEvent(((productsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.productsRowChanging != null)) {
                    this.productsRowChanging(this, new productsRowChangeEvent(((productsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.productsRowDeleted != null)) {
                    this.productsRowDeleted(this, new productsRowChangeEvent(((productsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.productsRowDeleting != null)) {
                    this.productsRowDeleting(this, new productsRowChangeEvent(((productsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveproductsRow(productsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "productsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sqlite_sequenceDataTable : global::System.Data.TypedTableBase<sqlite_sequenceRow> {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnseq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceDataTable() {
                this.TableName = "sqlite_sequence";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sqlite_sequenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sqlite_sequenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn seqColumn {
                get {
                    return this.columnseq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceRow this[int index] {
                get {
                    return ((sqlite_sequenceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addsqlite_sequenceRow(sqlite_sequenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceRow Addsqlite_sequenceRow(string name, string seq) {
                sqlite_sequenceRow rowsqlite_sequenceRow = ((sqlite_sequenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        seq};
                rowsqlite_sequenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsqlite_sequenceRow);
                return rowsqlite_sequenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sqlite_sequenceDataTable cln = ((sqlite_sequenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sqlite_sequenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columnseq = base.Columns["seq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnseq = new global::System.Data.DataColumn("seq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseq);
                this.columnname.MaxLength = 2147483647;
                this.columnseq.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceRow Newsqlite_sequenceRow() {
                return ((sqlite_sequenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sqlite_sequenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sqlite_sequenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sqlite_sequenceRowChanged != null)) {
                    this.sqlite_sequenceRowChanged(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sqlite_sequenceRowChanging != null)) {
                    this.sqlite_sequenceRowChanging(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sqlite_sequenceRowDeleted != null)) {
                    this.sqlite_sequenceRowDeleted(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sqlite_sequenceRowDeleting != null)) {
                    this.sqlite_sequenceRowDeleting(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removesqlite_sequenceRow(sqlite_sequenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sqlite_sequenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class customer_transDataTable : global::System.Data.TypedTableBase<customer_transRow> {
            
            private global::System.Data.DataColumn columnt_id;
            
            private global::System.Data.DataColumn columnt_type;
            
            private global::System.Data.DataColumn columnt_cust_id;
            
            private global::System.Data.DataColumn columnt_src_id;
            
            private global::System.Data.DataColumn columnt_ref_id;
            
            private global::System.Data.DataColumn columnt_date;
            
            private global::System.Data.DataColumn columnt_note;
            
            private global::System.Data.DataColumn columnt_timestamp;
            
            private global::System.Data.DataColumn columnt_amount;
            
            private global::System.Data.DataColumn columnt_unpaid;
            
            private global::System.Data.DataColumn columnt_no_print;
            
            private global::System.Data.DataColumn columnt_week_id;
            
            private global::System.Data.DataColumn columnt_date1;
            
            private global::System.Data.DataColumn columnt_finished;
            
            private global::System.Data.DataColumn columnt_date2;
            
            private global::System.Data.DataColumn columnt_src_dckt_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transDataTable() {
                this.TableName = "customer_trans";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customer_transDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected customer_transDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_idColumn {
                get {
                    return this.columnt_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_typeColumn {
                get {
                    return this.columnt_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_cust_idColumn {
                get {
                    return this.columnt_cust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_src_idColumn {
                get {
                    return this.columnt_src_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_ref_idColumn {
                get {
                    return this.columnt_ref_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_noteColumn {
                get {
                    return this.columnt_note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_timestampColumn {
                get {
                    return this.columnt_timestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amountColumn {
                get {
                    return this.columnt_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_unpaidColumn {
                get {
                    return this.columnt_unpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_no_printColumn {
                get {
                    return this.columnt_no_print;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_week_idColumn {
                get {
                    return this.columnt_week_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_date1Column {
                get {
                    return this.columnt_date1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_finishedColumn {
                get {
                    return this.columnt_finished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_date2Column {
                get {
                    return this.columnt_date2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_src_dckt_idColumn {
                get {
                    return this.columnt_src_dckt_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow this[int index] {
                get {
                    return ((customer_transRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customer_transRowChangeEventHandler customer_transRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customer_transRowChangeEventHandler customer_transRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customer_transRowChangeEventHandler customer_transRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event customer_transRowChangeEventHandler customer_transRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addcustomer_transRow(customer_transRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow Addcustomer_transRow(string t_type, customerRow parentcustomerRowBycustomer_trans_customer, long t_src_id, long t_ref_id, System.DateTime t_date, string t_note, System.DateTime t_timestamp, double t_amount, double t_unpaid, string t_no_print, long t_week_id, string t_date1, long t_finished, string t_date2, string t_src_dckt_id) {
                customer_transRow rowcustomer_transRow = ((customer_transRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        t_type,
                        null,
                        t_src_id,
                        t_ref_id,
                        t_date,
                        t_note,
                        t_timestamp,
                        t_amount,
                        t_unpaid,
                        t_no_print,
                        t_week_id,
                        t_date1,
                        t_finished,
                        t_date2,
                        t_src_dckt_id};
                if ((parentcustomerRowBycustomer_trans_customer != null)) {
                    columnValuesArray[2] = parentcustomerRowBycustomer_trans_customer[0];
                }
                rowcustomer_transRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcustomer_transRow);
                return rowcustomer_transRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow FindByt_id(long t_id) {
                return ((customer_transRow)(this.Rows.Find(new object[] {
                            t_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                customer_transDataTable cln = ((customer_transDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new customer_transDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnt_id = base.Columns["t_id"];
                this.columnt_type = base.Columns["t_type"];
                this.columnt_cust_id = base.Columns["t_cust_id"];
                this.columnt_src_id = base.Columns["t_src_id"];
                this.columnt_ref_id = base.Columns["t_ref_id"];
                this.columnt_date = base.Columns["t_date"];
                this.columnt_note = base.Columns["t_note"];
                this.columnt_timestamp = base.Columns["t_timestamp"];
                this.columnt_amount = base.Columns["t_amount"];
                this.columnt_unpaid = base.Columns["t_unpaid"];
                this.columnt_no_print = base.Columns["t_no_print"];
                this.columnt_week_id = base.Columns["t_week_id"];
                this.columnt_date1 = base.Columns["t_date1"];
                this.columnt_finished = base.Columns["t_finished"];
                this.columnt_date2 = base.Columns["t_date2"];
                this.columnt_src_dckt_id = base.Columns["t_src_dckt_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnt_id = new global::System.Data.DataColumn("t_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_id);
                this.columnt_type = new global::System.Data.DataColumn("t_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_type);
                this.columnt_cust_id = new global::System.Data.DataColumn("t_cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_cust_id);
                this.columnt_src_id = new global::System.Data.DataColumn("t_src_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_src_id);
                this.columnt_ref_id = new global::System.Data.DataColumn("t_ref_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_ref_id);
                this.columnt_date = new global::System.Data.DataColumn("t_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnt_note = new global::System.Data.DataColumn("t_note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_note);
                this.columnt_timestamp = new global::System.Data.DataColumn("t_timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_timestamp);
                this.columnt_amount = new global::System.Data.DataColumn("t_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amount);
                this.columnt_unpaid = new global::System.Data.DataColumn("t_unpaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_unpaid);
                this.columnt_no_print = new global::System.Data.DataColumn("t_no_print", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_no_print);
                this.columnt_week_id = new global::System.Data.DataColumn("t_week_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_week_id);
                this.columnt_date1 = new global::System.Data.DataColumn("t_date1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date1);
                this.columnt_finished = new global::System.Data.DataColumn("t_finished", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_finished);
                this.columnt_date2 = new global::System.Data.DataColumn("t_date2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date2);
                this.columnt_src_dckt_id = new global::System.Data.DataColumn("t_src_dckt_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_src_dckt_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnt_id}, true));
                this.columnt_id.AutoIncrement = true;
                this.columnt_id.AutoIncrementSeed = 20;
                this.columnt_id.AllowDBNull = false;
                this.columnt_id.Unique = true;
                this.columnt_type.MaxLength = 2147483647;
                this.columnt_note.MaxLength = 2147483647;
                this.columnt_amount.DefaultValue = ((double)(0D));
                this.columnt_unpaid.DefaultValue = ((double)(0D));
                this.columnt_no_print.MaxLength = 2147483647;
                this.columnt_date1.Caption = "t_date";
                this.columnt_date1.MaxLength = 2147483647;
                this.columnt_date2.Caption = "t_date";
                this.columnt_date2.MaxLength = 2147483647;
                this.columnt_src_dckt_id.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow Newcustomer_transRow() {
                return ((customer_transRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new customer_transRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(customer_transRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.customer_transRowChanged != null)) {
                    this.customer_transRowChanged(this, new customer_transRowChangeEvent(((customer_transRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.customer_transRowChanging != null)) {
                    this.customer_transRowChanging(this, new customer_transRowChangeEvent(((customer_transRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.customer_transRowDeleted != null)) {
                    this.customer_transRowDeleted(this, new customer_transRowChangeEvent(((customer_transRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.customer_transRowDeleting != null)) {
                    this.customer_transRowDeleting(this, new customer_transRowChangeEvent(((customer_transRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removecustomer_transRow(customer_transRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "customer_transDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class debtors_summaryDataTable : global::System.Data.TypedTableBase<debtors_summaryRow> {
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columncurAmt;
            
            private global::System.Data.DataColumn columndays7;
            
            private global::System.Data.DataColumn columndays14;
            
            private global::System.Data.DataColumn columndays21;
            
            private global::System.Data.DataColumn columnOwing;
            
            private global::System.Data.DataColumn columnopen_bal;
            
            private global::System.Data.DataColumn columndate_last_payment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryDataTable() {
                this.TableName = "debtors_summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal debtors_summaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected debtors_summaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn curAmtColumn {
                get {
                    return this.columncurAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn days7Column {
                get {
                    return this.columndays7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn days14Column {
                get {
                    return this.columndays14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn days21Column {
                get {
                    return this.columndays21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwingColumn {
                get {
                    return this.columnOwing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn open_balColumn {
                get {
                    return this.columnopen_bal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_last_paymentColumn {
                get {
                    return this.columndate_last_payment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRow this[int index] {
                get {
                    return ((debtors_summaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtors_summaryRowChangeEventHandler debtors_summaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtors_summaryRowChangeEventHandler debtors_summaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtors_summaryRowChangeEventHandler debtors_summaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event debtors_summaryRowChangeEventHandler debtors_summaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Adddebtors_summaryRow(debtors_summaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRow Adddebtors_summaryRow(long cust_id, double curAmt, double days7, double days14, double days21, double Owing, double open_bal, string date_last_payment) {
                debtors_summaryRow rowdebtors_summaryRow = ((debtors_summaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cust_id,
                        curAmt,
                        days7,
                        days14,
                        days21,
                        Owing,
                        open_bal,
                        date_last_payment};
                rowdebtors_summaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdebtors_summaryRow);
                return rowdebtors_summaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                debtors_summaryDataTable cln = ((debtors_summaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new debtors_summaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncust_id = base.Columns["cust_id"];
                this.columncurAmt = base.Columns["curAmt"];
                this.columndays7 = base.Columns["days7"];
                this.columndays14 = base.Columns["days14"];
                this.columndays21 = base.Columns["days21"];
                this.columnOwing = base.Columns["Owing"];
                this.columnopen_bal = base.Columns["open_bal"];
                this.columndate_last_payment = base.Columns["date_last_payment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columncurAmt = new global::System.Data.DataColumn("curAmt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurAmt);
                this.columndays7 = new global::System.Data.DataColumn("days7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndays7);
                this.columndays14 = new global::System.Data.DataColumn("days14", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndays14);
                this.columndays21 = new global::System.Data.DataColumn("days21", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndays21);
                this.columnOwing = new global::System.Data.DataColumn("Owing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwing);
                this.columnopen_bal = new global::System.Data.DataColumn("open_bal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopen_bal);
                this.columndate_last_payment = new global::System.Data.DataColumn("date_last_payment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_last_payment);
                this.columncust_id.AllowDBNull = false;
                this.columncust_id.DefaultValue = ((long)(0));
                this.columncurAmt.DefaultValue = ((double)(0D));
                this.columndays7.DefaultValue = ((double)(0D));
                this.columndays14.DefaultValue = ((double)(0D));
                this.columndays21.DefaultValue = ((double)(0D));
                this.columndate_last_payment.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRow Newdebtors_summaryRow() {
                return ((debtors_summaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new debtors_summaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(debtors_summaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.debtors_summaryRowChanged != null)) {
                    this.debtors_summaryRowChanged(this, new debtors_summaryRowChangeEvent(((debtors_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.debtors_summaryRowChanging != null)) {
                    this.debtors_summaryRowChanging(this, new debtors_summaryRowChangeEvent(((debtors_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.debtors_summaryRowDeleted != null)) {
                    this.debtors_summaryRowDeleted(this, new debtors_summaryRowChangeEvent(((debtors_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.debtors_summaryRowDeleting != null)) {
                    this.debtors_summaryRowDeleting(this, new debtors_summaryRowChangeEvent(((debtors_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removedebtors_summaryRow(debtors_summaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "debtors_summaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoice_header_customerDataTable : global::System.Data.TypedTableBase<invoice_header_customerRow> {
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columninvoice_text;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerDataTable() {
                this.TableName = "invoice_header_customer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_header_customerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected invoice_header_customerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_textColumn {
                get {
                    return this.columninvoice_text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRow this[int index] {
                get {
                    return ((invoice_header_customerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_customerRowChangeEventHandler invoice_header_customerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_customerRowChangeEventHandler invoice_header_customerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_customerRowChangeEventHandler invoice_header_customerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_customerRowChangeEventHandler invoice_header_customerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addinvoice_header_customerRow(invoice_header_customerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRow Addinvoice_header_customerRow(long cust_id, long invoice_number, string invoice_text) {
                invoice_header_customerRow rowinvoice_header_customerRow = ((invoice_header_customerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cust_id,
                        invoice_number,
                        invoice_text};
                rowinvoice_header_customerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoice_header_customerRow);
                return rowinvoice_header_customerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRow FindByinvoice_number(long invoice_number) {
                return ((invoice_header_customerRow)(this.Rows.Find(new object[] {
                            invoice_number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                invoice_header_customerDataTable cln = ((invoice_header_customerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoice_header_customerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncust_id = base.Columns["cust_id"];
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columninvoice_text = base.Columns["invoice_text"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columninvoice_text = new global::System.Data.DataColumn("invoice_text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_text);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoice_number}, true));
                this.columninvoice_number.AllowDBNull = false;
                this.columninvoice_number.Unique = true;
                this.columninvoice_text.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRow Newinvoice_header_customerRow() {
                return ((invoice_header_customerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoice_header_customerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(invoice_header_customerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoice_header_customerRowChanged != null)) {
                    this.invoice_header_customerRowChanged(this, new invoice_header_customerRowChangeEvent(((invoice_header_customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoice_header_customerRowChanging != null)) {
                    this.invoice_header_customerRowChanging(this, new invoice_header_customerRowChangeEvent(((invoice_header_customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoice_header_customerRowDeleted != null)) {
                    this.invoice_header_customerRowDeleted(this, new invoice_header_customerRowChangeEvent(((invoice_header_customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoice_header_customerRowDeleting != null)) {
                    this.invoice_header_customerRowDeleting(this, new invoice_header_customerRowChangeEvent(((invoice_header_customerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeinvoice_header_customerRow(invoice_header_customerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoice_header_customerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoice_header_unpaidDataTable : global::System.Data.TypedTableBase<invoice_header_unpaidRow> {
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columninvoice_text;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidDataTable() {
                this.TableName = "invoice_header_unpaid";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_header_unpaidDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected invoice_header_unpaidDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_textColumn {
                get {
                    return this.columninvoice_text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRow this[int index] {
                get {
                    return ((invoice_header_unpaidRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_unpaidRowChangeEventHandler invoice_header_unpaidRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_unpaidRowChangeEventHandler invoice_header_unpaidRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_unpaidRowChangeEventHandler invoice_header_unpaidRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event invoice_header_unpaidRowChangeEventHandler invoice_header_unpaidRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addinvoice_header_unpaidRow(invoice_header_unpaidRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRow Addinvoice_header_unpaidRow(long cust_id, long invoice_number, string invoice_text) {
                invoice_header_unpaidRow rowinvoice_header_unpaidRow = ((invoice_header_unpaidRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cust_id,
                        invoice_number,
                        invoice_text};
                rowinvoice_header_unpaidRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoice_header_unpaidRow);
                return rowinvoice_header_unpaidRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRow FindByinvoice_number(long invoice_number) {
                return ((invoice_header_unpaidRow)(this.Rows.Find(new object[] {
                            invoice_number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                invoice_header_unpaidDataTable cln = ((invoice_header_unpaidDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoice_header_unpaidDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncust_id = base.Columns["cust_id"];
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columninvoice_text = base.Columns["invoice_text"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columninvoice_text = new global::System.Data.DataColumn("invoice_text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_text);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninvoice_number}, true));
                this.columninvoice_number.AllowDBNull = false;
                this.columninvoice_number.Unique = true;
                this.columninvoice_text.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRow Newinvoice_header_unpaidRow() {
                return ((invoice_header_unpaidRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoice_header_unpaidRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(invoice_header_unpaidRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoice_header_unpaidRowChanged != null)) {
                    this.invoice_header_unpaidRowChanged(this, new invoice_header_unpaidRowChangeEvent(((invoice_header_unpaidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoice_header_unpaidRowChanging != null)) {
                    this.invoice_header_unpaidRowChanging(this, new invoice_header_unpaidRowChangeEvent(((invoice_header_unpaidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoice_header_unpaidRowDeleted != null)) {
                    this.invoice_header_unpaidRowDeleted(this, new invoice_header_unpaidRowChangeEvent(((invoice_header_unpaidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoice_header_unpaidRowDeleting != null)) {
                    this.invoice_header_unpaidRowDeleting(this, new invoice_header_unpaidRowChangeEvent(((invoice_header_unpaidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeinvoice_header_unpaidRow(invoice_header_unpaidRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoice_header_unpaidDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSummary1DataTable : global::System.Data.TypedTableBase<SalesSummary1Row> {
            
            private global::System.Data.DataColumn columnt_id;
            
            private global::System.Data.DataColumn columnt_desc;
            
            private global::System.Data.DataColumn columnt_qty;
            
            private global::System.Data.DataColumn columnt_whgt;
            
            private global::System.Data.DataColumn columnt_avg;
            
            private global::System.Data.DataColumn columnt_amt;
            
            private global::System.Data.DataColumn columnt_qtyp;
            
            private global::System.Data.DataColumn columnt_whgtp;
            
            private global::System.Data.DataColumn columnt_amtp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1DataTable() {
                this.TableName = "SalesSummary1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesSummary1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SalesSummary1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_idColumn {
                get {
                    return this.columnt_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_descColumn {
                get {
                    return this.columnt_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_qtyColumn {
                get {
                    return this.columnt_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_whgtColumn {
                get {
                    return this.columnt_whgt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_avgColumn {
                get {
                    return this.columnt_avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amtColumn {
                get {
                    return this.columnt_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_qtypColumn {
                get {
                    return this.columnt_qtyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_whgtpColumn {
                get {
                    return this.columnt_whgtp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amtpColumn {
                get {
                    return this.columnt_amtp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1Row this[int index] {
                get {
                    return ((SalesSummary1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesSummary1RowChangeEventHandler SalesSummary1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesSummary1RowChangeEventHandler SalesSummary1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesSummary1RowChangeEventHandler SalesSummary1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SalesSummary1RowChangeEventHandler SalesSummary1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesSummary1Row(SalesSummary1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1Row AddSalesSummary1Row(string t_id, string t_desc, double t_qty, double t_whgt, double t_avg, double t_amt, double t_qtyp, double t_whgtp, double t_amtp) {
                SalesSummary1Row rowSalesSummary1Row = ((SalesSummary1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        t_id,
                        t_desc,
                        t_qty,
                        t_whgt,
                        t_avg,
                        t_amt,
                        t_qtyp,
                        t_whgtp,
                        t_amtp};
                rowSalesSummary1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSummary1Row);
                return rowSalesSummary1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SalesSummary1DataTable cln = ((SalesSummary1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSummary1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnt_id = base.Columns["t_id"];
                this.columnt_desc = base.Columns["t_desc"];
                this.columnt_qty = base.Columns["t_qty"];
                this.columnt_whgt = base.Columns["t_whgt"];
                this.columnt_avg = base.Columns["t_avg"];
                this.columnt_amt = base.Columns["t_amt"];
                this.columnt_qtyp = base.Columns["t_qtyp"];
                this.columnt_whgtp = base.Columns["t_whgtp"];
                this.columnt_amtp = base.Columns["t_amtp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnt_id = new global::System.Data.DataColumn("t_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_id);
                this.columnt_desc = new global::System.Data.DataColumn("t_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_desc);
                this.columnt_qty = new global::System.Data.DataColumn("t_qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_qty);
                this.columnt_whgt = new global::System.Data.DataColumn("t_whgt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_whgt);
                this.columnt_avg = new global::System.Data.DataColumn("t_avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_avg);
                this.columnt_amt = new global::System.Data.DataColumn("t_amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amt);
                this.columnt_qtyp = new global::System.Data.DataColumn("t_qtyp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_qtyp);
                this.columnt_whgtp = new global::System.Data.DataColumn("t_whgtp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_whgtp);
                this.columnt_amtp = new global::System.Data.DataColumn("t_amtp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amtp);
                this.columnt_id.MaxLength = 2147483647;
                this.columnt_desc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1Row NewSalesSummary1Row() {
                return ((SalesSummary1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSummary1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSummary1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSummary1RowChanged != null)) {
                    this.SalesSummary1RowChanged(this, new SalesSummary1RowChangeEvent(((SalesSummary1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSummary1RowChanging != null)) {
                    this.SalesSummary1RowChanging(this, new SalesSummary1RowChangeEvent(((SalesSummary1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSummary1RowDeleted != null)) {
                    this.SalesSummary1RowDeleted(this, new SalesSummary1RowChangeEvent(((SalesSummary1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSummary1RowDeleting != null)) {
                    this.SalesSummary1RowDeleting(this, new SalesSummary1RowChangeEvent(((SalesSummary1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesSummary1Row(SalesSummary1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSummary1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductSalesSummaryDataTable : global::System.Data.TypedTableBase<ProductSalesSummaryRow> {
            
            private global::System.Data.DataColumn columnt_id;
            
            private global::System.Data.DataColumn columnt_desc;
            
            private global::System.Data.DataColumn columnt_qty;
            
            private global::System.Data.DataColumn columnt_whgt;
            
            private global::System.Data.DataColumn columnt_avg;
            
            private global::System.Data.DataColumn columnt_amt;
            
            private global::System.Data.DataColumn columnt_qtyp;
            
            private global::System.Data.DataColumn columnt_whgtp;
            
            private global::System.Data.DataColumn columnt_amtp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryDataTable() {
                this.TableName = "ProductSalesSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductSalesSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductSalesSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_idColumn {
                get {
                    return this.columnt_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_descColumn {
                get {
                    return this.columnt_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_qtyColumn {
                get {
                    return this.columnt_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_whgtColumn {
                get {
                    return this.columnt_whgt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_avgColumn {
                get {
                    return this.columnt_avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amtColumn {
                get {
                    return this.columnt_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_qtypColumn {
                get {
                    return this.columnt_qtyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_whgtpColumn {
                get {
                    return this.columnt_whgtp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amtpColumn {
                get {
                    return this.columnt_amtp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryRow this[int index] {
                get {
                    return ((ProductSalesSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesSummaryRowChangeEventHandler ProductSalesSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesSummaryRowChangeEventHandler ProductSalesSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesSummaryRowChangeEventHandler ProductSalesSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesSummaryRowChangeEventHandler ProductSalesSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductSalesSummaryRow(ProductSalesSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryRow AddProductSalesSummaryRow(string t_id, string t_desc, double t_qty, double t_whgt, double t_avg, double t_amt, double t_qtyp, double t_whgtp, double t_amtp) {
                ProductSalesSummaryRow rowProductSalesSummaryRow = ((ProductSalesSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        t_id,
                        t_desc,
                        t_qty,
                        t_whgt,
                        t_avg,
                        t_amt,
                        t_qtyp,
                        t_whgtp,
                        t_amtp};
                rowProductSalesSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductSalesSummaryRow);
                return rowProductSalesSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductSalesSummaryDataTable cln = ((ProductSalesSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductSalesSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnt_id = base.Columns["t_id"];
                this.columnt_desc = base.Columns["t_desc"];
                this.columnt_qty = base.Columns["t_qty"];
                this.columnt_whgt = base.Columns["t_whgt"];
                this.columnt_avg = base.Columns["t_avg"];
                this.columnt_amt = base.Columns["t_amt"];
                this.columnt_qtyp = base.Columns["t_qtyp"];
                this.columnt_whgtp = base.Columns["t_whgtp"];
                this.columnt_amtp = base.Columns["t_amtp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnt_id = new global::System.Data.DataColumn("t_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_id);
                this.columnt_desc = new global::System.Data.DataColumn("t_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_desc);
                this.columnt_qty = new global::System.Data.DataColumn("t_qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_qty);
                this.columnt_whgt = new global::System.Data.DataColumn("t_whgt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_whgt);
                this.columnt_avg = new global::System.Data.DataColumn("t_avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_avg);
                this.columnt_amt = new global::System.Data.DataColumn("t_amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amt);
                this.columnt_qtyp = new global::System.Data.DataColumn("t_qtyp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_qtyp);
                this.columnt_whgtp = new global::System.Data.DataColumn("t_whgtp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_whgtp);
                this.columnt_amtp = new global::System.Data.DataColumn("t_amtp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amtp);
                this.columnt_id.MaxLength = 2147483647;
                this.columnt_desc.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryRow NewProductSalesSummaryRow() {
                return ((ProductSalesSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductSalesSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductSalesSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductSalesSummaryRowChanged != null)) {
                    this.ProductSalesSummaryRowChanged(this, new ProductSalesSummaryRowChangeEvent(((ProductSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductSalesSummaryRowChanging != null)) {
                    this.ProductSalesSummaryRowChanging(this, new ProductSalesSummaryRowChangeEvent(((ProductSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductSalesSummaryRowDeleted != null)) {
                    this.ProductSalesSummaryRowDeleted(this, new ProductSalesSummaryRowChangeEvent(((ProductSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductSalesSummaryRowDeleting != null)) {
                    this.ProductSalesSummaryRowDeleting(this, new ProductSalesSummaryRowChangeEvent(((ProductSalesSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductSalesSummaryRow(ProductSalesSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductSalesSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductSalesReportDataTable : global::System.Data.TypedTableBase<ProductSalesReportRow> {
            
            private global::System.Data.DataColumn columnprod_id;
            
            private global::System.Data.DataColumn columnprod_desc;
            
            private global::System.Data.DataColumn columninvoice_date;
            
            private global::System.Data.DataColumn columndocket_number;
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnavg_weight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportDataTable() {
                this.TableName = "ProductSalesReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductSalesReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductSalesReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prod_idColumn {
                get {
                    return this.columnprod_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prod_descColumn {
                get {
                    return this.columnprod_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_dateColumn {
                get {
                    return this.columninvoice_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn docket_numberColumn {
                get {
                    return this.columndocket_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn avg_weightColumn {
                get {
                    return this.columnavg_weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportRow this[int index] {
                get {
                    return ((ProductSalesReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesReportRowChangeEventHandler ProductSalesReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesReportRowChangeEventHandler ProductSalesReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesReportRowChangeEventHandler ProductSalesReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductSalesReportRowChangeEventHandler ProductSalesReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductSalesReportRow(ProductSalesReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportRow AddProductSalesReportRow(string prod_id, string prod_desc, string invoice_date, string docket_number, string cust_id, double qty, double weight, double rate, double amount, double avg_weight) {
                ProductSalesReportRow rowProductSalesReportRow = ((ProductSalesReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        prod_id,
                        prod_desc,
                        invoice_date,
                        docket_number,
                        cust_id,
                        qty,
                        weight,
                        rate,
                        amount,
                        avg_weight};
                rowProductSalesReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductSalesReportRow);
                return rowProductSalesReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductSalesReportDataTable cln = ((ProductSalesReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductSalesReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnprod_id = base.Columns["prod_id"];
                this.columnprod_desc = base.Columns["prod_desc"];
                this.columninvoice_date = base.Columns["invoice_date"];
                this.columndocket_number = base.Columns["docket_number"];
                this.columncust_id = base.Columns["cust_id"];
                this.columnqty = base.Columns["qty"];
                this.columnweight = base.Columns["weight"];
                this.columnrate = base.Columns["rate"];
                this.columnamount = base.Columns["amount"];
                this.columnavg_weight = base.Columns["avg_weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnprod_id = new global::System.Data.DataColumn("prod_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_id);
                this.columnprod_desc = new global::System.Data.DataColumn("prod_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_desc);
                this.columninvoice_date = new global::System.Data.DataColumn("invoice_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_date);
                this.columndocket_number = new global::System.Data.DataColumn("docket_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocket_number);
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnavg_weight = new global::System.Data.DataColumn("avg_weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavg_weight);
                this.columnprod_id.MaxLength = 2147483647;
                this.columnprod_desc.MaxLength = 2147483647;
                this.columninvoice_date.MaxLength = 2147483647;
                this.columndocket_number.MaxLength = 2147483647;
                this.columncust_id.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportRow NewProductSalesReportRow() {
                return ((ProductSalesReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductSalesReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductSalesReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductSalesReportRowChanged != null)) {
                    this.ProductSalesReportRowChanged(this, new ProductSalesReportRowChangeEvent(((ProductSalesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductSalesReportRowChanging != null)) {
                    this.ProductSalesReportRowChanging(this, new ProductSalesReportRowChangeEvent(((ProductSalesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductSalesReportRowDeleted != null)) {
                    this.ProductSalesReportRowDeleted(this, new ProductSalesReportRowChangeEvent(((ProductSalesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductSalesReportRowDeleting != null)) {
                    this.ProductSalesReportRowDeleting(this, new ProductSalesReportRowChangeEvent(((ProductSalesReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductSalesReportRow(ProductSalesReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductSalesReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentAdjustRptDataTable : global::System.Data.TypedTableBase<PaymentAdjustRptRow> {
            
            private global::System.Data.DataColumn columnt_date;
            
            private global::System.Data.DataColumn columnt_type;
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columncontact_name;
            
            private global::System.Data.DataColumn columnname_address_1;
            
            private global::System.Data.DataColumn columnt_amount;
            
            private global::System.Data.DataColumn columnt_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptDataTable() {
                this.TableName = "PaymentAdjustRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PaymentAdjustRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PaymentAdjustRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_typeColumn {
                get {
                    return this.columnt_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn contact_nameColumn {
                get {
                    return this.columncontact_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn name_address_1Column {
                get {
                    return this.columnname_address_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_amountColumn {
                get {
                    return this.columnt_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn t_idColumn {
                get {
                    return this.columnt_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptRow this[int index] {
                get {
                    return ((PaymentAdjustRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaymentAdjustRptRowChangeEventHandler PaymentAdjustRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaymentAdjustRptRowChangeEventHandler PaymentAdjustRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaymentAdjustRptRowChangeEventHandler PaymentAdjustRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaymentAdjustRptRowChangeEventHandler PaymentAdjustRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPaymentAdjustRptRow(PaymentAdjustRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptRow AddPaymentAdjustRptRow(string t_date, string t_type, int cust_id, string contact_name, string name_address_1, double t_amount, int t_id) {
                PaymentAdjustRptRow rowPaymentAdjustRptRow = ((PaymentAdjustRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        t_date,
                        t_type,
                        cust_id,
                        contact_name,
                        name_address_1,
                        t_amount,
                        t_id};
                rowPaymentAdjustRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentAdjustRptRow);
                return rowPaymentAdjustRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PaymentAdjustRptDataTable cln = ((PaymentAdjustRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentAdjustRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnt_date = base.Columns["t_date"];
                this.columnt_type = base.Columns["t_type"];
                this.columncust_id = base.Columns["cust_id"];
                this.columncontact_name = base.Columns["contact_name"];
                this.columnname_address_1 = base.Columns["name_address_1"];
                this.columnt_amount = base.Columns["t_amount"];
                this.columnt_id = base.Columns["t_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnt_date = new global::System.Data.DataColumn("t_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnt_type = new global::System.Data.DataColumn("t_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_type);
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columncontact_name = new global::System.Data.DataColumn("contact_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact_name);
                this.columnname_address_1 = new global::System.Data.DataColumn("name_address_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_address_1);
                this.columnt_amount = new global::System.Data.DataColumn("t_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_amount);
                this.columnt_id = new global::System.Data.DataColumn("t_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_id);
                this.columnt_date.MaxLength = 2147483647;
                this.columnt_type.MaxLength = 2147483647;
                this.columncontact_name.MaxLength = 2147483647;
                this.columnname_address_1.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptRow NewPaymentAdjustRptRow() {
                return ((PaymentAdjustRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentAdjustRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentAdjustRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentAdjustRptRowChanged != null)) {
                    this.PaymentAdjustRptRowChanged(this, new PaymentAdjustRptRowChangeEvent(((PaymentAdjustRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentAdjustRptRowChanging != null)) {
                    this.PaymentAdjustRptRowChanging(this, new PaymentAdjustRptRowChangeEvent(((PaymentAdjustRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentAdjustRptRowDeleted != null)) {
                    this.PaymentAdjustRptRowDeleted(this, new PaymentAdjustRptRowChangeEvent(((PaymentAdjustRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentAdjustRptRowDeleting != null)) {
                    this.PaymentAdjustRptRowDeleting(this, new PaymentAdjustRptRowChangeEvent(((PaymentAdjustRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePaymentAdjustRptRow(PaymentAdjustRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentAdjustRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class autoVacDataTable : global::System.Data.TypedTableBase<autoVacRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacDataTable() {
                this.TableName = "autoVac";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal autoVacDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected autoVacDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacRow this[int index] {
                get {
                    return ((autoVacRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event autoVacRowChangeEventHandler autoVacRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event autoVacRowChangeEventHandler autoVacRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event autoVacRowChangeEventHandler autoVacRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event autoVacRowChangeEventHandler autoVacRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddautoVacRow(autoVacRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacRow AddautoVacRow() {
                autoVacRow rowautoVacRow = ((autoVacRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowautoVacRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowautoVacRow);
                return rowautoVacRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                autoVacDataTable cln = ((autoVacDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new autoVacDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacRow NewautoVacRow() {
                return ((autoVacRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new autoVacRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(autoVacRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.autoVacRowChanged != null)) {
                    this.autoVacRowChanged(this, new autoVacRowChangeEvent(((autoVacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.autoVacRowChanging != null)) {
                    this.autoVacRowChanging(this, new autoVacRowChangeEvent(((autoVacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.autoVacRowDeleted != null)) {
                    this.autoVacRowDeleted(this, new autoVacRowChangeEvent(((autoVacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.autoVacRowDeleting != null)) {
                    this.autoVacRowDeleting(this, new autoVacRowChangeEvent(((autoVacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveautoVacRow(autoVacRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "autoVacDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INVOICE_RECIEPTSDataTable : global::System.Data.TypedTableBase<INVOICE_RECIEPTSRow> {
            
            private global::System.Data.DataColumn columnrecpt_number;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnrecpt_date;
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columncust_id;
            
            private global::System.Data.DataColumn columninvoice_key;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSDataTable() {
                this.TableName = "INVOICE_RECIEPTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal INVOICE_RECIEPTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected INVOICE_RECIEPTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recpt_numberColumn {
                get {
                    return this.columnrecpt_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recpt_dateColumn {
                get {
                    return this.columnrecpt_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cust_idColumn {
                get {
                    return this.columncust_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn invoice_keyColumn {
                get {
                    return this.columninvoice_key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSRow this[int index] {
                get {
                    return ((INVOICE_RECIEPTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_RECIEPTSRowChangeEventHandler INVOICE_RECIEPTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_RECIEPTSRowChangeEventHandler INVOICE_RECIEPTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_RECIEPTSRowChangeEventHandler INVOICE_RECIEPTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event INVOICE_RECIEPTSRowChangeEventHandler INVOICE_RECIEPTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddINVOICE_RECIEPTSRow(INVOICE_RECIEPTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSRow AddINVOICE_RECIEPTSRow(long recpt_number, double amount, string recpt_date, long invoice_number, long cust_id, long invoice_key) {
                INVOICE_RECIEPTSRow rowINVOICE_RECIEPTSRow = ((INVOICE_RECIEPTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        recpt_number,
                        amount,
                        recpt_date,
                        invoice_number,
                        cust_id,
                        invoice_key};
                rowINVOICE_RECIEPTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINVOICE_RECIEPTSRow);
                return rowINVOICE_RECIEPTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INVOICE_RECIEPTSDataTable cln = ((INVOICE_RECIEPTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INVOICE_RECIEPTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrecpt_number = base.Columns["recpt_number"];
                this.columnamount = base.Columns["amount"];
                this.columnrecpt_date = base.Columns["recpt_date"];
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columncust_id = base.Columns["cust_id"];
                this.columninvoice_key = base.Columns["invoice_key"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrecpt_number = new global::System.Data.DataColumn("recpt_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecpt_number);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnrecpt_date = new global::System.Data.DataColumn("recpt_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecpt_date);
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columncust_id = new global::System.Data.DataColumn("cust_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_id);
                this.columninvoice_key = new global::System.Data.DataColumn("invoice_key", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_key);
                this.columnrecpt_number.AllowDBNull = false;
                this.columnrecpt_date.MaxLength = 2147483647;
                this.columninvoice_number.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSRow NewINVOICE_RECIEPTSRow() {
                return ((INVOICE_RECIEPTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INVOICE_RECIEPTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INVOICE_RECIEPTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INVOICE_RECIEPTSRowChanged != null)) {
                    this.INVOICE_RECIEPTSRowChanged(this, new INVOICE_RECIEPTSRowChangeEvent(((INVOICE_RECIEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INVOICE_RECIEPTSRowChanging != null)) {
                    this.INVOICE_RECIEPTSRowChanging(this, new INVOICE_RECIEPTSRowChangeEvent(((INVOICE_RECIEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INVOICE_RECIEPTSRowDeleted != null)) {
                    this.INVOICE_RECIEPTSRowDeleted(this, new INVOICE_RECIEPTSRowChangeEvent(((INVOICE_RECIEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INVOICE_RECIEPTSRowDeleting != null)) {
                    this.INVOICE_RECIEPTSRowDeleting(this, new INVOICE_RECIEPTSRowChangeEvent(((INVOICE_RECIEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveINVOICE_RECIEPTSRow(INVOICE_RECIEPTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INVOICE_RECIEPTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class configurationRow : global::System.Data.DataRow {
            
            private configurationDataTable tableconfiguration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal configurationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableconfiguration = ((configurationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bus_names {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.bus_namesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bus_names\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.bus_namesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bus_addr1 {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.bus_addr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bus_addr1\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.bus_addr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bus_addr2 {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.bus_addr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bus_addr2\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.bus_addr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bus_post_code {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.bus_post_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bus_post_code\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.bus_post_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bus_phone {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.bus_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bus_phone\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.bus_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_sales {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.gl_salesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_sales\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.gl_salesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_sales_gst {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.gl_sales_gstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_sales_gst\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.gl_sales_gstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_bank {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.gl_bankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_bank\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.gl_bankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_adj {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.gl_adjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_adj\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.gl_adjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_disc {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.gl_discColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_disc\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.gl_discColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StatementDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableconfiguration.StatementDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementDate\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.StatementDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string acnt_period {
                get {
                    try {
                        return ((string)(this[this.tableconfiguration.acnt_periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acnt_period\' in table \'configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconfiguration.acnt_periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_namesNull() {
                return this.IsNull(this.tableconfiguration.bus_namesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbus_namesNull() {
                this[this.tableconfiguration.bus_namesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_addr1Null() {
                return this.IsNull(this.tableconfiguration.bus_addr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbus_addr1Null() {
                this[this.tableconfiguration.bus_addr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_addr2Null() {
                return this.IsNull(this.tableconfiguration.bus_addr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbus_addr2Null() {
                this[this.tableconfiguration.bus_addr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_post_codeNull() {
                return this.IsNull(this.tableconfiguration.bus_post_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbus_post_codeNull() {
                this[this.tableconfiguration.bus_post_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_phoneNull() {
                return this.IsNull(this.tableconfiguration.bus_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbus_phoneNull() {
                this[this.tableconfiguration.bus_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_salesNull() {
                return this.IsNull(this.tableconfiguration.gl_salesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_salesNull() {
                this[this.tableconfiguration.gl_salesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_sales_gstNull() {
                return this.IsNull(this.tableconfiguration.gl_sales_gstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_sales_gstNull() {
                this[this.tableconfiguration.gl_sales_gstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_bankNull() {
                return this.IsNull(this.tableconfiguration.gl_bankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_bankNull() {
                this[this.tableconfiguration.gl_bankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_adjNull() {
                return this.IsNull(this.tableconfiguration.gl_adjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_adjNull() {
                this[this.tableconfiguration.gl_adjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_discNull() {
                return this.IsNull(this.tableconfiguration.gl_discColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_discNull() {
                this[this.tableconfiguration.gl_discColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatementDateNull() {
                return this.IsNull(this.tableconfiguration.StatementDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatementDateNull() {
                this[this.tableconfiguration.StatementDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isacnt_periodNull() {
                return this.IsNull(this.tableconfiguration.acnt_periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setacnt_periodNull() {
                this[this.tableconfiguration.acnt_periodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class customerRow : global::System.Data.DataRow {
            
            private customerDataTable tablecustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecustomer = ((customerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    return ((long)(this[this.tablecustomer.cust_idColumn]));
                }
                set {
                    this[this.tablecustomer.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_address_1 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.name_address_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_address_1\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.name_address_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_address_2 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.name_address_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_address_2\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.name_address_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_address_3 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.name_address_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_address_3\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.name_address_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_address_4 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.name_address_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_address_4\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.name_address_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pcode {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.pcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pcode\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.pcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string contact_name {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.contact_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact_name\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.contact_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string abn {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.abnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abn\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.abnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string credit_rating {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.credit_ratingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit_rating\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.credit_ratingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dunning {
                get {
                    try {
                        return ((string)(this[this.tablecustomer.dunningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dunning\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.dunningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal avg_payment {
                get {
                    try {
                        return ((decimal)(this[this.tablecustomer.avg_paymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'avg_payment\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.avg_paymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double open_bal {
                get {
                    try {
                        return ((double)(this[this.tablecustomer.open_balColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'open_bal\' in table \'customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer.open_balColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isname_address_1Null() {
                return this.IsNull(this.tablecustomer.name_address_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setname_address_1Null() {
                this[this.tablecustomer.name_address_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isname_address_2Null() {
                return this.IsNull(this.tablecustomer.name_address_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setname_address_2Null() {
                this[this.tablecustomer.name_address_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isname_address_3Null() {
                return this.IsNull(this.tablecustomer.name_address_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setname_address_3Null() {
                this[this.tablecustomer.name_address_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isname_address_4Null() {
                return this.IsNull(this.tablecustomer.name_address_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setname_address_4Null() {
                this[this.tablecustomer.name_address_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspcodeNull() {
                return this.IsNull(this.tablecustomer.pcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpcodeNull() {
                this[this.tablecustomer.pcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsphoneNull() {
                return this.IsNull(this.tablecustomer.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetphoneNull() {
                this[this.tablecustomer.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscontact_nameNull() {
                return this.IsNull(this.tablecustomer.contact_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcontact_nameNull() {
                this[this.tablecustomer.contact_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsabnNull() {
                return this.IsNull(this.tablecustomer.abnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetabnNull() {
                this[this.tablecustomer.abnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscredit_ratingNull() {
                return this.IsNull(this.tablecustomer.credit_ratingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcredit_ratingNull() {
                this[this.tablecustomer.credit_ratingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotesNull() {
                return this.IsNull(this.tablecustomer.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotesNull() {
                this[this.tablecustomer.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdunningNull() {
                return this.IsNull(this.tablecustomer.dunningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdunningNull() {
                this[this.tablecustomer.dunningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isavg_paymentNull() {
                return this.IsNull(this.tablecustomer.avg_paymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setavg_paymentNull() {
                this[this.tablecustomer.avg_paymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isopen_balNull() {
                return this.IsNull(this.tablecustomer.open_balColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setopen_balNull() {
                this[this.tablecustomer.open_balColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow[] Getcustomer_transRows() {
                if ((this.Table.ChildRelations["customer_trans_customer"] == null)) {
                    return new customer_transRow[0];
                }
                else {
                    return ((customer_transRow[])(base.GetChildRows(this.Table.ChildRelations["customer_trans_customer"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class debtorsRow : global::System.Data.DataRow {
            
            private debtorsDataTable tabledebtors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal debtorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledebtors = ((debtorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    return ((long)(this[this.tabledebtors.cust_idColumn]));
                }
                set {
                    this[this.tabledebtors.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tabledebtors.invoice_numberColumn]));
                }
                set {
                    this[this.tabledebtors.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double invoice_amount {
                get {
                    try {
                        return ((double)(this[this.tabledebtors.invoice_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_amount\' in table \'debtors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors.invoice_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount_outstanding {
                get {
                    try {
                        return ((double)(this[this.tabledebtors.amount_outstandingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount_outstanding\' in table \'debtors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors.amount_outstandingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string txn_date {
                get {
                    try {
                        return ((string)(this[this.tabledebtors.txn_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'txn_date\' in table \'debtors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors.txn_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_amountNull() {
                return this.IsNull(this.tabledebtors.invoice_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_amountNull() {
                this[this.tabledebtors.invoice_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamount_outstandingNull() {
                return this.IsNull(this.tabledebtors.amount_outstandingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamount_outstandingNull() {
                this[this.tabledebtors.amount_outstandingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istxn_dateNull() {
                return this.IsNull(this.tabledebtors.txn_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settxn_dateNull() {
                this[this.tabledebtors.txn_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class glRow : global::System.Data.DataRow {
            
            private glDataTable tablegl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal glRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegl = ((glDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_id {
                get {
                    try {
                        return ((string)(this[this.tablegl.gl_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_id\' in table \'gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl.gl_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tablegl.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc\' in table \'gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long category_id {
                get {
                    try {
                        return ((long)(this[this.tablegl.category_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'category_id\' in table \'gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl.category_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_idNull() {
                return this.IsNull(this.tablegl.gl_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_idNull() {
                this[this.tablegl.gl_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tablegl.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tablegl.descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscategory_idNull() {
                return this.IsNull(this.tablegl.category_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcategory_idNull() {
                this[this.tablegl.category_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class gl_categoryRow : global::System.Data.DataRow {
            
            private gl_categoryDataTable tablegl_category;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gl_categoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegl_category = ((gl_categoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long category_id {
                get {
                    return ((long)(this[this.tablegl_category.category_idColumn]));
                }
                set {
                    this[this.tablegl_category.category_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tablegl_category.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc\' in table \'gl_category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_category.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dbcr {
                get {
                    try {
                        return ((string)(this[this.tablegl_category.dbcrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbcr\' in table \'gl_category\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_category.dbcrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tablegl_category.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tablegl_category.descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdbcrNull() {
                return this.IsNull(this.tablegl_category.dbcrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdbcrNull() {
                this[this.tablegl_category.dbcrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class gl_txnsRow : global::System.Data.DataRow {
            
            private gl_txnsDataTable tablegl_txns;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal gl_txnsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegl_txns = ((gl_txnsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gl_id {
                get {
                    try {
                        return ((string)(this[this.tablegl_txns.gl_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gl_id\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.gl_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long txn_id {
                get {
                    return ((long)(this[this.tablegl_txns.txn_idColumn]));
                }
                set {
                    this[this.tablegl_txns.txn_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reference {
                get {
                    try {
                        return ((string)(this[this.tablegl_txns.referenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reference\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.referenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    try {
                        return ((double)(this[this.tablegl_txns.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string source {
                get {
                    try {
                        return ((string)(this[this.tablegl_txns.sourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'source\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.sourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string date_from {
                get {
                    try {
                        return ((string)(this[this.tablegl_txns.date_fromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_from\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.date_fromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string date_to {
                get {
                    try {
                        return ((string)(this[this.tablegl_txns.date_toColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_to\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.date_toColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long qty {
                get {
                    try {
                        return ((long)(this[this.tablegl_txns.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'gl_txns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablegl_txns.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgl_idNull() {
                return this.IsNull(this.tablegl_txns.gl_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgl_idNull() {
                this[this.tablegl_txns.gl_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreferenceNull() {
                return this.IsNull(this.tablegl_txns.referenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreferenceNull() {
                this[this.tablegl_txns.referenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountNull() {
                return this.IsNull(this.tablegl_txns.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountNull() {
                this[this.tablegl_txns.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssourceNull() {
                return this.IsNull(this.tablegl_txns.sourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsourceNull() {
                this[this.tablegl_txns.sourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdate_fromNull() {
                return this.IsNull(this.tablegl_txns.date_fromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdate_fromNull() {
                this[this.tablegl_txns.date_fromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdate_toNull() {
                return this.IsNull(this.tablegl_txns.date_toColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdate_toNull() {
                this[this.tablegl_txns.date_toColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqtyNull() {
                return this.IsNull(this.tablegl_txns.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqtyNull() {
                this[this.tablegl_txns.qtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INVOICE_HEADERRow : global::System.Data.DataRow {
            
            private INVOICE_HEADERDataTable tableINVOICE_HEADER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal INVOICE_HEADERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINVOICE_HEADER = ((INVOICE_HEADERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tableINVOICE_HEADER.invoice_numberColumn]));
                }
                set {
                    this[this.tableINVOICE_HEADER.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoice_date {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_HEADER.invoice_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_date\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.invoice_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    try {
                        return ((long)(this[this.tableINVOICE_HEADER.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string docket_number {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_HEADER.docket_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docket_number\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.docket_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_HEADER.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string text_fully_paid {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_HEADER.text_fully_paidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'text_fully_paid\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.text_fully_paidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double invoice_amount {
                get {
                    try {
                        return ((double)(this[this.tableINVOICE_HEADER.invoice_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_amount\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.invoice_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double invoice_unpaid {
                get {
                    try {
                        return ((double)(this[this.tableINVOICE_HEADER.invoice_unpaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_unpaid\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.invoice_unpaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_locked {
                get {
                    try {
                        return ((long)(this[this.tableINVOICE_HEADER.invoice_lockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_locked\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.invoice_lockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double recent_payment {
                get {
                    try {
                        return ((double)(this[this.tableINVOICE_HEADER.recent_paymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recent_payment\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.recent_paymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sort_date {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_HEADER.sort_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sort_date\' in table \'INVOICE_HEADER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_HEADER.sort_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_dateNull() {
                return this.IsNull(this.tableINVOICE_HEADER.invoice_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_dateNull() {
                this[this.tableINVOICE_HEADER.invoice_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tableINVOICE_HEADER.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tableINVOICE_HEADER.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdocket_numberNull() {
                return this.IsNull(this.tableINVOICE_HEADER.docket_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdocket_numberNull() {
                this[this.tableINVOICE_HEADER.docket_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotesNull() {
                return this.IsNull(this.tableINVOICE_HEADER.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotesNull() {
                this[this.tableINVOICE_HEADER.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istext_fully_paidNull() {
                return this.IsNull(this.tableINVOICE_HEADER.text_fully_paidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settext_fully_paidNull() {
                this[this.tableINVOICE_HEADER.text_fully_paidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_amountNull() {
                return this.IsNull(this.tableINVOICE_HEADER.invoice_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_amountNull() {
                this[this.tableINVOICE_HEADER.invoice_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_unpaidNull() {
                return this.IsNull(this.tableINVOICE_HEADER.invoice_unpaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_unpaidNull() {
                this[this.tableINVOICE_HEADER.invoice_unpaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_lockedNull() {
                return this.IsNull(this.tableINVOICE_HEADER.invoice_lockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_lockedNull() {
                this[this.tableINVOICE_HEADER.invoice_lockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrecent_paymentNull() {
                return this.IsNull(this.tableINVOICE_HEADER.recent_paymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrecent_paymentNull() {
                this[this.tableINVOICE_HEADER.recent_paymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issort_dateNull() {
                return this.IsNull(this.tableINVOICE_HEADER.sort_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsort_dateNull() {
                this[this.tableINVOICE_HEADER.sort_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow[] Getinvoice_itemsRows() {
                if ((this.Table.ChildRelations["invHeader_invItems"] == null)) {
                    return new invoice_itemsRow[0];
                }
                else {
                    return ((invoice_itemsRow[])(base.GetChildRows(this.Table.ChildRelations["invHeader_invItems"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class invoice_itemsRow : global::System.Data.DataRow {
            
            private invoice_itemsDataTable tableinvoice_items;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_itemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoice_items = ((invoice_itemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tableinvoice_items.invoice_numberColumn]));
                }
                set {
                    this[this.tableinvoice_items.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long line_number {
                get {
                    return ((long)(this[this.tableinvoice_items.line_numberColumn]));
                }
                set {
                    this[this.tableinvoice_items.line_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prod_id {
                get {
                    try {
                        return ((string)(this[this.tableinvoice_items.prod_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prod_id\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.prod_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double qty {
                get {
                    try {
                        return ((double)(this[this.tableinvoice_items.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double weight {
                get {
                    try {
                        return ((double)(this[this.tableinvoice_items.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double rate {
                get {
                    try {
                        return ((double)(this[this.tableinvoice_items.rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rate\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double gst_value {
                get {
                    try {
                        return ((double)(this[this.tableinvoice_items.gst_valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gst_value\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.gst_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    try {
                        return ((double)(this[this.tableinvoice_items.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string qty_rate {
                get {
                    try {
                        return ((string)(this[this.tableinvoice_items.qty_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty_rate\' in table \'invoice_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_items.qty_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow INVOICE_HEADERRow {
                get {
                    return ((INVOICE_HEADERRow)(this.GetParentRow(this.Table.ParentRelations["invHeader_invItems"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["invHeader_invItems"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRow productsRow {
                get {
                    return ((productsRow)(this.GetParentRow(this.Table.ParentRelations["products_invoice_items"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["products_invoice_items"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprod_idNull() {
                return this.IsNull(this.tableinvoice_items.prod_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprod_idNull() {
                this[this.tableinvoice_items.prod_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqtyNull() {
                return this.IsNull(this.tableinvoice_items.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqtyNull() {
                this[this.tableinvoice_items.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsweightNull() {
                return this.IsNull(this.tableinvoice_items.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetweightNull() {
                this[this.tableinvoice_items.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrateNull() {
                return this.IsNull(this.tableinvoice_items.rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrateNull() {
                this[this.tableinvoice_items.rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isgst_valueNull() {
                return this.IsNull(this.tableinvoice_items.gst_valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setgst_valueNull() {
                this[this.tableinvoice_items.gst_valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountNull() {
                return this.IsNull(this.tableinvoice_items.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountNull() {
                this[this.tableinvoice_items.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isqty_rateNull() {
                return this.IsNull(this.tableinvoice_items.qty_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setqty_rateNull() {
                this[this.tableinvoice_items.qty_rateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class payment_typeRow : global::System.Data.DataRow {
            
            private payment_typeDataTable tablepayment_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal payment_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepayment_type = ((payment_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long payment_type_id {
                get {
                    return ((long)(this[this.tablepayment_type.payment_type_idColumn]));
                }
                set {
                    this[this.tablepayment_type.payment_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tablepayment_type.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc\' in table \'payment_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayment_type.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tablepayment_type.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tablepayment_type.descColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class product_typeRow : global::System.Data.DataRow {
            
            private product_typeDataTable tableproduct_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal product_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_type = ((product_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long type_id {
                get {
                    return ((long)(this[this.tableproduct_type.type_idColumn]));
                }
                set {
                    this[this.tableproduct_type.type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tableproduct_type.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tableproduct_type.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tableproduct_type.descColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class productsRow : global::System.Data.DataRow {
            
            private productsDataTable tableproducts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal productsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproducts = ((productsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prod_id {
                get {
                    try {
                        return ((string)(this[this.tableproducts.prod_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prod_id\' in table \'products\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproducts.prod_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tableproducts.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc\' in table \'products\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproducts.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double percent_carcass {
                get {
                    try {
                        return ((double)(this[this.tableproducts.percent_carcassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percent_carcass\' in table \'products\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproducts.percent_carcassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long type_id {
                get {
                    try {
                        return ((long)(this[this.tableproducts.type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_id\' in table \'products\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproducts.type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long gst {
                get {
                    try {
                        return ((long)(this[this.tableproducts.gstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gst\' in table \'products\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproducts.gstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprod_idNull() {
                return this.IsNull(this.tableproducts.prod_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprod_idNull() {
                this[this.tableproducts.prod_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tableproducts.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tableproducts.descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispercent_carcassNull() {
                return this.IsNull(this.tableproducts.percent_carcassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpercent_carcassNull() {
                this[this.tableproducts.percent_carcassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istype_idNull() {
                return this.IsNull(this.tableproducts.type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settype_idNull() {
                this[this.tableproducts.type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgstNull() {
                return this.IsNull(this.tableproducts.gstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgstNull() {
                this[this.tableproducts.gstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow[] Getinvoice_itemsRows() {
                if ((this.Table.ChildRelations["products_invoice_items"] == null)) {
                    return new invoice_itemsRow[0];
                }
                else {
                    return ((invoice_itemsRow[])(base.GetChildRows(this.Table.ChildRelations["products_invoice_items"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sqlite_sequenceRow : global::System.Data.DataRow {
            
            private sqlite_sequenceDataTable tablesqlite_sequence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sqlite_sequenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesqlite_sequence = ((sqlite_sequenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablesqlite_sequence.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'sqlite_sequence\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesqlite_sequence.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string seq {
                get {
                    try {
                        return ((string)(this[this.tablesqlite_sequence.seqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seq\' in table \'sqlite_sequence\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesqlite_sequence.seqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tablesqlite_sequence.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull() {
                this[this.tablesqlite_sequence.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsseqNull() {
                return this.IsNull(this.tablesqlite_sequence.seqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetseqNull() {
                this[this.tablesqlite_sequence.seqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class customer_transRow : global::System.Data.DataRow {
            
            private customer_transDataTable tablecustomer_trans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal customer_transRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecustomer_trans = ((customer_transDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_id {
                get {
                    return ((long)(this[this.tablecustomer_trans.t_idColumn]));
                }
                set {
                    this[this.tablecustomer_trans.t_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_type {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_type\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_cust_id {
                get {
                    try {
                        return ((long)(this[this.tablecustomer_trans.t_cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_cust_id\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_src_id {
                get {
                    try {
                        return ((long)(this[this.tablecustomer_trans.t_src_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_src_id\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_src_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_ref_id {
                get {
                    try {
                        return ((long)(this[this.tablecustomer_trans.t_ref_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_ref_id\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_ref_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime t_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomer_trans.t_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_date\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_note {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_note\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime t_timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomer_trans.t_timestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_timestamp\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_timestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amount {
                get {
                    try {
                        return ((double)(this[this.tablecustomer_trans.t_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amount\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_unpaid {
                get {
                    try {
                        return ((double)(this[this.tablecustomer_trans.t_unpaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_unpaid\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_unpaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_no_print {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_no_printColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_no_print\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_no_printColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_week_id {
                get {
                    try {
                        return ((long)(this[this.tablecustomer_trans.t_week_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_week_id\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_week_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_date1 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_date1\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long t_finished {
                get {
                    try {
                        return ((long)(this[this.tablecustomer_trans.t_finishedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_finished\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_finishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_date2 {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_date2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_date2\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_date2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_src_dckt_id {
                get {
                    try {
                        return ((string)(this[this.tablecustomer_trans.t_src_dckt_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_src_dckt_id\' in table \'customer_trans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomer_trans.t_src_dckt_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow customerRow {
                get {
                    return ((customerRow)(this.GetParentRow(this.Table.ParentRelations["customer_trans_customer"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["customer_trans_customer"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRow debtors_summaryRow {
                get {
                    return ((debtors_summaryRow)(this.GetParentRow(this.Table.ParentRelations["debtors_summary_customer"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["debtors_summary_customer"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_typeNull() {
                return this.IsNull(this.tablecustomer_trans.t_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_typeNull() {
                this[this.tablecustomer_trans.t_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_cust_idNull() {
                return this.IsNull(this.tablecustomer_trans.t_cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_cust_idNull() {
                this[this.tablecustomer_trans.t_cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_src_idNull() {
                return this.IsNull(this.tablecustomer_trans.t_src_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_src_idNull() {
                this[this.tablecustomer_trans.t_src_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_ref_idNull() {
                return this.IsNull(this.tablecustomer_trans.t_ref_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_ref_idNull() {
                this[this.tablecustomer_trans.t_ref_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_dateNull() {
                return this.IsNull(this.tablecustomer_trans.t_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_dateNull() {
                this[this.tablecustomer_trans.t_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_noteNull() {
                return this.IsNull(this.tablecustomer_trans.t_noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_noteNull() {
                this[this.tablecustomer_trans.t_noteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_timestampNull() {
                return this.IsNull(this.tablecustomer_trans.t_timestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_timestampNull() {
                this[this.tablecustomer_trans.t_timestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amountNull() {
                return this.IsNull(this.tablecustomer_trans.t_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amountNull() {
                this[this.tablecustomer_trans.t_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_unpaidNull() {
                return this.IsNull(this.tablecustomer_trans.t_unpaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_unpaidNull() {
                this[this.tablecustomer_trans.t_unpaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_no_printNull() {
                return this.IsNull(this.tablecustomer_trans.t_no_printColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_no_printNull() {
                this[this.tablecustomer_trans.t_no_printColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_week_idNull() {
                return this.IsNull(this.tablecustomer_trans.t_week_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_week_idNull() {
                this[this.tablecustomer_trans.t_week_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_date1Null() {
                return this.IsNull(this.tablecustomer_trans.t_date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_date1Null() {
                this[this.tablecustomer_trans.t_date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_finishedNull() {
                return this.IsNull(this.tablecustomer_trans.t_finishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_finishedNull() {
                this[this.tablecustomer_trans.t_finishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_date2Null() {
                return this.IsNull(this.tablecustomer_trans.t_date2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_date2Null() {
                this[this.tablecustomer_trans.t_date2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_src_dckt_idNull() {
                return this.IsNull(this.tablecustomer_trans.t_src_dckt_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_src_dckt_idNull() {
                this[this.tablecustomer_trans.t_src_dckt_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class debtors_summaryRow : global::System.Data.DataRow {
            
            private debtors_summaryDataTable tabledebtors_summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal debtors_summaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledebtors_summary = ((debtors_summaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    return ((long)(this[this.tabledebtors_summary.cust_idColumn]));
                }
                set {
                    this[this.tabledebtors_summary.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double curAmt {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.curAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'curAmt\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.curAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double days7 {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.days7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'days7\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.days7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double days14 {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.days14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'days14\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.days14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double days21 {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.days21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'days21\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.days21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Owing {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.OwingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Owing\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.OwingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double open_bal {
                get {
                    try {
                        return ((double)(this[this.tabledebtors_summary.open_balColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'open_bal\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.open_balColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string date_last_payment {
                get {
                    try {
                        return ((string)(this[this.tabledebtors_summary.date_last_paymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_last_payment\' in table \'debtors_summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledebtors_summary.date_last_paymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscurAmtNull() {
                return this.IsNull(this.tabledebtors_summary.curAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcurAmtNull() {
                this[this.tabledebtors_summary.curAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdays7Null() {
                return this.IsNull(this.tabledebtors_summary.days7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdays7Null() {
                this[this.tabledebtors_summary.days7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdays14Null() {
                return this.IsNull(this.tabledebtors_summary.days14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdays14Null() {
                this[this.tabledebtors_summary.days14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdays21Null() {
                return this.IsNull(this.tabledebtors_summary.days21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdays21Null() {
                this[this.tabledebtors_summary.days21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwingNull() {
                return this.IsNull(this.tabledebtors_summary.OwingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwingNull() {
                this[this.tabledebtors_summary.OwingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isopen_balNull() {
                return this.IsNull(this.tabledebtors_summary.open_balColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setopen_balNull() {
                this[this.tabledebtors_summary.open_balColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdate_last_paymentNull() {
                return this.IsNull(this.tabledebtors_summary.date_last_paymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdate_last_paymentNull() {
                this[this.tabledebtors_summary.date_last_paymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow[] Getcustomer_transRows() {
                if ((this.Table.ChildRelations["debtors_summary_customer"] == null)) {
                    return new customer_transRow[0];
                }
                else {
                    return ((customer_transRow[])(base.GetChildRows(this.Table.ChildRelations["debtors_summary_customer"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class invoice_header_customerRow : global::System.Data.DataRow {
            
            private invoice_header_customerDataTable tableinvoice_header_customer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_header_customerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoice_header_customer = ((invoice_header_customerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    try {
                        return ((long)(this[this.tableinvoice_header_customer.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'invoice_header_customer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_header_customer.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tableinvoice_header_customer.invoice_numberColumn]));
                }
                set {
                    this[this.tableinvoice_header_customer.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoice_text {
                get {
                    try {
                        return ((string)(this[this.tableinvoice_header_customer.invoice_textColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_text\' in table \'invoice_header_customer\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableinvoice_header_customer.invoice_textColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tableinvoice_header_customer.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tableinvoice_header_customer.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_textNull() {
                return this.IsNull(this.tableinvoice_header_customer.invoice_textColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_textNull() {
                this[this.tableinvoice_header_customer.invoice_textColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class invoice_header_unpaidRow : global::System.Data.DataRow {
            
            private invoice_header_unpaidDataTable tableinvoice_header_unpaid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal invoice_header_unpaidRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoice_header_unpaid = ((invoice_header_unpaidDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    try {
                        return ((long)(this[this.tableinvoice_header_unpaid.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'invoice_header_unpaid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_header_unpaid.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tableinvoice_header_unpaid.invoice_numberColumn]));
                }
                set {
                    this[this.tableinvoice_header_unpaid.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoice_text {
                get {
                    try {
                        return ((string)(this[this.tableinvoice_header_unpaid.invoice_textColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_text\' in table \'invoice_header_unpaid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoice_header_unpaid.invoice_textColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tableinvoice_header_unpaid.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tableinvoice_header_unpaid.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_textNull() {
                return this.IsNull(this.tableinvoice_header_unpaid.invoice_textColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_textNull() {
                this[this.tableinvoice_header_unpaid.invoice_textColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SalesSummary1Row : global::System.Data.DataRow {
            
            private SalesSummary1DataTable tableSalesSummary1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SalesSummary1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSummary1 = ((SalesSummary1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_id {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummary1.t_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_id\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_desc {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummary1.t_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_desc\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_qty {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_qty\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_whgt {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_whgtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_whgt\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_whgtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_avg {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_avgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_avg\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_avgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amt {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amt\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_qtyp {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_qtypColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_qtyp\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_qtypColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_whgtp {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_whgtpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_whgtp\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_whgtpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amtp {
                get {
                    try {
                        return ((double)(this[this.tableSalesSummary1.t_amtpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amtp\' in table \'SalesSummary1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummary1.t_amtpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_idNull() {
                return this.IsNull(this.tableSalesSummary1.t_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_idNull() {
                this[this.tableSalesSummary1.t_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_descNull() {
                return this.IsNull(this.tableSalesSummary1.t_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_descNull() {
                this[this.tableSalesSummary1.t_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_qtyNull() {
                return this.IsNull(this.tableSalesSummary1.t_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_qtyNull() {
                this[this.tableSalesSummary1.t_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_whgtNull() {
                return this.IsNull(this.tableSalesSummary1.t_whgtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_whgtNull() {
                this[this.tableSalesSummary1.t_whgtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_avgNull() {
                return this.IsNull(this.tableSalesSummary1.t_avgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_avgNull() {
                this[this.tableSalesSummary1.t_avgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amtNull() {
                return this.IsNull(this.tableSalesSummary1.t_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amtNull() {
                this[this.tableSalesSummary1.t_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_qtypNull() {
                return this.IsNull(this.tableSalesSummary1.t_qtypColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_qtypNull() {
                this[this.tableSalesSummary1.t_qtypColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_whgtpNull() {
                return this.IsNull(this.tableSalesSummary1.t_whgtpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_whgtpNull() {
                this[this.tableSalesSummary1.t_whgtpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amtpNull() {
                return this.IsNull(this.tableSalesSummary1.t_amtpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amtpNull() {
                this[this.tableSalesSummary1.t_amtpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductSalesSummaryRow : global::System.Data.DataRow {
            
            private ProductSalesSummaryDataTable tableProductSalesSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductSalesSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductSalesSummary = ((ProductSalesSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_id {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesSummary.t_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_id\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_desc {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesSummary.t_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_desc\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_qty {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_qty\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_whgt {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_whgtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_whgt\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_whgtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_avg {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_avgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_avg\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_avgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amt {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amt\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_qtyp {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_qtypColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_qtyp\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_qtypColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_whgtp {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_whgtpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_whgtp\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_whgtpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amtp {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesSummary.t_amtpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amtp\' in table \'ProductSalesSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesSummary.t_amtpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_idNull() {
                return this.IsNull(this.tableProductSalesSummary.t_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_idNull() {
                this[this.tableProductSalesSummary.t_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_descNull() {
                return this.IsNull(this.tableProductSalesSummary.t_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_descNull() {
                this[this.tableProductSalesSummary.t_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_qtyNull() {
                return this.IsNull(this.tableProductSalesSummary.t_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_qtyNull() {
                this[this.tableProductSalesSummary.t_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_whgtNull() {
                return this.IsNull(this.tableProductSalesSummary.t_whgtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_whgtNull() {
                this[this.tableProductSalesSummary.t_whgtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_avgNull() {
                return this.IsNull(this.tableProductSalesSummary.t_avgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_avgNull() {
                this[this.tableProductSalesSummary.t_avgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amtNull() {
                return this.IsNull(this.tableProductSalesSummary.t_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amtNull() {
                this[this.tableProductSalesSummary.t_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_qtypNull() {
                return this.IsNull(this.tableProductSalesSummary.t_qtypColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_qtypNull() {
                this[this.tableProductSalesSummary.t_qtypColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_whgtpNull() {
                return this.IsNull(this.tableProductSalesSummary.t_whgtpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_whgtpNull() {
                this[this.tableProductSalesSummary.t_whgtpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amtpNull() {
                return this.IsNull(this.tableProductSalesSummary.t_amtpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amtpNull() {
                this[this.tableProductSalesSummary.t_amtpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductSalesReportRow : global::System.Data.DataRow {
            
            private ProductSalesReportDataTable tableProductSalesReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductSalesReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductSalesReport = ((ProductSalesReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prod_id {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesReport.prod_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prod_id\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.prod_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prod_desc {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesReport.prod_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prod_desc\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.prod_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string invoice_date {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesReport.invoice_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_date\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.invoice_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string docket_number {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesReport.docket_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'docket_number\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.docket_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cust_id {
                get {
                    try {
                        return ((string)(this[this.tableProductSalesReport.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double qty {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesReport.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double weight {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesReport.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double rate {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesReport.rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rate\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesReport.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double avg_weight {
                get {
                    try {
                        return ((double)(this[this.tableProductSalesReport.avg_weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'avg_weight\' in table \'ProductSalesReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSalesReport.avg_weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprod_idNull() {
                return this.IsNull(this.tableProductSalesReport.prod_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprod_idNull() {
                this[this.tableProductSalesReport.prod_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprod_descNull() {
                return this.IsNull(this.tableProductSalesReport.prod_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprod_descNull() {
                this[this.tableProductSalesReport.prod_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_dateNull() {
                return this.IsNull(this.tableProductSalesReport.invoice_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_dateNull() {
                this[this.tableProductSalesReport.invoice_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdocket_numberNull() {
                return this.IsNull(this.tableProductSalesReport.docket_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdocket_numberNull() {
                this[this.tableProductSalesReport.docket_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tableProductSalesReport.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tableProductSalesReport.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqtyNull() {
                return this.IsNull(this.tableProductSalesReport.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqtyNull() {
                this[this.tableProductSalesReport.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsweightNull() {
                return this.IsNull(this.tableProductSalesReport.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetweightNull() {
                this[this.tableProductSalesReport.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrateNull() {
                return this.IsNull(this.tableProductSalesReport.rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrateNull() {
                this[this.tableProductSalesReport.rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountNull() {
                return this.IsNull(this.tableProductSalesReport.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountNull() {
                this[this.tableProductSalesReport.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isavg_weightNull() {
                return this.IsNull(this.tableProductSalesReport.avg_weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setavg_weightNull() {
                this[this.tableProductSalesReport.avg_weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PaymentAdjustRptRow : global::System.Data.DataRow {
            
            private PaymentAdjustRptDataTable tablePaymentAdjustRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PaymentAdjustRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentAdjustRpt = ((PaymentAdjustRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_date {
                get {
                    try {
                        return ((string)(this[this.tablePaymentAdjustRpt.t_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_date\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.t_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string t_type {
                get {
                    try {
                        return ((string)(this[this.tablePaymentAdjustRpt.t_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_type\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.t_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cust_id {
                get {
                    try {
                        return ((int)(this[this.tablePaymentAdjustRpt.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string contact_name {
                get {
                    try {
                        return ((string)(this[this.tablePaymentAdjustRpt.contact_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact_name\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.contact_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name_address_1 {
                get {
                    try {
                        return ((string)(this[this.tablePaymentAdjustRpt.name_address_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_address_1\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.name_address_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double t_amount {
                get {
                    try {
                        return ((double)(this[this.tablePaymentAdjustRpt.t_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_amount\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.t_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int t_id {
                get {
                    try {
                        return ((int)(this[this.tablePaymentAdjustRpt.t_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'t_id\' in table \'PaymentAdjustRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentAdjustRpt.t_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_dateNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.t_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_dateNull() {
                this[this.tablePaymentAdjustRpt.t_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_typeNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.t_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_typeNull() {
                this[this.tablePaymentAdjustRpt.t_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tablePaymentAdjustRpt.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscontact_nameNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.contact_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcontact_nameNull() {
                this[this.tablePaymentAdjustRpt.contact_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isname_address_1Null() {
                return this.IsNull(this.tablePaymentAdjustRpt.name_address_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setname_address_1Null() {
                this[this.tablePaymentAdjustRpt.name_address_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_amountNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.t_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_amountNull() {
                this[this.tablePaymentAdjustRpt.t_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ist_idNull() {
                return this.IsNull(this.tablePaymentAdjustRpt.t_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Sett_idNull() {
                this[this.tablePaymentAdjustRpt.t_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class autoVacRow : global::System.Data.DataRow {
            
            private autoVacDataTable tableautoVac;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal autoVacRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableautoVac = ((autoVacDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INVOICE_RECIEPTSRow : global::System.Data.DataRow {
            
            private INVOICE_RECIEPTSDataTable tableINVOICE_RECIEPTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal INVOICE_RECIEPTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINVOICE_RECIEPTS = ((INVOICE_RECIEPTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long recpt_number {
                get {
                    return ((long)(this[this.tableINVOICE_RECIEPTS.recpt_numberColumn]));
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.recpt_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    try {
                        return ((double)(this[this.tableINVOICE_RECIEPTS.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'INVOICE_RECIEPTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string recpt_date {
                get {
                    try {
                        return ((string)(this[this.tableINVOICE_RECIEPTS.recpt_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recpt_date\' in table \'INVOICE_RECIEPTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.recpt_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_number {
                get {
                    return ((long)(this[this.tableINVOICE_RECIEPTS.invoice_numberColumn]));
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long cust_id {
                get {
                    try {
                        return ((long)(this[this.tableINVOICE_RECIEPTS.cust_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_id\' in table \'INVOICE_RECIEPTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.cust_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long invoice_key {
                get {
                    try {
                        return ((long)(this[this.tableINVOICE_RECIEPTS.invoice_keyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_key\' in table \'INVOICE_RECIEPTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINVOICE_RECIEPTS.invoice_keyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsamountNull() {
                return this.IsNull(this.tableINVOICE_RECIEPTS.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetamountNull() {
                this[this.tableINVOICE_RECIEPTS.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrecpt_dateNull() {
                return this.IsNull(this.tableINVOICE_RECIEPTS.recpt_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrecpt_dateNull() {
                this[this.tableINVOICE_RECIEPTS.recpt_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscust_idNull() {
                return this.IsNull(this.tableINVOICE_RECIEPTS.cust_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcust_idNull() {
                this[this.tableINVOICE_RECIEPTS.cust_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinvoice_keyNull() {
                return this.IsNull(this.tableINVOICE_RECIEPTS.invoice_keyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinvoice_keyNull() {
                this[this.tableINVOICE_RECIEPTS.invoice_keyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class configurationRowChangeEvent : global::System.EventArgs {
            
            private configurationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationRowChangeEvent(configurationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public configurationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class customerRowChangeEvent : global::System.EventArgs {
            
            private customerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRowChangeEvent(customerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class debtorsRowChangeEvent : global::System.EventArgs {
            
            private debtorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRowChangeEvent(debtorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class glRowChangeEvent : global::System.EventArgs {
            
            private glRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glRowChangeEvent(glRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public glRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class gl_categoryRowChangeEvent : global::System.EventArgs {
            
            private gl_categoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRowChangeEvent(gl_categoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_categoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class gl_txnsRowChangeEvent : global::System.EventArgs {
            
            private gl_txnsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRowChangeEvent(gl_txnsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public gl_txnsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class INVOICE_HEADERRowChangeEvent : global::System.EventArgs {
            
            private INVOICE_HEADERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRowChangeEvent(INVOICE_HEADERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_HEADERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class invoice_itemsRowChangeEvent : global::System.EventArgs {
            
            private invoice_itemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRowChangeEvent(invoice_itemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_itemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class payment_typeRowChangeEvent : global::System.EventArgs {
            
            private payment_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRowChangeEvent(payment_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public payment_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class product_typeRowChangeEvent : global::System.EventArgs {
            
            private product_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRowChangeEvent(product_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public product_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class productsRowChangeEvent : global::System.EventArgs {
            
            private productsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRowChangeEvent(productsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public productsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sqlite_sequenceRowChangeEvent : global::System.EventArgs {
            
            private sqlite_sequenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceRowChangeEvent(sqlite_sequenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sqlite_sequenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class customer_transRowChangeEvent : global::System.EventArgs {
            
            private customer_transRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRowChangeEvent(customer_transRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public customer_transRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class debtors_summaryRowChangeEvent : global::System.EventArgs {
            
            private debtors_summaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRowChangeEvent(debtors_summaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public debtors_summaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class invoice_header_customerRowChangeEvent : global::System.EventArgs {
            
            private invoice_header_customerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRowChangeEvent(invoice_header_customerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_customerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class invoice_header_unpaidRowChangeEvent : global::System.EventArgs {
            
            private invoice_header_unpaidRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRowChangeEvent(invoice_header_unpaidRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public invoice_header_unpaidRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SalesSummary1RowChangeEvent : global::System.EventArgs {
            
            private SalesSummary1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1RowChangeEvent(SalesSummary1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SalesSummary1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductSalesSummaryRowChangeEvent : global::System.EventArgs {
            
            private ProductSalesSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryRowChangeEvent(ProductSalesSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductSalesReportRowChangeEvent : global::System.EventArgs {
            
            private ProductSalesReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportRowChangeEvent(ProductSalesReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductSalesReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PaymentAdjustRptRowChangeEvent : global::System.EventArgs {
            
            private PaymentAdjustRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptRowChangeEvent(PaymentAdjustRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaymentAdjustRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class autoVacRowChangeEvent : global::System.EventArgs {
            
            private autoVacRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacRowChangeEvent(autoVacRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public autoVacRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class INVOICE_RECIEPTSRowChangeEvent : global::System.EventArgs {
            
            private INVOICE_RECIEPTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSRowChangeEvent(INVOICE_RECIEPTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public INVOICE_RECIEPTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Vectra.DataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class configurationTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public configurationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "configuration";
            tableMapping.ColumnMappings.Add("bus_names", "bus_names");
            tableMapping.ColumnMappings.Add("bus_addr1", "bus_addr1");
            tableMapping.ColumnMappings.Add("bus_addr2", "bus_addr2");
            tableMapping.ColumnMappings.Add("bus_post_code", "bus_post_code");
            tableMapping.ColumnMappings.Add("bus_phone", "bus_phone");
            tableMapping.ColumnMappings.Add("gl_sales", "gl_sales");
            tableMapping.ColumnMappings.Add("gl_sales_gst", "gl_sales_gst");
            tableMapping.ColumnMappings.Add("gl_bank", "gl_bank");
            tableMapping.ColumnMappings.Add("gl_adj", "gl_adj");
            tableMapping.ColumnMappings.Add("gl_disc", "gl_disc");
            tableMapping.ColumnMappings.Add("StatementDate", "StatementDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""configuration"" (""bus_names"", ""bus_addr1"", ""bus_addr2"", ""bus_post_code"", ""bus_phone"", ""gl_sales"", ""gl_sales_gst"", ""gl_bank"", ""gl_adj"", ""gl_disc"", ""StatementDate"") VALUES (:bus_names, :bus_addr1, :bus_addr2, :bus_post_code, :bus_phone, :gl_sales, :gl_sales_gst, :gl_bank, :gl_adj, :gl_disc, :StatementDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_names";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "bus_names";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_addr1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "bus_addr1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_addr2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "bus_addr2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_post_code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "bus_post_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "bus_phone";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_sales";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_sales";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_sales_gst";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_sales_gst";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_bank";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_bank";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_adj";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_adj";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_disc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_disc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "StatementDate";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "StatementDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE    configuration\r\nSET              bus_names = :bus_names, bus_addr1 = :bu" +
                "s_addr1, bus_addr2 = :bus_addr2, bus_post_code = :bus_post_code, bus_phone = :bu" +
                "s_phone, \r\n                      StatementDate = :StatementDate";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_names";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "bus_names";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_addr1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "bus_addr1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_addr2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "bus_addr2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_post_code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "bus_post_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "bus_phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "bus_phone";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "StatementDate";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "StatementDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[4];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT bus_names, bus_addr1, bus_addr2, bus_post_code, bus_phone, gl_sales, gl_sa" +
                "les_gst, gl_bank, gl_adj, gl_disc, StatementDate FROM configuration";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     acnt_period\r\nFROM         configuration";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     StatementDate\r\nFROM         configuration";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE    configuration\r\nSET              StatementDate = :StatementDate";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "StatementDate";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "StatementDate";
            this._commandCollection[3].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.configurationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.configurationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.configurationDataTable dataTable = new DataSet2.configurationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.configurationDataTable GetStatementDate() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            DataSet2.configurationDataTable dataTable = new DataSet2.configurationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.configurationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "configuration");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string bus_names, string bus_addr1, string bus_addr2, string bus_post_code, string bus_phone, string gl_sales, string gl_sales_gst, string gl_bank, string gl_adj, string gl_disc, string StatementDate) {
            if ((bus_names == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(bus_names));
            }
            if ((bus_addr1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(bus_addr1));
            }
            if ((bus_addr2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(bus_addr2));
            }
            if ((bus_post_code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(bus_post_code));
            }
            if ((bus_phone == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(bus_phone));
            }
            if ((gl_sales == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(gl_sales));
            }
            if ((gl_sales_gst == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(gl_sales_gst));
            }
            if ((gl_bank == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(gl_bank));
            }
            if ((gl_adj == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(gl_adj));
            }
            if ((gl_disc == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(gl_disc));
            }
            if ((StatementDate == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(StatementDate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string bus_names, string bus_addr1, string bus_addr2, string bus_post_code, string bus_phone, string StatementDate) {
            if ((bus_names == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(bus_names));
            }
            if ((bus_addr1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(bus_addr1));
            }
            if ((bus_addr2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(bus_addr2));
            }
            if ((bus_post_code == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(bus_post_code));
            }
            if ((bus_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(bus_phone));
            }
            if ((StatementDate == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(StatementDate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<long> getCurrentAcntPeriod() {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<long>();
            }
            else {
                return new global::System.Nullable<long>(((long)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateStatementDate(string StatementDate) {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[3];
            if ((StatementDate == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(StatementDate));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class customerTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public customerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "customer";
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("name_address_1", "name_address_1");
            tableMapping.ColumnMappings.Add("name_address_2", "name_address_2");
            tableMapping.ColumnMappings.Add("name_address_3", "name_address_3");
            tableMapping.ColumnMappings.Add("name_address_4", "name_address_4");
            tableMapping.ColumnMappings.Add("pcode", "pcode");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("contact_name", "contact_name");
            tableMapping.ColumnMappings.Add("abn", "abn");
            tableMapping.ColumnMappings.Add("credit_rating", "credit_rating");
            tableMapping.ColumnMappings.Add("notes", "notes");
            tableMapping.ColumnMappings.Add("dunning", "dunning");
            tableMapping.ColumnMappings.Add("open_bal", "open_bal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""customer"" WHERE ((""cust_id"" = :Original_cust_id) AND ((:IsNull_name_address_1 = 1 AND ""name_address_1"" IS NULL) OR (""name_address_1"" = :Original_name_address_1)) AND ((:IsNull_name_address_2 = 1 AND ""name_address_2"" IS NULL) OR (""name_address_2"" = :Original_name_address_2)) AND ((:IsNull_name_address_3 = 1 AND ""name_address_3"" IS NULL) OR (""name_address_3"" = :Original_name_address_3)) AND ((:IsNull_name_address_4 = 1 AND ""name_address_4"" IS NULL) OR (""name_address_4"" = :Original_name_address_4)) AND ((:IsNull_pcode = 1 AND ""pcode"" IS NULL) OR (""pcode"" = :Original_pcode)) AND ((:IsNull_phone = 1 AND ""phone"" IS NULL) OR (""phone"" = :Original_phone)) AND ((:IsNull_contact_name = 1 AND ""contact_name"" IS NULL) OR (""contact_name"" = :Original_contact_name)) AND ((:IsNull_abn = 1 AND ""abn"" IS NULL) OR (""abn"" = :Original_abn)) AND ((:IsNull_credit_rating = 1 AND ""credit_rating"" IS NULL) OR (""credit_rating"" = :Original_credit_rating)) AND ((:IsNull_notes = 1 AND ""notes"" IS NULL) OR (""notes"" = :Original_notes)) AND ((:IsNull_dunning = 1 AND ""dunning"" IS NULL) OR (""dunning"" = :Original_dunning)) AND ((:IsNull_avg_payment = 1 AND ""avg_payment"" IS NULL) OR (""avg_payment"" = :Original_avg_payment)) AND ((:IsNull_open_bal = 1 AND ""open_bal"" IS NULL) OR (""open_bal"" = :Original_open_bal)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_3";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_4";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_4";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_pcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_pcode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_phone";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_contact_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_contact_name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abn";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_credit_rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_credit_rating";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_notes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dunning";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dunning";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_avg_payment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_avg_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_open_bal";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_open_bal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""customer"" (""cust_id"", ""name_address_1"", ""name_address_2"", ""name_address_3"", ""name_address_4"", ""pcode"", ""phone"", ""contact_name"", ""abn"", ""credit_rating"", ""notes"", ""dunning"", ""avg_payment"", ""open_bal"") VALUES (:cust_id, :name_address_1, :name_address_2, :name_address_3, :name_address_4, :pcode, :phone, :contact_name, :abn, :credit_rating, :notes, :dunning, :avg_payment, :open_bal)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_3";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_4";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "pcode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "contact_name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "credit_rating";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dunning";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "avg_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "open_bal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"customer\" SET \"cust_id\" = :cust_id, \"name_address_1\" = :name_addre" +
                "ss_1, \"name_address_2\" = :name_address_2, \"name_address_3\" = :name_address_3, \"n" +
                "ame_address_4\" = :name_address_4, \"pcode\" = :pcode, \"phone\" = :phone, \"contact_n" +
                "ame\" = :contact_name, \"abn\" = :abn, \"credit_rating\" = :credit_rating, \"notes\" = " +
                ":notes, \"dunning\" = :dunning, \"avg_payment\" = :avg_payment, \"open_bal\" = :open_b" +
                "al WHERE ((\"cust_id\" = :Original_cust_id) AND ((:IsNull_name_address_1 = 1 AND \"" +
                "name_address_1\" IS NULL) OR (\"name_address_1\" = :Original_name_address_1)) AND (" +
                "(:IsNull_name_address_2 = 1 AND \"name_address_2\" IS NULL) OR (\"name_address_2\" =" +
                " :Original_name_address_2)) AND ((:IsNull_name_address_3 = 1 AND \"name_address_3" +
                "\" IS NULL) OR (\"name_address_3\" = :Original_name_address_3)) AND ((:IsNull_name_" +
                "address_4 = 1 AND \"name_address_4\" IS NULL) OR (\"name_address_4\" = :Original_nam" +
                "e_address_4)) AND ((:IsNull_pcode = 1 AND \"pcode\" IS NULL) OR (\"pcode\" = :Origin" +
                "al_pcode)) AND ((:IsNull_phone = 1 AND \"phone\" IS NULL) OR (\"phone\" = :Original_" +
                "phone)) AND ((:IsNull_contact_name = 1 AND \"contact_name\" IS NULL) OR (\"contact_" +
                "name\" = :Original_contact_name)) AND ((:IsNull_abn = 1 AND \"abn\" IS NULL) OR (\"a" +
                "bn\" = :Original_abn)) AND ((:IsNull_credit_rating = 1 AND \"credit_rating\" IS NUL" +
                "L) OR (\"credit_rating\" = :Original_credit_rating)) AND ((:IsNull_notes = 1 AND \"" +
                "notes\" IS NULL) OR (\"notes\" = :Original_notes)) AND ((:IsNull_dunning = 1 AND \"d" +
                "unning\" IS NULL) OR (\"dunning\" = :Original_dunning)) AND ((:IsNull_avg_payment =" +
                " 1 AND \"avg_payment\" IS NULL) OR (\"avg_payment\" = :Original_avg_payment)) AND ((" +
                ":IsNull_open_bal = 1 AND \"open_bal\" IS NULL) OR (\"open_bal\" = :Original_open_bal" +
                ")))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_3";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_4";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "pcode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "contact_name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "credit_rating";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dunning";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "avg_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "open_bal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_2";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_3";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_3";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_name_address_4";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_name_address_4";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_pcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_pcode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_phone";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_phone";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "phone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_contact_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_contact_name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abn";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_credit_rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_credit_rating";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "credit_rating";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_notes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dunning";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dunning";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dunning";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_avg_payment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_avg_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "avg_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_open_bal";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_open_bal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[2];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     cust_id, name_address_1, name_address_2, name_address_3, name_address_" +
                "4, pcode, phone, contact_name, abn, credit_rating, notes, dunning, \r\n           " +
                "           avg_payment, open_bal\r\nFROM         customer\r\nORDER BY name_address_1" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT open_bal FROM customer WHERE (cust_id = ?)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.customerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.customerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.customerDataTable dataTable = new DataSet2.customerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.customerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "customer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_cust_id, string Original_name_address_1, string Original_name_address_2, string Original_name_address_3, string Original_name_address_4, string Original_pcode, string Original_phone, string Original_contact_name, string Original_abn, string Original_credit_rating, string Original_notes, string Original_dunning, global::System.Nullable<double> Original_avg_payment, global::System.Nullable<double> Original_open_bal) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_cust_id));
            if ((Original_name_address_1 == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name_address_1));
            }
            if ((Original_name_address_2 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_name_address_2));
            }
            if ((Original_name_address_3 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_name_address_3));
            }
            if ((Original_name_address_4 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_name_address_4));
            }
            if ((Original_pcode == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_pcode));
            }
            if ((Original_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_phone));
            }
            if ((Original_contact_name == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_contact_name));
            }
            if ((Original_abn == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_abn));
            }
            if ((Original_credit_rating == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_credit_rating));
            }
            if ((Original_notes == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_notes));
            }
            if ((Original_dunning == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_dunning));
            }
            if ((Original_avg_payment.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_avg_payment.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_open_bal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_open_bal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long cust_id, string name_address_1, string name_address_2, string name_address_3, string name_address_4, string pcode, string phone, string contact_name, string abn, string credit_rating, string notes, string dunning, global::System.Nullable<double> avg_payment, global::System.Nullable<double> open_bal) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(cust_id));
            if ((name_address_1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(name_address_1));
            }
            if ((name_address_2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(name_address_2));
            }
            if ((name_address_3 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(name_address_3));
            }
            if ((name_address_4 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(name_address_4));
            }
            if ((pcode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(pcode));
            }
            if ((phone == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(phone));
            }
            if ((contact_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(contact_name));
            }
            if ((abn == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(abn));
            }
            if ((credit_rating == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(credit_rating));
            }
            if ((notes == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(notes));
            }
            if ((dunning == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(dunning));
            }
            if ((avg_payment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(avg_payment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((open_bal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(open_bal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long cust_id, 
                    string name_address_1, 
                    string name_address_2, 
                    string name_address_3, 
                    string name_address_4, 
                    string pcode, 
                    string phone, 
                    string contact_name, 
                    string abn, 
                    string credit_rating, 
                    string notes, 
                    string dunning, 
                    global::System.Nullable<double> avg_payment, 
                    global::System.Nullable<double> open_bal, 
                    long Original_cust_id, 
                    string Original_name_address_1, 
                    string Original_name_address_2, 
                    string Original_name_address_3, 
                    string Original_name_address_4, 
                    string Original_pcode, 
                    string Original_phone, 
                    string Original_contact_name, 
                    string Original_abn, 
                    string Original_credit_rating, 
                    string Original_notes, 
                    string Original_dunning, 
                    global::System.Nullable<double> Original_avg_payment, 
                    global::System.Nullable<double> Original_open_bal) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(cust_id));
            if ((name_address_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(name_address_1));
            }
            if ((name_address_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(name_address_2));
            }
            if ((name_address_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(name_address_3));
            }
            if ((name_address_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(name_address_4));
            }
            if ((pcode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(pcode));
            }
            if ((phone == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(phone));
            }
            if ((contact_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(contact_name));
            }
            if ((abn == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(abn));
            }
            if ((credit_rating == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(credit_rating));
            }
            if ((notes == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(notes));
            }
            if ((dunning == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(dunning));
            }
            if ((avg_payment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(avg_payment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((open_bal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(open_bal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_cust_id));
            if ((Original_name_address_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_name_address_1));
            }
            if ((Original_name_address_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_name_address_2));
            }
            if ((Original_name_address_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_name_address_3));
            }
            if ((Original_name_address_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_name_address_4));
            }
            if ((Original_pcode == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_pcode));
            }
            if ((Original_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_phone));
            }
            if ((Original_contact_name == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_contact_name));
            }
            if ((Original_abn == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_abn));
            }
            if ((Original_credit_rating == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_credit_rating));
            }
            if ((Original_notes == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_notes));
            }
            if ((Original_dunning == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_dunning));
            }
            if ((Original_avg_payment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_avg_payment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_open_bal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_open_bal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string name_address_1, 
                    string name_address_2, 
                    string name_address_3, 
                    string name_address_4, 
                    string pcode, 
                    string phone, 
                    string contact_name, 
                    string abn, 
                    string credit_rating, 
                    string notes, 
                    string dunning, 
                    global::System.Nullable<double> avg_payment, 
                    global::System.Nullable<double> open_bal, 
                    long Original_cust_id, 
                    string Original_name_address_1, 
                    string Original_name_address_2, 
                    string Original_name_address_3, 
                    string Original_name_address_4, 
                    string Original_pcode, 
                    string Original_phone, 
                    string Original_contact_name, 
                    string Original_abn, 
                    string Original_credit_rating, 
                    string Original_notes, 
                    string Original_dunning, 
                    global::System.Nullable<double> Original_avg_payment, 
                    global::System.Nullable<double> Original_open_bal) {
            return this.Update(Original_cust_id, name_address_1, name_address_2, name_address_3, name_address_4, pcode, phone, contact_name, abn, credit_rating, notes, dunning, avg_payment, open_bal, Original_cust_id, Original_name_address_1, Original_name_address_2, Original_name_address_3, Original_name_address_4, Original_pcode, Original_phone, Original_contact_name, Original_abn, Original_credit_rating, Original_notes, Original_dunning, Original_avg_payment, Original_open_bal);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<double> GetCustomerOpenBal(long cust_id) {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((long)(cust_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<double>();
            }
            else {
                return new global::System.Nullable<double>(((double)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class debtorsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public debtorsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "debtors";
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("invoice_amount", "invoice_amount");
            tableMapping.ColumnMappings.Add("amount_outstanding", "amount_outstanding");
            tableMapping.ColumnMappings.Add("txn_date", "txn_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"debtors\" (\"cust_id\", \"invoice_number\", \"invoice_amount\", \"amo" +
                "unt_outstanding\", \"txn_date\") VALUES (:cust_id, :invoice_number, :invoice_amount" +
                ", :amount_outstanding, :txn_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount_outstanding";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount_outstanding";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "txn_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "txn_date";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cust_id, invoice_number, invoice_amount, amount_outstanding, txn_date FROM" +
                " \"main\".debtors";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.debtorsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.debtorsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.debtorsDataTable dataTable = new DataSet2.debtorsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.debtorsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "debtors");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long cust_id, long invoice_number, global::System.Nullable<double> invoice_amount, global::System.Nullable<double> amount_outstanding, string txn_date) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(cust_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(invoice_number));
            if ((invoice_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(invoice_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((amount_outstanding.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(amount_outstanding.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((txn_date == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(txn_date));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class glTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public glTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "gl";
            tableMapping.ColumnMappings.Add("gl_id", "gl_id");
            tableMapping.ColumnMappings.Add("desc", "desc");
            tableMapping.ColumnMappings.Add("category_id", "category_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"gl\" (\"gl_id\", \"desc\", \"category_id\") VALUES (:gl_id, :desc, :" +
                "category_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "category_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "category_id";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT gl_id, \"desc\", category_id FROM \"main\".gl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.glDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.glDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.glDataTable dataTable = new DataSet2.glDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.glDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "gl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string gl_id, string desc, global::System.Nullable<long> category_id) {
            if ((gl_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(gl_id));
            }
            if ((desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(desc));
            }
            if ((category_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(category_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class gl_categoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public gl_categoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "gl_category";
            tableMapping.ColumnMappings.Add("category_id", "category_id");
            tableMapping.ColumnMappings.Add("desc", "desc");
            tableMapping.ColumnMappings.Add("dbcr", "dbcr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"gl_category\" WHERE ((\"category_id\" = :Original_category_id) A" +
                "ND ((:IsNull_desc = 1 AND \"desc\" IS NULL) OR (\"desc\" = :Original_desc)) AND ((:I" +
                "sNull_dbcr = 1 AND \"dbcr\" IS NULL) OR (\"dbcr\" = :Original_dbcr)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_category_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "category_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dbcr";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dbcr";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"gl_category\" (\"category_id\", \"desc\", \"dbcr\") VALUES (:categor" +
                "y_id, :desc, :dbcr)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "category_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "category_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dbcr";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""gl_category"" SET ""category_id"" = :category_id, ""desc"" = :desc, ""dbcr"" = :dbcr WHERE ((""category_id"" = :Original_category_id) AND ((:IsNull_desc = 1 AND ""desc"" IS NULL) OR (""desc"" = :Original_desc)) AND ((:IsNull_dbcr = 1 AND ""dbcr"" IS NULL) OR (""dbcr"" = :Original_dbcr)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "category_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "category_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dbcr";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_category_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "category_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dbcr";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dbcr";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dbcr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT category_id, \"desc\", dbcr FROM \"main\".gl_category";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.gl_categoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.gl_categoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.gl_categoryDataTable dataTable = new DataSet2.gl_categoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.gl_categoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "gl_category");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_category_id, string Original_desc, string Original_dbcr) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_category_id));
            if ((Original_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_desc));
            }
            if ((Original_dbcr == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dbcr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long category_id, string desc, string dbcr) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(category_id));
            if ((desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(desc));
            }
            if ((dbcr == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dbcr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long category_id, string desc, string dbcr, long Original_category_id, string Original_desc, string Original_dbcr) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(category_id));
            if ((desc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(desc));
            }
            if ((dbcr == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dbcr));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Original_category_id));
            if ((Original_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_desc));
            }
            if ((Original_dbcr == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_dbcr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string desc, string dbcr, long Original_category_id, string Original_desc, string Original_dbcr) {
            return this.Update(Original_category_id, desc, dbcr, Original_category_id, Original_desc, Original_dbcr);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class gl_txnsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public gl_txnsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "gl_txns";
            tableMapping.ColumnMappings.Add("gl_id", "gl_id");
            tableMapping.ColumnMappings.Add("txn_id", "txn_id");
            tableMapping.ColumnMappings.Add("reference", "reference");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("source", "source");
            tableMapping.ColumnMappings.Add("date_from", "date_from");
            tableMapping.ColumnMappings.Add("date_to", "date_to");
            tableMapping.ColumnMappings.Add("qty", "qty");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""gl_txns"" WHERE (((:IsNull_gl_id = 1 AND ""gl_id"" IS NULL) OR (""gl_id"" = :Original_gl_id)) AND (""txn_id"" = :Original_txn_id) AND ((:IsNull_reference = 1 AND ""reference"" IS NULL) OR (""reference"" = :Original_reference)) AND ((:IsNull_amount = 1 AND ""amount"" IS NULL) OR (""amount"" = :Original_amount)) AND ((:IsNull_source = 1 AND ""source"" IS NULL) OR (""source"" = :Original_source)) AND ((:IsNull_date_from = 1 AND ""date_from"" IS NULL) OR (""date_from"" = :Original_date_from)) AND ((:IsNull_date_to = 1 AND ""date_to"" IS NULL) OR (""date_to"" = :Original_date_to)) AND ((:IsNull_qty = 1 AND ""qty"" IS NULL) OR (""qty"" = :Original_qty)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_gl_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_gl_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_txn_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "txn_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_reference";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_reference";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_source";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "source";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_source";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "source";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_date_from";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_date_from";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_date_to";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_date_to";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qty";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qty";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"gl_txns\" (\"gl_id\", \"txn_id\", \"reference\", \"amount\", \"source\"," +
                " \"date_from\", \"date_to\", \"qty\") VALUES (:gl_id, :txn_id, :reference, :amount, :s" +
                "ource, :date_from, :date_to, :qty)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "txn_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "txn_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "reference";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "source";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "source";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "date_from";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "date_to";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""gl_txns"" SET ""gl_id"" = :gl_id, ""txn_id"" = :txn_id, ""reference"" = :reference, ""amount"" = :amount, ""source"" = :source, ""date_from"" = :date_from, ""date_to"" = :date_to, ""qty"" = :qty WHERE (((:IsNull_gl_id = 1 AND ""gl_id"" IS NULL) OR (""gl_id"" = :Original_gl_id)) AND (""txn_id"" = :Original_txn_id) AND ((:IsNull_reference = 1 AND ""reference"" IS NULL) OR (""reference"" = :Original_reference)) AND ((:IsNull_amount = 1 AND ""amount"" IS NULL) OR (""amount"" = :Original_amount)) AND ((:IsNull_source = 1 AND ""source"" IS NULL) OR (""source"" = :Original_source)) AND ((:IsNull_date_from = 1 AND ""date_from"" IS NULL) OR (""date_from"" = :Original_date_from)) AND ((:IsNull_date_to = 1 AND ""date_to"" IS NULL) OR (""date_to"" = :Original_date_to)) AND ((:IsNull_qty = 1 AND ""qty"" IS NULL) OR (""qty"" = :Original_qty)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gl_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "txn_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "txn_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "reference";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "source";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "source";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "date_from";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "date_to";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_gl_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_gl_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "gl_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_txn_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "txn_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_reference";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_reference";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "reference";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_source";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "source";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_source";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "source";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_date_from";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_date_from";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_from";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_date_to";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_date_to";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "date_to";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qty";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qty";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT gl_id, txn_id, reference, amount, source, date_from, date_to, qty FROM \"ma" +
                "in\".gl_txns";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.gl_txnsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.gl_txnsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.gl_txnsDataTable dataTable = new DataSet2.gl_txnsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.gl_txnsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "gl_txns");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_gl_id, long Original_txn_id, string Original_reference, global::System.Nullable<double> Original_amount, string Original_source, string Original_date_from, string Original_date_to, global::System.Nullable<long> Original_qty) {
            if ((Original_gl_id == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_gl_id));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_txn_id));
            if ((Original_reference == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_reference));
            }
            if ((Original_amount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_amount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_source == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_source));
            }
            if ((Original_date_from == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_date_from));
            }
            if ((Original_date_to == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_date_to));
            }
            if ((Original_qty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((long)(Original_qty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string gl_id, long txn_id, string reference, global::System.Nullable<double> amount, string source, string date_from, string date_to, global::System.Nullable<long> qty) {
            if ((gl_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(gl_id));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(txn_id));
            if ((reference == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(reference));
            }
            if ((amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((source == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(source));
            }
            if ((date_from == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(date_from));
            }
            if ((date_to == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(date_to));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string gl_id, 
                    long txn_id, 
                    string reference, 
                    global::System.Nullable<double> amount, 
                    string source, 
                    string date_from, 
                    string date_to, 
                    global::System.Nullable<long> qty, 
                    string Original_gl_id, 
                    long Original_txn_id, 
                    string Original_reference, 
                    global::System.Nullable<double> Original_amount, 
                    string Original_source, 
                    string Original_date_from, 
                    string Original_date_to, 
                    global::System.Nullable<long> Original_qty) {
            if ((gl_id == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(gl_id));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(txn_id));
            if ((reference == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(reference));
            }
            if ((amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((source == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(source));
            }
            if ((date_from == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(date_from));
            }
            if ((date_to == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(date_to));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_gl_id == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_gl_id));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_txn_id));
            if ((Original_reference == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_reference));
            }
            if ((Original_amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_source == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_source));
            }
            if ((Original_date_from == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_date_from));
            }
            if ((Original_date_to == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_date_to));
            }
            if ((Original_qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string gl_id, string reference, global::System.Nullable<double> amount, string source, string date_from, string date_to, global::System.Nullable<long> qty, string Original_gl_id, long Original_txn_id, string Original_reference, global::System.Nullable<double> Original_amount, string Original_source, string Original_date_from, string Original_date_to, global::System.Nullable<long> Original_qty) {
            return this.Update(gl_id, Original_txn_id, reference, amount, source, date_from, date_to, qty, Original_gl_id, Original_txn_id, Original_reference, Original_amount, Original_source, Original_date_from, Original_date_to, Original_qty);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INVOICE_HEADERTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public INVOICE_HEADERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INVOICE_HEADER";
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("docket_number", "docket_number");
            tableMapping.ColumnMappings.Add("notes", "notes");
            tableMapping.ColumnMappings.Add("text_fully_paid", "text_fully_paid");
            tableMapping.ColumnMappings.Add("invoice_amount", "invoice_amount");
            tableMapping.ColumnMappings.Add("invoice_unpaid", "invoice_unpaid");
            tableMapping.ColumnMappings.Add("invoice_locked", "invoice_locked");
            tableMapping.ColumnMappings.Add("recent_payment", "recent_payment");
            tableMapping.ColumnMappings.Add("invoice_date", "invoice_date");
            tableMapping.ColumnMappings.Add("sort_date", "sort_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""INVOICE_HEADER"" WHERE ((""invoice_number"" = :Original_invoice_number) AND ((:IsNull_cust_id = 1 AND ""cust_id"" IS NULL) OR (""cust_id"" = :Original_cust_id)) AND ((:IsNull_docket_number = 1 AND ""docket_number"" IS NULL) OR (""docket_number"" = :Original_docket_number)) AND ((:IsNull_notes = 1 AND ""notes"" IS NULL) OR (""notes"" = :Original_notes)) AND ((:IsNull_text_fully_paid = 1 AND ""text_fully_paid"" IS NULL) OR (""text_fully_paid"" = :Original_text_fully_paid)) AND ((:IsNull_invoice_amount = 1 AND ""invoice_amount"" IS NULL) OR (""invoice_amount"" = :Original_invoice_amount)) AND ((:IsNull_invoice_unpaid = 1 AND ""invoice_unpaid"" IS NULL) OR (""invoice_unpaid"" = :Original_invoice_unpaid)) AND ((:IsNull_invoice_locked = 1 AND ""invoice_locked"" IS NULL) OR (""invoice_locked"" = :Original_invoice_locked)) AND ((:IsNull_recent_payment = 1 AND ""recent_payment"" IS NULL) OR (""recent_payment"" = :Original_recent_payment)) AND ((:IsNull_invoice_date = 1 AND ""invoice_date"" IS NULL) OR (""invoice_date"" = :Original_invoice_date)) AND ((:IsNull_sort_date = 1 AND ""sort_date"" IS NULL) OR (""sort_date"" = :Original_sort_date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_cust_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_docket_number";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_docket_number";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_notes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_text_fully_paid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_text_fully_paid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_unpaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_locked";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_locked";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_recent_payment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_recent_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sort_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sort_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""INVOICE_HEADER"" (""invoice_number"", ""cust_id"", ""docket_number"", ""notes"", ""text_fully_paid"", ""invoice_amount"", ""invoice_unpaid"", ""invoice_locked"", ""recent_payment"", ""invoice_date"", ""sort_date"") VALUES (:invoice_number, :cust_id, :docket_number, :notes, :text_fully_paid, :invoice_amount, :invoice_unpaid, :invoice_locked, :recent_payment, :invoice_date, :sort_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "docket_number";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "text_fully_paid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_locked";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "recent_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sort_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""INVOICE_HEADER"" SET ""invoice_number"" = :invoice_number, ""cust_id"" = :cust_id, ""docket_number"" = :docket_number, ""notes"" = :notes, ""text_fully_paid"" = :text_fully_paid, ""invoice_amount"" = :invoice_amount, ""invoice_unpaid"" = :invoice_unpaid, ""invoice_locked"" = :invoice_locked, ""recent_payment"" = :recent_payment, ""invoice_date"" = :invoice_date, ""sort_date"" = :sort_date WHERE ((""invoice_number"" = :Original_invoice_number) AND ((:IsNull_cust_id = 1 AND ""cust_id"" IS NULL) OR (""cust_id"" = :Original_cust_id)) AND ((:IsNull_docket_number = 1 AND ""docket_number"" IS NULL) OR (""docket_number"" = :Original_docket_number)) AND ((:IsNull_notes = 1 AND ""notes"" IS NULL) OR (""notes"" = :Original_notes)) AND ((:IsNull_text_fully_paid = 1 AND ""text_fully_paid"" IS NULL) OR (""text_fully_paid"" = :Original_text_fully_paid)) AND ((:IsNull_invoice_amount = 1 AND ""invoice_amount"" IS NULL) OR (""invoice_amount"" = :Original_invoice_amount)) AND ((:IsNull_invoice_unpaid = 1 AND ""invoice_unpaid"" IS NULL) OR (""invoice_unpaid"" = :Original_invoice_unpaid)) AND ((:IsNull_invoice_locked = 1 AND ""invoice_locked"" IS NULL) OR (""invoice_locked"" = :Original_invoice_locked)) AND ((:IsNull_recent_payment = 1 AND ""recent_payment"" IS NULL) OR (""recent_payment"" = :Original_recent_payment)) AND ((:IsNull_invoice_date = 1 AND ""invoice_date"" IS NULL) OR (""invoice_date"" = :Original_invoice_date)) AND ((:IsNull_sort_date = 1 AND ""sort_date"" IS NULL) OR (""sort_date"" = :Original_sort_date)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "docket_number";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "text_fully_paid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_locked";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "recent_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sort_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_cust_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_docket_number";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_docket_number";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_notes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_notes";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_text_fully_paid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_text_fully_paid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "text_fully_paid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_unpaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "invoice_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_locked";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_locked";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_locked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_recent_payment";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_recent_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "recent_payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_invoice_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sort_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sort_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sort_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[5];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT invoice_number, cust_id, docket_number, notes, text_fully_paid, invoice_am" +
                "ount, invoice_unpaid, invoice_locked, recent_payment, invoice_date, sort_date FR" +
                "OM INVOICE_HEADER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM INVOICE_HEADER\r\nWHERE     (invoice_number = :invoice_number)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT cust_id, docket_number, invoice_amount, invoice_date, invoice_locked, invo" +
                "ice_number, invoice_unpaid, notes, recent_payment, text_fully_paid, sort_date FR" +
                "OM INVOICE_HEADER WHERE (invoice_unpaid > 0)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT cust_id, docket_number, invoice_amount, invoice_date, invoice_locked, invo" +
                "ice_number, invoice_unpaid, notes, recent_payment, text_fully_paid, sort_date FR" +
                "OM INVOICE_HEADER WHERE (cust_id = ?) AND (invoice_unpaid > 0) ORDER BY sort_dat" +
                "e";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     INVOICE_HEADER.invoice_number, INVOICE_HEADER.cust_id, INVOICE_HEADER.docket_number, INVOICE_HEADER.text_fully_paid, 
                      INVOICE_HEADER.invoice_amount, INVOICE_HEADER.recent_payment, INVOICE_HEADER.invoice_date, INVOICE_HEADER.sort_date, 
                      invoice_items.current_flag
FROM         INVOICE_HEADER INNER JOIN
                      invoice_items ON INVOICE_HEADER.invoice_number = invoice_items.invoice_number
WHERE     (invoice_items.current_flag = '1')";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.INVOICE_HEADERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.INVOICE_HEADERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.INVOICE_HEADERDataTable dataTable = new DataSet2.INVOICE_HEADERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DataSet2.INVOICE_HEADERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.INVOICE_HEADERDataTable GetDataBy1() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            DataSet2.INVOICE_HEADERDataTable dataTable = new DataSet2.INVOICE_HEADERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy2(DataSet2.INVOICE_HEADERDataTable dataTable, global::System.Nullable<long> cust_id) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((cust_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(cust_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.INVOICE_HEADERDataTable GetDataBy2(global::System.Nullable<long> cust_id) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((cust_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(cust_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            DataSet2.INVOICE_HEADERDataTable dataTable = new DataSet2.INVOICE_HEADERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByRecent(DataSet2.INVOICE_HEADERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.INVOICE_HEADERDataTable GetDataByREcent() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            DataSet2.INVOICE_HEADERDataTable dataTable = new DataSet2.INVOICE_HEADERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.INVOICE_HEADERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "INVOICE_HEADER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_invoice_number, global::System.Nullable<long> Original_cust_id, string Original_docket_number, string Original_notes, string Original_text_fully_paid, global::System.Nullable<double> Original_invoice_amount, global::System.Nullable<double> Original_invoice_unpaid, global::System.Nullable<long> Original_invoice_locked, global::System.Nullable<double> Original_recent_payment, string Original_invoice_date, string Original_sort_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_invoice_number));
            if ((Original_cust_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_cust_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_docket_number == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_docket_number));
            }
            if ((Original_notes == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_notes));
            }
            if ((Original_text_fully_paid == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_text_fully_paid));
            }
            if ((Original_invoice_amount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_invoice_amount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_unpaid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_invoice_unpaid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_locked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((long)(Original_invoice_locked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_recent_payment.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_recent_payment.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_date == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_invoice_date));
            }
            if ((Original_sort_date == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_sort_date));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long invoice_number, global::System.Nullable<long> cust_id, string docket_number, string notes, string text_fully_paid, global::System.Nullable<double> invoice_amount, global::System.Nullable<double> invoice_unpaid, global::System.Nullable<long> invoice_locked, global::System.Nullable<double> recent_payment, string invoice_date, string sort_date) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(invoice_number));
            if ((cust_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(cust_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((docket_number == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(docket_number));
            }
            if ((notes == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(notes));
            }
            if ((text_fully_paid == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(text_fully_paid));
            }
            if ((invoice_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(invoice_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((invoice_unpaid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(invoice_unpaid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((invoice_locked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(invoice_locked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((recent_payment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(recent_payment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((invoice_date == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(invoice_date));
            }
            if ((sort_date == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(sort_date));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long invoice_number, 
                    global::System.Nullable<long> cust_id, 
                    string docket_number, 
                    string notes, 
                    string text_fully_paid, 
                    global::System.Nullable<double> invoice_amount, 
                    global::System.Nullable<double> invoice_unpaid, 
                    global::System.Nullable<long> invoice_locked, 
                    global::System.Nullable<double> recent_payment, 
                    string invoice_date, 
                    string sort_date, 
                    long Original_invoice_number, 
                    global::System.Nullable<long> Original_cust_id, 
                    string Original_docket_number, 
                    string Original_notes, 
                    string Original_text_fully_paid, 
                    global::System.Nullable<double> Original_invoice_amount, 
                    global::System.Nullable<double> Original_invoice_unpaid, 
                    global::System.Nullable<long> Original_invoice_locked, 
                    global::System.Nullable<double> Original_recent_payment, 
                    string Original_invoice_date, 
                    string Original_sort_date) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(invoice_number));
            if ((cust_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(cust_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((docket_number == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(docket_number));
            }
            if ((notes == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(notes));
            }
            if ((text_fully_paid == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(text_fully_paid));
            }
            if ((invoice_amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(invoice_amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((invoice_unpaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(invoice_unpaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((invoice_locked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(invoice_locked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((recent_payment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(recent_payment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((invoice_date == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(invoice_date));
            }
            if ((sort_date == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(sort_date));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_invoice_number));
            if ((Original_cust_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_cust_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_docket_number == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_docket_number));
            }
            if ((Original_notes == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_notes));
            }
            if ((Original_text_fully_paid == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_text_fully_paid));
            }
            if ((Original_invoice_amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_invoice_amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_unpaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_invoice_unpaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_locked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(Original_invoice_locked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_recent_payment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_recent_payment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_invoice_date == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_invoice_date));
            }
            if ((Original_sort_date == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_sort_date));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> cust_id, 
                    string docket_number, 
                    string notes, 
                    string text_fully_paid, 
                    global::System.Nullable<double> invoice_amount, 
                    global::System.Nullable<double> invoice_unpaid, 
                    global::System.Nullable<long> invoice_locked, 
                    global::System.Nullable<double> recent_payment, 
                    string invoice_date, 
                    string sort_date, 
                    long Original_invoice_number, 
                    global::System.Nullable<long> Original_cust_id, 
                    string Original_docket_number, 
                    string Original_notes, 
                    string Original_text_fully_paid, 
                    global::System.Nullable<double> Original_invoice_amount, 
                    global::System.Nullable<double> Original_invoice_unpaid, 
                    global::System.Nullable<long> Original_invoice_locked, 
                    global::System.Nullable<double> Original_recent_payment, 
                    string Original_invoice_date, 
                    string Original_sort_date) {
            return this.Update(Original_invoice_number, cust_id, docket_number, notes, text_fully_paid, invoice_amount, invoice_unpaid, invoice_locked, recent_payment, invoice_date, sort_date, Original_invoice_number, Original_cust_id, Original_docket_number, Original_notes, Original_text_fully_paid, Original_invoice_amount, Original_invoice_unpaid, Original_invoice_locked, Original_recent_payment, Original_invoice_date, Original_sort_date);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteInvoice(long invoice_number) {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((long)(invoice_number));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoice_itemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public invoice_itemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoice_items";
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("line_number", "line_number");
            tableMapping.ColumnMappings.Add("prod_id", "prod_id");
            tableMapping.ColumnMappings.Add("qty", "qty");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("rate", "rate");
            tableMapping.ColumnMappings.Add("gst_value", "gst_value");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("qty_rate", "qty_rate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM invoice_items\r\nWHERE     (invoice_number = :invoice_number) AND (line" +
                "_number = :line_number)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "line_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "line_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"invoice_items\" (\"invoice_number\", \"line_number\", \"prod_id\", \"" +
                "qty\", \"weight\", \"rate\", \"gst_value\", \"amount\", \"qty_rate\") VALUES (:invoice_numb" +
                "er, :line_number, :prod_id, :qty, :weight, :rate, :gst_value, :amount, :qty_rate" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "line_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "line_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "prod_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prod_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "weight";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "rate";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gst_value";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "gst_value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty_rate";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qty_rate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE    invoice_items\r\nSET              prod_id = :prod_id, qty = :qty, weight " +
                "= :weight, rate = :rate, gst_value = :gst_value, amount = :amount\r\nWHERE     (in" +
                "voice_number = :Original_invoice_number) AND (line_number = :Original_line_numbe" +
                "r)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "prod_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "prod_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "weight";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "rate";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "rate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gst_value";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "gst_value";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_line_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "line_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[2];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT invoice_number, line_number, prod_id, qty, weight, rate, gst_value, amount" +
                ", qty_rate FROM invoice_items";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM invoice_items\r\nWHERE     (invoice_number = :invoice_number)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.invoice_itemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.invoice_itemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.invoice_itemsDataTable dataTable = new DataSet2.invoice_itemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.invoice_itemsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "invoice_items");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long invoice_number, long line_number) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(invoice_number));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(line_number));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long invoice_number, long line_number, string prod_id, global::System.Nullable<double> qty, global::System.Nullable<double> weight, global::System.Nullable<double> rate, global::System.Nullable<double> gst_value, global::System.Nullable<double> amount, string qty_rate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(invoice_number));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(line_number));
            if ((prod_id == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(prod_id));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((gst_value.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(gst_value.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((qty_rate == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(qty_rate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string prod_id, global::System.Nullable<decimal> qty, global::System.Nullable<decimal> weight, global::System.Nullable<decimal> rate, global::System.Nullable<decimal> gst_value, global::System.Nullable<decimal> amount, long Original_invoice_number, long Original_line_number) {
            if ((prod_id == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(prod_id));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((gst_value.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(gst_value.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_invoice_number));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_line_number));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteInvoice(long invoice_number) {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((long)(invoice_number));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class payment_typeTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public payment_typeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "payment_type";
            tableMapping.ColumnMappings.Add("payment_type_id", "payment_type_id");
            tableMapping.ColumnMappings.Add("desc", "desc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"payment_type\" WHERE ((\"payment_type_id\" = :Original_payment_t" +
                "ype_id) AND ((:IsNull_desc = 1 AND \"desc\" IS NULL) OR (\"desc\" = :Original_desc))" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_payment_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "payment_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"payment_type\" (\"payment_type_id\", \"desc\") VALUES (:payment_ty" +
                "pe_id, :desc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "payment_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "payment_type_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"payment_type\" SET \"payment_type_id\" = :payment_type_id, \"desc\" = :" +
                "desc WHERE ((\"payment_type_id\" = :Original_payment_type_id) AND ((:IsNull_desc =" +
                " 1 AND \"desc\" IS NULL) OR (\"desc\" = :Original_desc)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "payment_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "payment_type_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_payment_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "payment_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT payment_type_id, \"desc\" FROM \"main\".payment_type";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.payment_typeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.payment_typeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.payment_typeDataTable dataTable = new DataSet2.payment_typeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.payment_typeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "payment_type");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_payment_type_id, string Original_desc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_payment_type_id));
            if ((Original_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long payment_type_id, string desc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(payment_type_id));
            if ((desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long payment_type_id, string desc, long Original_payment_type_id, string Original_desc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(payment_type_id));
            if ((desc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Original_payment_type_id));
            if ((Original_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string desc, long Original_payment_type_id, string Original_desc) {
            return this.Update(Original_payment_type_id, desc, Original_payment_type_id, Original_desc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class product_typeTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public product_typeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "product_type";
            tableMapping.ColumnMappings.Add("type_id", "type_id");
            tableMapping.ColumnMappings.Add("desc", "desc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"product_type\" WHERE ((\"type_id\" = :Original_type_id) AND ((:I" +
                "sNull_desc = 1 AND \"desc\" IS NULL) OR (\"desc\" = :Original_desc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"product_type\" (\"type_id\", \"desc\") VALUES (:type_id, :desc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "type_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"product_type\" SET \"type_id\" = :type_id, \"desc\" = :desc WHERE ((\"ty" +
                "pe_id\" = :Original_type_id) AND ((:IsNull_desc = 1 AND \"desc\" IS NULL) OR (\"desc" +
                "\" = :Original_desc)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "type_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_desc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT type_id, \"desc\" FROM \"main\".product_type";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.product_typeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.product_typeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.product_typeDataTable dataTable = new DataSet2.product_typeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.product_typeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "product_type");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_type_id, string Original_desc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_type_id));
            if ((Original_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long type_id, string desc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(type_id));
            if ((desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long type_id, string desc, long Original_type_id, string Original_desc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(type_id));
            if ((desc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Original_type_id));
            if ((Original_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_desc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string desc, long Original_type_id, string Original_desc) {
            return this.Update(Original_type_id, desc, Original_type_id, Original_desc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class productsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public productsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "products";
            tableMapping.ColumnMappings.Add("prod_id", "prod_id");
            tableMapping.ColumnMappings.Add("desc", "desc");
            tableMapping.ColumnMappings.Add("percent_carcass", "percent_carcass");
            tableMapping.ColumnMappings.Add("type_id", "type_id");
            tableMapping.ColumnMappings.Add("gst", "gst");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"products\" (\"prod_id\", \"desc\", \"percent_carcass\", \"type_id\", \"" +
                "gst\") VALUES (:prod_id, :desc, :percent_carcass, :type_id, :gst)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "prod_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prod_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "percent_carcass";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "percent_carcass";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "type_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "gst";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "gst";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[2];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT prod_id, \"desc\", percent_carcass, type_id, gst FROM \"main\".products";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     product_type.\"desc\" AS Expr1, products.\"desc\"\r\nFROM         products I" +
                "NNER JOIN\r\n                      product_type ON products.type_id = product_type" +
                ".type_id\r\nORDER BY product_type.\"desc\"";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.productsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.productsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.productsDataTable dataTable = new DataSet2.productsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int prodShort(DataSet2.productsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.productsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "products");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string prod_id, string desc, global::System.Nullable<double> percent_carcass, global::System.Nullable<long> type_id, global::System.Nullable<long> gst) {
            if ((prod_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(prod_id));
            }
            if ((desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(desc));
            }
            if ((percent_carcass.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(percent_carcass.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((type_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(type_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((gst.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(gst.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sqlite_sequenceTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public sqlite_sequenceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sqlite_sequence";
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("seq", "seq");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"sqlite_sequence\" (\"name\", \"seq\") VALUES (:name, :seq)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "seq";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "seq";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT name, seq FROM \"main\".\"sqlite_sequence\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.sqlite_sequenceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.sqlite_sequenceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.sqlite_sequenceDataTable dataTable = new DataSet2.sqlite_sequenceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.sqlite_sequenceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "sqlite_sequence");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string name, string seq) {
            if ((name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
            }
            if ((seq == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(seq));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class customer_transTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public customer_transTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "customer_trans";
            tableMapping.ColumnMappings.Add("t_id", "t_id");
            tableMapping.ColumnMappings.Add("t_type", "t_type");
            tableMapping.ColumnMappings.Add("t_cust_id", "t_cust_id");
            tableMapping.ColumnMappings.Add("t_src_id", "t_src_id");
            tableMapping.ColumnMappings.Add("t_ref_id", "t_ref_id");
            tableMapping.ColumnMappings.Add("t_note", "t_note");
            tableMapping.ColumnMappings.Add("t_timestamp", "t_timestamp");
            tableMapping.ColumnMappings.Add("t_amount", "t_amount");
            tableMapping.ColumnMappings.Add("t_unpaid", "t_unpaid");
            tableMapping.ColumnMappings.Add("t_no_print", "t_no_print");
            tableMapping.ColumnMappings.Add("t_finished", "t_finished");
            tableMapping.ColumnMappings.Add("t_week_id", "t_week_id");
            tableMapping.ColumnMappings.Add("t_src_dckt_id", "t_src_dckt_id");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""customer_trans"" WHERE ((""t_id"" = :Original_t_id) AND ((:IsNull_t_type = 1 AND ""t_type"" IS NULL) OR (""t_type"" = :Original_t_type)) AND ((:IsNull_t_cust_id = 1 AND ""t_cust_id"" IS NULL) OR (""t_cust_id"" = :Original_t_cust_id)) AND ((:IsNull_t_src_id = 1 AND ""t_src_id"" IS NULL) OR (""t_src_id"" = :Original_t_src_id)) AND ((:IsNull_t_ref_id = 1 AND ""t_ref_id"" IS NULL) OR (""t_ref_id"" = :Original_t_ref_id)) AND ((:IsNull_t_date = 1 AND ""t_date"" IS NULL) OR (""t_date"" = :Original_t_date)) AND ((:IsNull_t_note = 1 AND ""t_note"" IS NULL) OR (""t_note"" = :Original_t_note)) AND ((:IsNull_t_timestamp = 1 AND ""t_timestamp"" IS NULL) OR (""t_timestamp"" = :Original_t_timestamp)) AND ((:IsNull_t_amount = 1 AND ""t_amount"" IS NULL) OR (""t_amount"" = :Original_t_amount)) AND ((:IsNull_t_unpaid = 1 AND ""t_unpaid"" IS NULL) OR (""t_unpaid"" = :Original_t_unpaid)) AND ((:IsNull_t_no_print = 1 AND ""t_no_print"" IS NULL) OR (""t_no_print"" = :Original_t_no_print)) AND ((:IsNull_t_finished = 1 AND ""t_finished"" IS NULL) OR (""t_finished"" = :Original_t_finished)) AND ((:IsNull_t_week_id = 1 AND ""t_week_id"" IS NULL) OR (""t_week_id"" = :Original_t_week_id)) AND ((:IsNull_t_src_dckt_id = 1 AND ""t_src_dckt_id"" IS NULL) OR (""t_src_dckt_id"" = :Original_t_src_dckt_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_type";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_cust_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_src_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_src_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_ref_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_ref_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_note";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_timestamp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_timestamp";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_unpaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_no_print";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_no_print";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_finished";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_finished";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_week_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_week_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_src_dckt_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_src_dckt_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""customer_trans"" (""t_id"", ""t_type"", ""t_cust_id"", ""t_src_id"", ""t_ref_id"", ""t_date"", ""t_note"", ""t_timestamp"", ""t_amount"", ""t_unpaid"", ""t_no_print"", ""t_finished"", ""t_week_id"", ""t_src_dckt_id"") VALUES (:t_id, :t_type, :t_cust_id, :t_src_id, :t_ref_id, :t_date, :t_note, :t_timestamp, :t_amount, :t_unpaid, :t_no_print, :t_finished, :t_week_id, :t_src_dckt_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_src_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_ref_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_note";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_timestamp";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_no_print";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_finished";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_week_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_src_dckt_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"customer_trans\" SET \"t_id\" = :t_id, \"t_type\" = :t_type, \"t_cust_id" +
                "\" = :t_cust_id, \"t_src_id\" = :t_src_id, \"t_ref_id\" = :t_ref_id, \"t_date\" = :t_da" +
                "te, \"t_note\" = :t_note, \"t_timestamp\" = :t_timestamp, \"t_amount\" = :t_amount, \"t" +
                "_unpaid\" = :t_unpaid, \"t_no_print\" = :t_no_print, \"t_finished\" = :t_finished, \"t" +
                "_week_id\" = :t_week_id, \"t_src_dckt_id\" = :t_src_dckt_id WHERE ((\"t_id\" = :Origi" +
                "nal_t_id) AND ((:IsNull_t_type = 1 AND \"t_type\" IS NULL) OR (\"t_type\" = :Origina" +
                "l_t_type)) AND ((:IsNull_t_cust_id = 1 AND \"t_cust_id\" IS NULL) OR (\"t_cust_id\" " +
                "= :Original_t_cust_id)) AND ((:IsNull_t_src_id = 1 AND \"t_src_id\" IS NULL) OR (\"" +
                "t_src_id\" = :Original_t_src_id)) AND ((:IsNull_t_ref_id = 1 AND \"t_ref_id\" IS NU" +
                "LL) OR (\"t_ref_id\" = :Original_t_ref_id)) AND ((:IsNull_t_date = 1 AND \"t_date\" " +
                "IS NULL) OR (\"t_date\" = :Original_t_date)) AND ((:IsNull_t_note = 1 AND \"t_note\"" +
                " IS NULL) OR (\"t_note\" = :Original_t_note)) AND ((:IsNull_t_timestamp = 1 AND \"t" +
                "_timestamp\" IS NULL) OR (\"t_timestamp\" = :Original_t_timestamp)) AND ((:IsNull_t" +
                "_amount = 1 AND \"t_amount\" IS NULL) OR (\"t_amount\" = :Original_t_amount)) AND ((" +
                ":IsNull_t_unpaid = 1 AND \"t_unpaid\" IS NULL) OR (\"t_unpaid\" = :Original_t_unpaid" +
                ")) AND ((:IsNull_t_no_print = 1 AND \"t_no_print\" IS NULL) OR (\"t_no_print\" = :Or" +
                "iginal_t_no_print)) AND ((:IsNull_t_finished = 1 AND \"t_finished\" IS NULL) OR (\"" +
                "t_finished\" = :Original_t_finished)) AND ((:IsNull_t_week_id = 1 AND \"t_week_id\"" +
                " IS NULL) OR (\"t_week_id\" = :Original_t_week_id)) AND ((:IsNull_t_src_dckt_id = " +
                "1 AND \"t_src_dckt_id\" IS NULL) OR (\"t_src_dckt_id\" = :Original_t_src_dckt_id)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_src_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_ref_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_note";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_timestamp";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_no_print";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_finished";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_week_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_src_dckt_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_type";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_cust_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_cust_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_src_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_src_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_ref_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_ref_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_ref_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_note";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_timestamp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_timestamp";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "t_timestamp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_amount";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_unpaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_unpaid";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_unpaid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_no_print";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_no_print";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_no_print";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_finished";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_finished";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_finished";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_week_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_week_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "t_week_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_t_src_dckt_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_t_src_dckt_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_src_dckt_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[3];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     t_id, t_type, t_cust_id, t_src_id, t_ref_id, t_date, t_note, t_timesta" +
                "mp, t_amount, t_unpaid, t_no_print, t_finished, t_week_id, t_src_dckt_id\r\nFROM  " +
                "       customer_trans";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM \"main\".\"customer_trans\" WHERE  (\"t_src_id\" = :t_src_id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_src_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "t_src_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     customer_trans.t_id, customer_trans.t_type, customer_trans.t_cust_id, customer_trans.t_src_id, customer_trans.t_ref_id, customer_trans.t_date, 
                      customer_trans.t_note, customer_trans.t_timestamp, customer_trans.t_amount, customer_trans.t_unpaid, customer_trans.t_no_print, 
                      customer_trans.t_finished, customer_trans.t_week_id, customer_trans.t_src_dckt_id, configuration.acnt_period
FROM         customer_trans, configuration
WHERE     (customer_trans.t_unpaid > 0) AND (customer_trans.t_type = 'Invoice') OR
                      (customer_trans.t_week_id = configuration.acnt_period)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.customer_transDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.customer_transDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.customer_transDataTable dataTable = new DataSet2.customer_transDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(DataSet2.customer_transDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.customer_transDataTable GetDataBy1() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            DataSet2.customer_transDataTable dataTable = new DataSet2.customer_transDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.customer_transDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "customer_trans");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_t_id, string Original_t_type, global::System.Nullable<long> Original_t_cust_id, global::System.Nullable<long> Original_t_src_id, global::System.Nullable<long> Original_t_ref_id, string Original_t_date, string Original_t_note, global::System.Nullable<global::System.DateTime> Original_t_timestamp, global::System.Nullable<double> Original_t_amount, global::System.Nullable<double> Original_t_unpaid, string Original_t_no_print, global::System.Nullable<long> Original_t_finished, global::System.Nullable<long> Original_t_week_id, string Original_t_src_dckt_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_t_id));
            if ((Original_t_type == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_t_type));
            }
            if ((Original_t_cust_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_t_cust_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_t_src_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_t_src_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_t_ref_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_t_ref_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_t_date == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_t_date));
            }
            if ((Original_t_note == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_t_note));
            }
            if ((Original_t_timestamp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_t_timestamp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_t_amount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_t_amount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_t_unpaid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_t_unpaid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_t_no_print == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_t_no_print));
            }
            if ((Original_t_finished.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((long)(Original_t_finished.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_t_week_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((long)(Original_t_week_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_t_src_dckt_id == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_t_src_dckt_id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long t_id, string t_type, global::System.Nullable<long> t_cust_id, global::System.Nullable<long> t_src_id, global::System.Nullable<long> t_ref_id, string t_date, string t_note, global::System.Nullable<global::System.DateTime> t_timestamp, global::System.Nullable<double> t_amount, global::System.Nullable<double> t_unpaid, string t_no_print, global::System.Nullable<long> t_finished, global::System.Nullable<long> t_week_id, string t_src_dckt_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(t_id));
            if ((t_type == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(t_type));
            }
            if ((t_cust_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(t_cust_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((t_src_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(t_src_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((t_ref_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(t_ref_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((t_date == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(t_date));
            }
            if ((t_note == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(t_note));
            }
            if ((t_timestamp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(t_timestamp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((t_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(t_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((t_unpaid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(t_unpaid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((t_no_print == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(t_no_print));
            }
            if ((t_finished.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(t_finished.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((t_week_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((long)(t_week_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((t_src_dckt_id == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(t_src_dckt_id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long t_id, 
                    string t_type, 
                    global::System.Nullable<long> t_cust_id, 
                    global::System.Nullable<long> t_src_id, 
                    global::System.Nullable<long> t_ref_id, 
                    string t_date, 
                    string t_note, 
                    global::System.Nullable<global::System.DateTime> t_timestamp, 
                    global::System.Nullable<double> t_amount, 
                    global::System.Nullable<double> t_unpaid, 
                    string t_no_print, 
                    global::System.Nullable<long> t_finished, 
                    global::System.Nullable<long> t_week_id, 
                    string t_src_dckt_id, 
                    long Original_t_id, 
                    string Original_t_type, 
                    global::System.Nullable<long> Original_t_cust_id, 
                    global::System.Nullable<long> Original_t_src_id, 
                    global::System.Nullable<long> Original_t_ref_id, 
                    string Original_t_date, 
                    string Original_t_note, 
                    global::System.Nullable<global::System.DateTime> Original_t_timestamp, 
                    global::System.Nullable<double> Original_t_amount, 
                    global::System.Nullable<double> Original_t_unpaid, 
                    string Original_t_no_print, 
                    global::System.Nullable<long> Original_t_finished, 
                    global::System.Nullable<long> Original_t_week_id, 
                    string Original_t_src_dckt_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(t_id));
            if ((t_type == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(t_type));
            }
            if ((t_cust_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(t_cust_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((t_src_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(t_src_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((t_ref_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(t_ref_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((t_date == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(t_date));
            }
            if ((t_note == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(t_note));
            }
            if ((t_timestamp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(t_timestamp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((t_amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(t_amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((t_unpaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(t_unpaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((t_no_print == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(t_no_print));
            }
            if ((t_finished.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(t_finished.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((t_week_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(t_week_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((t_src_dckt_id == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(t_src_dckt_id));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_t_id));
            if ((Original_t_type == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_t_type));
            }
            if ((Original_t_cust_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_t_cust_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_t_src_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_t_src_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_t_ref_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_t_ref_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_t_date == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_t_date));
            }
            if ((Original_t_note == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_t_note));
            }
            if ((Original_t_timestamp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_t_timestamp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_t_amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_t_amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_t_unpaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_t_unpaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_t_no_print == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_t_no_print));
            }
            if ((Original_t_finished.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((long)(Original_t_finished.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_t_week_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((long)(Original_t_week_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_t_src_dckt_id == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_t_src_dckt_id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string t_type, 
                    global::System.Nullable<long> t_cust_id, 
                    global::System.Nullable<long> t_src_id, 
                    global::System.Nullable<long> t_ref_id, 
                    string t_date, 
                    string t_note, 
                    global::System.Nullable<global::System.DateTime> t_timestamp, 
                    global::System.Nullable<double> t_amount, 
                    global::System.Nullable<double> t_unpaid, 
                    string t_no_print, 
                    global::System.Nullable<long> t_finished, 
                    global::System.Nullable<long> t_week_id, 
                    string t_src_dckt_id, 
                    long Original_t_id, 
                    string Original_t_type, 
                    global::System.Nullable<long> Original_t_cust_id, 
                    global::System.Nullable<long> Original_t_src_id, 
                    global::System.Nullable<long> Original_t_ref_id, 
                    string Original_t_date, 
                    string Original_t_note, 
                    global::System.Nullable<global::System.DateTime> Original_t_timestamp, 
                    global::System.Nullable<double> Original_t_amount, 
                    global::System.Nullable<double> Original_t_unpaid, 
                    string Original_t_no_print, 
                    global::System.Nullable<long> Original_t_finished, 
                    global::System.Nullable<long> Original_t_week_id, 
                    string Original_t_src_dckt_id) {
            return this.Update(Original_t_id, t_type, t_cust_id, t_src_id, t_ref_id, t_date, t_note, t_timestamp, t_amount, t_unpaid, t_no_print, t_finished, t_week_id, t_src_dckt_id, Original_t_id, Original_t_type, Original_t_cust_id, Original_t_src_id, Original_t_ref_id, Original_t_date, Original_t_note, Original_t_timestamp, Original_t_amount, Original_t_unpaid, Original_t_no_print, Original_t_finished, Original_t_week_id, Original_t_src_dckt_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteInvoice(global::System.Nullable<long> t_src_id) {
            global::Devart.Data.SQLite.SQLiteCommand command = this.CommandCollection[1];
            if ((t_src_id.HasValue == true)) {
                command.Parameters[0].Value = ((long)(t_src_id.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class debtors_summaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public debtors_summaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "debtors_summary";
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("curAmt", "curAmt");
            tableMapping.ColumnMappings.Add("days7", "days7");
            tableMapping.ColumnMappings.Add("days14", "days14");
            tableMapping.ColumnMappings.Add("days21", "days21");
            tableMapping.ColumnMappings.Add("Owing", "Owing");
            tableMapping.ColumnMappings.Add("open_bal", "open_bal");
            tableMapping.ColumnMappings.Add("date_last_payment", "date_last_payment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"debtors_summary\" (\"cust_id\", \"curAmt\", \"days7\", \"days14\", \"da" +
                "ys21\", \"Owing\", \"open_bal\") VALUES (:cust_id, :curAmt, :days7, :days14, :days21," +
                " :Owing, :open_bal)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "curAmt";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "curAmt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "days7";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "days7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "days14";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "days14";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "days21";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "days21";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Owing";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Owing";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "open_bal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "open_bal";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cust_id, curAmt, days7, days14, days21, Owing, open_bal FROM debtors_summa" +
                "ry";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.debtors_summaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.debtors_summaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.debtors_summaryDataTable dataTable = new DataSet2.debtors_summaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.debtors_summaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "debtors_summary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long cust_id, global::System.Nullable<double> curAmt, global::System.Nullable<double> days7, global::System.Nullable<double> days14, global::System.Nullable<double> days21, global::System.Nullable<double> Owing, global::System.Nullable<double> open_bal) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(cust_id));
            if ((curAmt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(curAmt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((days7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(days7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((days14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(days14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((days21.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(days21.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Owing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Owing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((open_bal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(open_bal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoice_header_customerTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public invoice_header_customerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoice_header_customer";
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("invoice_text", "invoice_text");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cust_id, invoice_number, invoice_text FROM \"main\".invoice_header_customer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.invoice_header_customerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.invoice_header_customerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.invoice_header_customerDataTable dataTable = new DataSet2.invoice_header_customerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoice_header_unpaidTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public invoice_header_unpaidTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoice_header_unpaid";
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("invoice_text", "invoice_text");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cust_id, invoice_number, invoice_text FROM \"main\".invoice_header_unpaid";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.invoice_header_unpaidDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.invoice_header_unpaidDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.invoice_header_unpaidDataTable dataTable = new DataSet2.invoice_header_unpaidDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SalesSummary1TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SalesSummary1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SalesSummary1";
            tableMapping.ColumnMappings.Add("t_id", "t_id");
            tableMapping.ColumnMappings.Add("t_desc", "t_desc");
            tableMapping.ColumnMappings.Add("t_qty", "t_qty");
            tableMapping.ColumnMappings.Add("t_whgt", "t_whgt");
            tableMapping.ColumnMappings.Add("t_avg", "t_avg");
            tableMapping.ColumnMappings.Add("t_amt", "t_amt");
            tableMapping.ColumnMappings.Add("t_qtyp", "t_qtyp");
            tableMapping.ColumnMappings.Add("t_whgtp", "t_whgtp");
            tableMapping.ColumnMappings.Add("t_amtp", "t_amtp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"ProductSalesSummary\" (\"t_id\", \"t_desc\", \"t_qty\", \"t_qtyp\", \"t" +
                "_whgt\", \"t_whgtp\", \"t_avg\", \"t_amt\", \"t_amtp\") VALUES (:t_id, :t_desc, :t_qty, :" +
                "t_qtyp, :t_whgt, :t_whgtp, :t_avg, :t_amt, :t_amtp)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_qty";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_qty";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_qtyp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_qtyp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_whgt";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_whgt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_whgtp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_whgtp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_avg";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_avg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amt";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amtp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amtp";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT t_id, t_desc, t_qty, t_qtyp, t_whgt, t_whgtp, t_avg, t_amt, t_amtp FROM Pr" +
                "oductSalesSummary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.SalesSummary1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.SalesSummary1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.SalesSummary1DataTable dataTable = new DataSet2.SalesSummary1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.SalesSummary1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "SalesSummary1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductSalesSummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductSalesSummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProductSalesSummary";
            tableMapping.ColumnMappings.Add("t_id", "t_id");
            tableMapping.ColumnMappings.Add("t_desc", "t_desc");
            tableMapping.ColumnMappings.Add("t_qty", "t_qty");
            tableMapping.ColumnMappings.Add("t_whgt", "t_whgt");
            tableMapping.ColumnMappings.Add("t_avg", "t_avg");
            tableMapping.ColumnMappings.Add("t_amt", "t_amt");
            tableMapping.ColumnMappings.Add("t_qtyp", "t_qtyp");
            tableMapping.ColumnMappings.Add("t_whgtp", "t_whgtp");
            tableMapping.ColumnMappings.Add("t_amtp", "t_amtp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"ProductSalesSummary\" (\"t_id\", \"t_desc\", \"t_qty\", \"t_whgt\", \"t" +
                "_avg\", \"t_amt\", \"t_qtyp\", \"t_whgtp\", \"t_amtp\") VALUES (:t_id, :t_desc, :t_qty, :" +
                "t_whgt, :t_avg, :t_amt, :t_qtyp, :t_whgtp, :t_amtp)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_qty";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_qty";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_whgt";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_whgt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_avg";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_avg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amt";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_qtyp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_qtyp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_whgtp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_whgtp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amtp";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amtp";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     t_id, t_desc, t_qty, t_whgt, t_avg, t_amt, t_qtyp, t_whgtp, t_amtp\r\nFR" +
                "OM         ProductSalesSummary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.ProductSalesSummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.ProductSalesSummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.ProductSalesSummaryDataTable dataTable = new DataSet2.ProductSalesSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.ProductSalesSummaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "ProductSalesSummary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string t_id, string t_desc, global::System.Nullable<double> t_qty, global::System.Nullable<double> t_whgt, global::System.Nullable<double> t_avg, global::System.Nullable<double> t_amt, global::System.Nullable<double> t_qtyp, global::System.Nullable<double> t_whgtp, global::System.Nullable<double> t_amtp) {
            if ((t_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(t_id));
            }
            if ((t_desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(t_desc));
            }
            if ((t_qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(t_qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((t_whgt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(t_whgt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((t_avg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(t_avg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((t_amt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(t_amt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((t_qtyp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(t_qtyp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((t_whgtp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(t_whgtp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((t_amtp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(t_amtp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductSalesReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductSalesReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProductSalesReport";
            tableMapping.ColumnMappings.Add("prod_id", "prod_id");
            tableMapping.ColumnMappings.Add("prod_desc", "prod_desc");
            tableMapping.ColumnMappings.Add("invoice_date", "invoice_date");
            tableMapping.ColumnMappings.Add("docket_number", "docket_number");
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("qty", "qty");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("rate", "rate");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("avg_weight", "avg_weight");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""ProductSalesReport"" (""prod_id"", ""prod_desc"", ""invoice_date"", ""docket_number"", ""cust_id"", ""qty"", ""weight"", ""rate"", ""amount"", ""avg_weight"") VALUES (:prod_id, :prod_desc, :invoice_date, :docket_number, :cust_id, :qty, :weight, :rate, :amount, :avg_weight)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "prod_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prod_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "prod_desc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "prod_desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "invoice_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "docket_number";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "docket_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qty";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "qty";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "weight";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "rate";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "avg_weight";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "avg_weight";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     prod_id, prod_desc, invoice_date, docket_number, cust_id, qty, weight," +
                " rate, amount, avg_weight\r\nFROM         ProductSalesReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.ProductSalesReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.ProductSalesReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.ProductSalesReportDataTable dataTable = new DataSet2.ProductSalesReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.ProductSalesReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "ProductSalesReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string prod_id, string prod_desc, string invoice_date, string docket_number, string cust_id, global::System.Nullable<double> qty, global::System.Nullable<double> weight, global::System.Nullable<double> rate, global::System.Nullable<double> amount, global::System.Nullable<double> avg_weight) {
            if ((prod_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(prod_id));
            }
            if ((prod_desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(prod_desc));
            }
            if ((invoice_date == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(invoice_date));
            }
            if ((docket_number == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(docket_number));
            }
            if ((cust_id == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(cust_id));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((avg_weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(avg_weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PaymentAdjustRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PaymentAdjustRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PaymentAdjustRpt";
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            tableMapping.ColumnMappings.Add("t_type", "t_type");
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("contact_name", "contact_name");
            tableMapping.ColumnMappings.Add("name_address_1", "name_address_1");
            tableMapping.ColumnMappings.Add("t_amount", "t_amount");
            tableMapping.ColumnMappings.Add("t_id", "t_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"PaymentAdjustRpt\" (\"t_date\", \"t_type\", \"cust_id\", \"contact_na" +
                "me\", \"name_address_1\", \"t_amount\", \"t_id\") VALUES (:t_date, :t_type, :cust_id, :" +
                "contact_name, :name_address_1, :t_amount, :t_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "t_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "contact_name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "contact_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name_address_1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name_address_1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "t_amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "t_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "t_id";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT t_date, t_type, cust_id, contact_name, name_address_1, t_amount, t_id FROM" +
                " \"main\".PaymentAdjustRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.PaymentAdjustRptDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.PaymentAdjustRptDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.PaymentAdjustRptDataTable dataTable = new DataSet2.PaymentAdjustRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.PaymentAdjustRptDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "PaymentAdjustRpt");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string t_date, string t_type, global::System.Nullable<int> cust_id, string contact_name, string name_address_1, global::System.Nullable<double> t_amount, global::System.Nullable<int> t_id) {
            if ((t_date == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(t_date));
            }
            if ((t_type == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(t_type));
            }
            if ((cust_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(cust_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((contact_name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(contact_name));
            }
            if ((name_address_1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(name_address_1));
            }
            if ((t_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(t_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((t_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(t_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class autoVacTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public autoVacTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "pragma auto_vacuum";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.autoVacDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.autoVacDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.autoVacDataTable dataTable = new DataSet2.autoVacDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INVOICE_RECIEPTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public INVOICE_RECIEPTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INVOICE_RECIEPTS";
            tableMapping.ColumnMappings.Add("recpt_number", "recpt_number");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("recpt_date", "recpt_date");
            tableMapping.ColumnMappings.Add("invoice_number", "invoice_number");
            tableMapping.ColumnMappings.Add("cust_id", "cust_id");
            tableMapping.ColumnMappings.Add("invoice_key", "invoice_key");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"INVOICE_RECIEPTS\" (\"recpt_number\", \"amount\", \"recpt_date\", \"i" +
                "nvoice_number\", \"cust_id\", \"invoice_key\") VALUES (:recpt_number, :amount, :recpt" +
                "_date, :invoice_number, :cust_id, :invoice_key)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "recpt_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "recpt_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "amount";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "recpt_date";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "recpt_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "cust_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "cust_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "invoice_key";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "invoice_key";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Vectra.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[2];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     recpt_number, amount, recpt_date, invoice_number, cust_id, invoice_key" +
                "\r\nFROM         INVOICE_RECIEPTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     recpt_number, amount, recpt_date, invoice_number, cust_id, invoice_key" +
                "\r\nFROM         INVOICE_RECIEPTS\r\nWHERE     (recpt_number = :recpt_number)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "recpt_number";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "recpt_number";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.INVOICE_RECIEPTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.INVOICE_RECIEPTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.INVOICE_RECIEPTSDataTable dataTable = new DataSet2.INVOICE_RECIEPTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DataSet2.INVOICE_RECIEPTSDataTable dataTable, long recpt_number) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(recpt_number));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet2.INVOICE_RECIEPTSDataTable GetDataBy(long recpt_number) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(recpt_number));
            DataSet2.INVOICE_RECIEPTSDataTable dataTable = new DataSet2.INVOICE_RECIEPTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.INVOICE_RECIEPTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "INVOICE_RECIEPTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long recpt_number, global::System.Nullable<double> amount, string recpt_date, long invoice_number, global::System.Nullable<long> cust_id, global::System.Nullable<long> invoice_key) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(recpt_number));
            if ((amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((recpt_date == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(recpt_date));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(invoice_number));
            if ((cust_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(cust_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((invoice_key.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(invoice_key.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private configurationTableAdapter _configurationTableAdapter;
        
        private customerTableAdapter _customerTableAdapter;
        
        private debtorsTableAdapter _debtorsTableAdapter;
        
        private glTableAdapter _glTableAdapter;
        
        private gl_categoryTableAdapter _gl_categoryTableAdapter;
        
        private gl_txnsTableAdapter _gl_txnsTableAdapter;
        
        private INVOICE_HEADERTableAdapter _iNVOICE_HEADERTableAdapter;
        
        private invoice_itemsTableAdapter _invoice_itemsTableAdapter;
        
        private payment_typeTableAdapter _payment_typeTableAdapter;
        
        private product_typeTableAdapter _product_typeTableAdapter;
        
        private productsTableAdapter _productsTableAdapter;
        
        private sqlite_sequenceTableAdapter _sqlite_sequenceTableAdapter;
        
        private customer_transTableAdapter _customer_transTableAdapter;
        
        private debtors_summaryTableAdapter _debtors_summaryTableAdapter;
        
        private SalesSummary1TableAdapter _salesSummary1TableAdapter;
        
        private ProductSalesSummaryTableAdapter _productSalesSummaryTableAdapter;
        
        private ProductSalesReportTableAdapter _productSalesReportTableAdapter;
        
        private PaymentAdjustRptTableAdapter _paymentAdjustRptTableAdapter;
        
        private INVOICE_RECIEPTSTableAdapter _iNVOICE_RECIEPTSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public configurationTableAdapter configurationTableAdapter {
            get {
                return this._configurationTableAdapter;
            }
            set {
                this._configurationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public customerTableAdapter customerTableAdapter {
            get {
                return this._customerTableAdapter;
            }
            set {
                this._customerTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public debtorsTableAdapter debtorsTableAdapter {
            get {
                return this._debtorsTableAdapter;
            }
            set {
                this._debtorsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public glTableAdapter glTableAdapter {
            get {
                return this._glTableAdapter;
            }
            set {
                this._glTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public gl_categoryTableAdapter gl_categoryTableAdapter {
            get {
                return this._gl_categoryTableAdapter;
            }
            set {
                this._gl_categoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public gl_txnsTableAdapter gl_txnsTableAdapter {
            get {
                return this._gl_txnsTableAdapter;
            }
            set {
                this._gl_txnsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INVOICE_HEADERTableAdapter INVOICE_HEADERTableAdapter {
            get {
                return this._iNVOICE_HEADERTableAdapter;
            }
            set {
                this._iNVOICE_HEADERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public invoice_itemsTableAdapter invoice_itemsTableAdapter {
            get {
                return this._invoice_itemsTableAdapter;
            }
            set {
                this._invoice_itemsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public payment_typeTableAdapter payment_typeTableAdapter {
            get {
                return this._payment_typeTableAdapter;
            }
            set {
                this._payment_typeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public product_typeTableAdapter product_typeTableAdapter {
            get {
                return this._product_typeTableAdapter;
            }
            set {
                this._product_typeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public productsTableAdapter productsTableAdapter {
            get {
                return this._productsTableAdapter;
            }
            set {
                this._productsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public sqlite_sequenceTableAdapter sqlite_sequenceTableAdapter {
            get {
                return this._sqlite_sequenceTableAdapter;
            }
            set {
                this._sqlite_sequenceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public customer_transTableAdapter customer_transTableAdapter {
            get {
                return this._customer_transTableAdapter;
            }
            set {
                this._customer_transTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public debtors_summaryTableAdapter debtors_summaryTableAdapter {
            get {
                return this._debtors_summaryTableAdapter;
            }
            set {
                this._debtors_summaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SalesSummary1TableAdapter SalesSummary1TableAdapter {
            get {
                return this._salesSummary1TableAdapter;
            }
            set {
                this._salesSummary1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductSalesSummaryTableAdapter ProductSalesSummaryTableAdapter {
            get {
                return this._productSalesSummaryTableAdapter;
            }
            set {
                this._productSalesSummaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductSalesReportTableAdapter ProductSalesReportTableAdapter {
            get {
                return this._productSalesReportTableAdapter;
            }
            set {
                this._productSalesReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PaymentAdjustRptTableAdapter PaymentAdjustRptTableAdapter {
            get {
                return this._paymentAdjustRptTableAdapter;
            }
            set {
                this._paymentAdjustRptTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INVOICE_RECIEPTSTableAdapter INVOICE_RECIEPTSTableAdapter {
            get {
                return this._iNVOICE_RECIEPTSTableAdapter;
            }
            set {
                this._iNVOICE_RECIEPTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._configurationTableAdapter != null) 
                            && (this._configurationTableAdapter.Connection != null))) {
                    return this._configurationTableAdapter.Connection;
                }
                if (((this._customerTableAdapter != null) 
                            && (this._customerTableAdapter.Connection != null))) {
                    return this._customerTableAdapter.Connection;
                }
                if (((this._debtorsTableAdapter != null) 
                            && (this._debtorsTableAdapter.Connection != null))) {
                    return this._debtorsTableAdapter.Connection;
                }
                if (((this._glTableAdapter != null) 
                            && (this._glTableAdapter.Connection != null))) {
                    return this._glTableAdapter.Connection;
                }
                if (((this._gl_categoryTableAdapter != null) 
                            && (this._gl_categoryTableAdapter.Connection != null))) {
                    return this._gl_categoryTableAdapter.Connection;
                }
                if (((this._gl_txnsTableAdapter != null) 
                            && (this._gl_txnsTableAdapter.Connection != null))) {
                    return this._gl_txnsTableAdapter.Connection;
                }
                if (((this._iNVOICE_HEADERTableAdapter != null) 
                            && (this._iNVOICE_HEADERTableAdapter.Connection != null))) {
                    return this._iNVOICE_HEADERTableAdapter.Connection;
                }
                if (((this._invoice_itemsTableAdapter != null) 
                            && (this._invoice_itemsTableAdapter.Connection != null))) {
                    return this._invoice_itemsTableAdapter.Connection;
                }
                if (((this._payment_typeTableAdapter != null) 
                            && (this._payment_typeTableAdapter.Connection != null))) {
                    return this._payment_typeTableAdapter.Connection;
                }
                if (((this._product_typeTableAdapter != null) 
                            && (this._product_typeTableAdapter.Connection != null))) {
                    return this._product_typeTableAdapter.Connection;
                }
                if (((this._productsTableAdapter != null) 
                            && (this._productsTableAdapter.Connection != null))) {
                    return this._productsTableAdapter.Connection;
                }
                if (((this._sqlite_sequenceTableAdapter != null) 
                            && (this._sqlite_sequenceTableAdapter.Connection != null))) {
                    return this._sqlite_sequenceTableAdapter.Connection;
                }
                if (((this._customer_transTableAdapter != null) 
                            && (this._customer_transTableAdapter.Connection != null))) {
                    return this._customer_transTableAdapter.Connection;
                }
                if (((this._debtors_summaryTableAdapter != null) 
                            && (this._debtors_summaryTableAdapter.Connection != null))) {
                    return this._debtors_summaryTableAdapter.Connection;
                }
                if (((this._salesSummary1TableAdapter != null) 
                            && (this._salesSummary1TableAdapter.Connection != null))) {
                    return this._salesSummary1TableAdapter.Connection;
                }
                if (((this._productSalesSummaryTableAdapter != null) 
                            && (this._productSalesSummaryTableAdapter.Connection != null))) {
                    return this._productSalesSummaryTableAdapter.Connection;
                }
                if (((this._productSalesReportTableAdapter != null) 
                            && (this._productSalesReportTableAdapter.Connection != null))) {
                    return this._productSalesReportTableAdapter.Connection;
                }
                if (((this._paymentAdjustRptTableAdapter != null) 
                            && (this._paymentAdjustRptTableAdapter.Connection != null))) {
                    return this._paymentAdjustRptTableAdapter.Connection;
                }
                if (((this._iNVOICE_RECIEPTSTableAdapter != null) 
                            && (this._iNVOICE_RECIEPTSTableAdapter.Connection != null))) {
                    return this._iNVOICE_RECIEPTSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._configurationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._customerTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._debtorsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._glTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gl_categoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gl_txnsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNVOICE_HEADERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._invoice_itemsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._payment_typeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._product_typeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._productsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._customer_transTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._debtors_summaryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._salesSummary1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._productSalesSummaryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._productSalesReportTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._paymentAdjustRptTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._debtors_summaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.debtors_summary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._debtors_summaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNVOICE_HEADERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INVOICE_HEADER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNVOICE_HEADERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.products.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._salesSummary1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SalesSummary1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._salesSummary1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productSalesReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ProductSalesReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productSalesReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._paymentAdjustRptTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PaymentAdjustRpt.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._paymentAdjustRptTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productSalesSummaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ProductSalesSummary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productSalesSummaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INVOICE_RECIEPTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNVOICE_RECIEPTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._customer_transTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.customer_trans.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customer_transTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gl_categoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.gl_category.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gl_categoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gl_txnsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.gl_txns.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gl_txnsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._debtorsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.debtors.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._debtorsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._glTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.gl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._glTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._invoice_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.invoice_items.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._invoice_itemsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._configurationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.configuration.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._configurationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._payment_typeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.payment_type.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._payment_typeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._debtors_summaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.debtors_summary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._debtors_summaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNVOICE_HEADERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INVOICE_HEADER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNVOICE_HEADERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.products.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._salesSummary1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SalesSummary1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._salesSummary1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productSalesReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ProductSalesReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productSalesReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._paymentAdjustRptTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PaymentAdjustRpt.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._paymentAdjustRptTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productSalesSummaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ProductSalesSummary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productSalesSummaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INVOICE_RECIEPTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNVOICE_RECIEPTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._customer_transTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.customer_trans.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customer_transTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gl_categoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.gl_category.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gl_categoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gl_txnsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.gl_txns.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gl_txnsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._debtorsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.debtors.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._debtorsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._glTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.gl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._glTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._invoice_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.invoice_items.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._invoice_itemsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._configurationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.configuration.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._configurationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._payment_typeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.payment_type.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._payment_typeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._payment_typeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.payment_type.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._payment_typeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._configurationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.configuration.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._configurationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._invoice_itemsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.invoice_items.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._invoice_itemsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._glTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.gl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._glTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._debtorsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.debtors.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._debtorsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gl_txnsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.gl_txns.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gl_txnsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gl_categoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.gl_category.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gl_categoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customer_transTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.customer_trans.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customer_transTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INVOICE_RECIEPTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNVOICE_RECIEPTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._productSalesSummaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ProductSalesSummary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productSalesSummaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._paymentAdjustRptTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PaymentAdjustRpt.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._paymentAdjustRptTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._productSalesReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ProductSalesReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productSalesReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._salesSummary1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SalesSummary1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._salesSummary1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._productsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.products.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customerTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.customer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customerTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNVOICE_HEADERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INVOICE_HEADER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNVOICE_HEADERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._debtors_summaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.debtors_summary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._debtors_summaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._configurationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._configurationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._customerTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customerTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._debtorsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._debtorsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._glTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._glTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gl_categoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gl_categoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gl_txnsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gl_txnsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iNVOICE_HEADERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNVOICE_HEADERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._invoice_itemsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._invoice_itemsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._payment_typeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._payment_typeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._product_typeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._product_typeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._productsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sqlite_sequenceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sqlite_sequenceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._customer_transTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customer_transTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._debtors_summaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._debtors_summaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._salesSummary1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._salesSummary1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._productSalesSummaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productSalesSummaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._productSalesReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productSalesReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._paymentAdjustRptTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._paymentAdjustRptTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iNVOICE_RECIEPTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNVOICE_RECIEPTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._configurationTableAdapter != null)) {
                    revertConnections.Add(this._configurationTableAdapter, this._configurationTableAdapter.Connection);
                    this._configurationTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._configurationTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._configurationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._configurationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._configurationTableAdapter.Adapter);
                    }
                }
                if ((this._customerTableAdapter != null)) {
                    revertConnections.Add(this._customerTableAdapter, this._customerTableAdapter.Connection);
                    this._customerTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._customerTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._customerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customerTableAdapter.Adapter);
                    }
                }
                if ((this._debtorsTableAdapter != null)) {
                    revertConnections.Add(this._debtorsTableAdapter, this._debtorsTableAdapter.Connection);
                    this._debtorsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._debtorsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._debtorsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._debtorsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._debtorsTableAdapter.Adapter);
                    }
                }
                if ((this._glTableAdapter != null)) {
                    revertConnections.Add(this._glTableAdapter, this._glTableAdapter.Connection);
                    this._glTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._glTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._glTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._glTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._glTableAdapter.Adapter);
                    }
                }
                if ((this._gl_categoryTableAdapter != null)) {
                    revertConnections.Add(this._gl_categoryTableAdapter, this._gl_categoryTableAdapter.Connection);
                    this._gl_categoryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._gl_categoryTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._gl_categoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gl_categoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gl_categoryTableAdapter.Adapter);
                    }
                }
                if ((this._gl_txnsTableAdapter != null)) {
                    revertConnections.Add(this._gl_txnsTableAdapter, this._gl_txnsTableAdapter.Connection);
                    this._gl_txnsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._gl_txnsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._gl_txnsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gl_txnsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gl_txnsTableAdapter.Adapter);
                    }
                }
                if ((this._iNVOICE_HEADERTableAdapter != null)) {
                    revertConnections.Add(this._iNVOICE_HEADERTableAdapter, this._iNVOICE_HEADERTableAdapter.Connection);
                    this._iNVOICE_HEADERTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._iNVOICE_HEADERTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._iNVOICE_HEADERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNVOICE_HEADERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNVOICE_HEADERTableAdapter.Adapter);
                    }
                }
                if ((this._invoice_itemsTableAdapter != null)) {
                    revertConnections.Add(this._invoice_itemsTableAdapter, this._invoice_itemsTableAdapter.Connection);
                    this._invoice_itemsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._invoice_itemsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._invoice_itemsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._invoice_itemsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._invoice_itemsTableAdapter.Adapter);
                    }
                }
                if ((this._payment_typeTableAdapter != null)) {
                    revertConnections.Add(this._payment_typeTableAdapter, this._payment_typeTableAdapter.Connection);
                    this._payment_typeTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._payment_typeTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._payment_typeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._payment_typeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._payment_typeTableAdapter.Adapter);
                    }
                }
                if ((this._product_typeTableAdapter != null)) {
                    revertConnections.Add(this._product_typeTableAdapter, this._product_typeTableAdapter.Connection);
                    this._product_typeTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._product_typeTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._product_typeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._product_typeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._product_typeTableAdapter.Adapter);
                    }
                }
                if ((this._productsTableAdapter != null)) {
                    revertConnections.Add(this._productsTableAdapter, this._productsTableAdapter.Connection);
                    this._productsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._productsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._productsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productsTableAdapter.Adapter);
                    }
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    revertConnections.Add(this._sqlite_sequenceTableAdapter, this._sqlite_sequenceTableAdapter.Connection);
                    this._sqlite_sequenceTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._sqlite_sequenceTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._sqlite_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sqlite_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sqlite_sequenceTableAdapter.Adapter);
                    }
                }
                if ((this._customer_transTableAdapter != null)) {
                    revertConnections.Add(this._customer_transTableAdapter, this._customer_transTableAdapter.Connection);
                    this._customer_transTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._customer_transTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._customer_transTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customer_transTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customer_transTableAdapter.Adapter);
                    }
                }
                if ((this._debtors_summaryTableAdapter != null)) {
                    revertConnections.Add(this._debtors_summaryTableAdapter, this._debtors_summaryTableAdapter.Connection);
                    this._debtors_summaryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._debtors_summaryTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._debtors_summaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._debtors_summaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._debtors_summaryTableAdapter.Adapter);
                    }
                }
                if ((this._salesSummary1TableAdapter != null)) {
                    revertConnections.Add(this._salesSummary1TableAdapter, this._salesSummary1TableAdapter.Connection);
                    this._salesSummary1TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._salesSummary1TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._salesSummary1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._salesSummary1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._salesSummary1TableAdapter.Adapter);
                    }
                }
                if ((this._productSalesSummaryTableAdapter != null)) {
                    revertConnections.Add(this._productSalesSummaryTableAdapter, this._productSalesSummaryTableAdapter.Connection);
                    this._productSalesSummaryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._productSalesSummaryTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._productSalesSummaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productSalesSummaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productSalesSummaryTableAdapter.Adapter);
                    }
                }
                if ((this._productSalesReportTableAdapter != null)) {
                    revertConnections.Add(this._productSalesReportTableAdapter, this._productSalesReportTableAdapter.Connection);
                    this._productSalesReportTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._productSalesReportTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._productSalesReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productSalesReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productSalesReportTableAdapter.Adapter);
                    }
                }
                if ((this._paymentAdjustRptTableAdapter != null)) {
                    revertConnections.Add(this._paymentAdjustRptTableAdapter, this._paymentAdjustRptTableAdapter.Connection);
                    this._paymentAdjustRptTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._paymentAdjustRptTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._paymentAdjustRptTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._paymentAdjustRptTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._paymentAdjustRptTableAdapter.Adapter);
                    }
                }
                if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                    revertConnections.Add(this._iNVOICE_RECIEPTSTableAdapter, this._iNVOICE_RECIEPTSTableAdapter.Connection);
                    this._iNVOICE_RECIEPTSTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._iNVOICE_RECIEPTSTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._iNVOICE_RECIEPTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNVOICE_RECIEPTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNVOICE_RECIEPTSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._configurationTableAdapter != null)) {
                    this._configurationTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._configurationTableAdapter]));
                    this._configurationTableAdapter.Transaction = null;
                }
                if ((this._customerTableAdapter != null)) {
                    this._customerTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._customerTableAdapter]));
                    this._customerTableAdapter.Transaction = null;
                }
                if ((this._debtorsTableAdapter != null)) {
                    this._debtorsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._debtorsTableAdapter]));
                    this._debtorsTableAdapter.Transaction = null;
                }
                if ((this._glTableAdapter != null)) {
                    this._glTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._glTableAdapter]));
                    this._glTableAdapter.Transaction = null;
                }
                if ((this._gl_categoryTableAdapter != null)) {
                    this._gl_categoryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._gl_categoryTableAdapter]));
                    this._gl_categoryTableAdapter.Transaction = null;
                }
                if ((this._gl_txnsTableAdapter != null)) {
                    this._gl_txnsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._gl_txnsTableAdapter]));
                    this._gl_txnsTableAdapter.Transaction = null;
                }
                if ((this._iNVOICE_HEADERTableAdapter != null)) {
                    this._iNVOICE_HEADERTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._iNVOICE_HEADERTableAdapter]));
                    this._iNVOICE_HEADERTableAdapter.Transaction = null;
                }
                if ((this._invoice_itemsTableAdapter != null)) {
                    this._invoice_itemsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._invoice_itemsTableAdapter]));
                    this._invoice_itemsTableAdapter.Transaction = null;
                }
                if ((this._payment_typeTableAdapter != null)) {
                    this._payment_typeTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._payment_typeTableAdapter]));
                    this._payment_typeTableAdapter.Transaction = null;
                }
                if ((this._product_typeTableAdapter != null)) {
                    this._product_typeTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._product_typeTableAdapter]));
                    this._product_typeTableAdapter.Transaction = null;
                }
                if ((this._productsTableAdapter != null)) {
                    this._productsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._productsTableAdapter]));
                    this._productsTableAdapter.Transaction = null;
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    this._sqlite_sequenceTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._sqlite_sequenceTableAdapter]));
                    this._sqlite_sequenceTableAdapter.Transaction = null;
                }
                if ((this._customer_transTableAdapter != null)) {
                    this._customer_transTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._customer_transTableAdapter]));
                    this._customer_transTableAdapter.Transaction = null;
                }
                if ((this._debtors_summaryTableAdapter != null)) {
                    this._debtors_summaryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._debtors_summaryTableAdapter]));
                    this._debtors_summaryTableAdapter.Transaction = null;
                }
                if ((this._salesSummary1TableAdapter != null)) {
                    this._salesSummary1TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._salesSummary1TableAdapter]));
                    this._salesSummary1TableAdapter.Transaction = null;
                }
                if ((this._productSalesSummaryTableAdapter != null)) {
                    this._productSalesSummaryTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._productSalesSummaryTableAdapter]));
                    this._productSalesSummaryTableAdapter.Transaction = null;
                }
                if ((this._productSalesReportTableAdapter != null)) {
                    this._productSalesReportTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._productSalesReportTableAdapter]));
                    this._productSalesReportTableAdapter.Transaction = null;
                }
                if ((this._paymentAdjustRptTableAdapter != null)) {
                    this._paymentAdjustRptTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._paymentAdjustRptTableAdapter]));
                    this._paymentAdjustRptTableAdapter.Transaction = null;
                }
                if ((this._iNVOICE_RECIEPTSTableAdapter != null)) {
                    this._iNVOICE_RECIEPTSTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._iNVOICE_RECIEPTSTableAdapter]));
                    this._iNVOICE_RECIEPTSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591